#
# Copyright (c) 2017 Juniper Networks, Inc. All rights reserved.
#

import os
import sys
import subprocess
from distutils.file_util import copy_file

env = DefaultEnvironment()

vpath = '#third_party/rabbitmq-c'
output_dir = Dir('.').abspath

if sys.platform == 'win32':
    librabbit = 'librabbitmq.4.lib'
    target_file = 'rabbitmq-c.sln'
else:
    librabbit = 'librabbitmq.a'
    target_file = 'Makefile'

product_libs = [File('#build/lib/' + librabbit).abspath]
if sys.platform == 'win32':
    product_libs.append(File('#build/lib/rabbitmq.lib').abspath)

cmake_flags = [
    '-DBUILD_SHARED_LIBS=OFF',
    '-DBUILD_EXAMPLES=OFF',
    '-DBUILD_STATIC_LIBS=ON',
    '-DENABLE_SSL_SUPPORT=ON',
    '-DCMAKE_INSTALL_PREFIX=' + Dir('#build').abspath,
]

if sys.platform == 'win32':
    cmake_flags.extend([
        '-DCMAKE_GENERATOR_PLATFORM=x64',
        '-DCMAKE_BUILD_TYPE=' + env['VS_BUILDMODE'],
        '-DOPENSSL_INCLUDE_DIR=' + Dir('#build/include').abspath,
        '-DOPENSSL_ROOT_DIR=' + Dir('#build/lib').abspath,
    ])

header_files = [
    'amqp.h',
    'amqp_framing.h',
    'amqp_tcp_socket.h',
    'amqp_ssl_socket.h',
]

header_files = [File('#build/include/' + h).abspath for h in header_files]

def build_rabbitmq_c_cmd(target, source, env):
    subprocess.call(['cmake'] + cmake_flags + [Dir(vpath).abspath], cwd=output_dir)
    subprocess.call(['cmake', '--build', '.', '--target', 'install'], cwd=output_dir)

    if sys.platform == 'win32':
        copy_file(File('#build/lib/' + librabbit).abspath, File('#build/lib/rabbitmq.lib').abspath)

targets = product_libs + [target_file] + header_files
librabbitmq = env.Command(targets, str(Dir(vpath)), build_rabbitmq_c_cmd)
