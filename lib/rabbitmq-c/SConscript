#
# Copyright (c) 2017 Juniper Networks, Inc. All rights reserved.
#

import os
import sys
import subprocess
from distutils.file_util import copy_file

env = DefaultEnvironment()

vpath = '#/third_party/rabbitmq-c'
output_dir = Dir('.').abspath
include_dir = os.path.join(output_dir, 'include')

if sys.platform == 'win32':
    librabbit = 'librabbitmq.4.lib'
    target_file = 'rabbitmq-c.sln'
else:
    librabbit = 'librabbitmq.a'
    target_file = 'Makefile'

product_libs = [os.path.join(Dir('#build/lib/').abspath, librabbit)]
if sys.platform == 'win32':
    product_libs.append(File('#build/lib/rabbitmq.lib').abspath)

make_flags = [
    '-DBUILD_SHARED_LIBS=OFF',
    '-DBUILD_EXAMPLES=OFF',
    '-DBUILD_STATIC_LIBS=ON',
    '-DENABLE_SSL_SUPPORT=ON',
    '-DCMAKE_INSTALL_PREFIX=' + output_dir,
    '-DCMAKE_INSTALL_LIBDIR=' + output_dir,
]

if sys.platform == 'win32':
    if env['OPT'] == 'production':
        build_type = 'Release'
    elif env['OPT'] == 'debug':
        build_type = 'Debug'

    make_flags.extend([
        '-DCMAKE_GENERATOR_PLATFORM=x64',
        '-DCMAKE_BUILD_TYPE=' + build_type,
        '-DOPENSSL_INCLUDE_DIR=' + Dir('#build/include').abspath,
        '-DOPENSSL_ROOT_DIR=' + Dir('#build/lib').abspath,
    ])

header_files = [
    'amqp.h',
    'amqp_framing.h',
    'amqp_tcp_socket.h',
    'amqp_ssl_socket.h',
]

def build_rabbitmq_c_cmd(target, source, env):
    subprocess.call(['cmake'] + make_flags + [Dir(vpath).abspath], cwd=output_dir)
    subprocess.call(['cmake', '--build', '.', '--target', 'install'], cwd=output_dir)

    for header_file in header_files:
        copy_file(os.path.join(include_dir, header_file), Dir('#build/include').abspath)

    for product_lib in product_libs:
        copy_file(os.path.join(output_dir, librabbit), product_lib)

librabbitmq = env.Command(target_file, str(Dir(vpath)), build_rabbitmq_c_cmd)

env.SideEffect(product_libs, librabbitmq)
