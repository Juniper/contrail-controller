# -*- mode: python; -*-
# Copyright (c) 2014 Semihalf.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

import sys

env = DefaultEnvironment().Clone()

src_path = Dir('#/third_party/icu/source').abspath
cd_cmd = 'cd ' + Dir('.').path + ' && '

configure_command = cd_cmd + src_path + '/configure --prefix=' + \
    str(Dir('#/build'))

if sys.platform.startswith('freebsd'):
    # Force using gcc instead of clang (eliminates conflicts between ABI
    # libraries libsupc++ vs libcxxrt)
    env['ENV']['CC'] = 'gcc'
    env['ENV']['CXX'] = 'g++'
    make_command = cd_cmd + 'gmake clean && gmake && gmake install'
else:
    make_command = cd_cmd + 'make clean && make && make install'

targets = [
    '#/build/lib/libicui18n' + env['LIBSUFFIX'],
    '#/build/lib/libicudata' + env['LIBSUFFIX'],
    '#/build/lib/libicuuc' + env['LIBSUFFIX']
]

build_command = ';'.join([configure_command, make_command])

configure = env.Command('source/config.status', src_path, build_command)
env.SideEffect(targets, configure)
