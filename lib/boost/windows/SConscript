#
# Copyright (c) 2019 Juniper Networks, Inc. All rights reserved.
#

# windows reference: http://www.boost.org/doc/libs/1_62_0/more/getting_started/windows.html

import os
import sys
import shutil

boost_root = os.getenv('BOOST_ROOT')
if boost_root is None:
    print('BOOST_ROOT environment variable is not set')
    sys.exit(1)

env = DefaultEnvironment()

if env['OPT'] == 'debug':
    lib_file_flag = '-gd'
elif env['OPT'] == 'production':
    lib_file_flag = ''

libpath = Dir(boost_root).abspath
if not os.path.exists(libpath):
    print('%s not present' % libpath)
    sys.exit(1)

libraries = [
    'system',
    'program_options',
    'regex',
    'date_time',
    'thread',
    'filesystem',
    'chrono',
]

lib_dir = '#build/lib/'
bin_dir = '#build/bin/'

from_arr = []
to_arr = []
for library in libraries:
    long_library_name = 'boost_{}-vc140-mt{}-1_62'.format(library, lib_file_flag)

    from_arr.append(boost_root + '/lib64-msvc-14.0/' + long_library_name + '.lib')
    to_arr.append(File(lib_dir + 'boost_' + library + '.lib'))

    from_arr.append(from_arr[-1])
    to_arr.append(File(lib_dir + long_library_name + '.lib'))

    from_arr.append(boost_root + '/lib64-msvc-14.0/' + long_library_name + '.dll')
    to_arr.append(File(bin_dir + long_library_name + '.dll'))

def prepare_boost_libs(target, source, env):
    for i in range(len(from_arr)):
        shutil.copyfile(from_arr[i], to_arr[i].abspath)

boost_command = env.Command(to_arr, Dir(boost_root), prepare_boost_libs)
env.Alias('boost', boost_command)
