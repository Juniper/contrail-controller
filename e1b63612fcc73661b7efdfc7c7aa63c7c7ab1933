{
  "comments": [
    {
      "key": {
        "uuid": "3c4f29a6_2557c360",
        "filename": "src/config/api-server/vnc_cfg_api_server/resources/bgp_as_a_service.py",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 10
      },
      "writtenOn": "2019-07-19T15:04:36Z",
      "side": 1,
      "message": "nit: if you use that GlobalSystemServer method from another class, that method is not anymore private and should not prefix it with an underscore.\nAnother possible solution could be to create a mixin class (like vnc_cfg_api-server.resources._asn_mixin.AsnMixin) for that check_asn_range method which needed classes (GlobalSystemServer, BgpAsAServiceServer and BgpRouterServer) inherits from.",
      "range": {
        "startLine": 38,
        "startChar": 46,
        "endLine": 38,
        "endChar": 62
      },
      "revId": "e1b63612fcc73661b7efdfc7c7aa63c7c7ab1933",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66d0ce35_3f0d4d35",
        "filename": "src/config/api-server/vnc_cfg_api_server/resources/bgp_as_a_service.py",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 10
      },
      "writtenOn": "2019-07-19T15:04:36Z",
      "side": 1,
      "message": "nit:\n return GlobalSystemConfigServer._check_asn_range(local_asn)",
      "range": {
        "startLine": 39,
        "startChar": 8,
        "endLine": 42,
        "endChar": 23
      },
      "revId": "e1b63612fcc73661b7efdfc7c7aa63c7c7ab1933",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c187e282_952399bd",
        "filename": "src/config/api-server/vnc_cfg_api_server/resources/global_system_config.py",
        "patchSetId": 5
      },
      "lineNbr": 75,
      "author": {
        "id": 10
      },
      "writtenOn": "2019-07-19T15:04:36Z",
      "side": 1,
      "message": "I think that could raise a KeyError exception if that prop was not set when global GSC was created or updated.\n\n enable_4byte_as \u003d result.get(\u0027enable_4byte_as\u0027, True)",
      "range": {
        "startLine": 75,
        "startChar": 26,
        "endLine": 75,
        "endChar": 51
      },
      "revId": "e1b63612fcc73661b7efdfc7c7aa63c7c7ab1933",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    }
  ]
}