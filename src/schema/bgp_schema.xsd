<!--
 Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
 -->
<xsd:schema 
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:bgp="http://www.contrailsystems.com/2012/BGP-CONFIG/0"
    xmlns:smi="urn:ietf:params:xml:ns:opsawg:smi:base:1.0">

<xsd:include schemaLocation='ietf-l3vpn-schema.xsd'/>
<xsd:include schemaLocation='smi-base.xsd'/>
<xsd:include schemaLocation='routing_policy.xsd'/>

<!-- routing-instance: group of customer attachment points with the same
     connectivity policies -->
<!-- Route Target extended community:"bgp:route-target"  -->
<!-- VPN attachment interface on Customer Edge:"customer-attachment" -->
<!-- VPN attachment interface on Provider Edge:"provider-attachment" --> 

<!--#IFMAP-SEMANTICS-IDL
    Link('connection', 'routing-instance', 'routing-instance', ['ref']) -->
<!--#IFMAP-SEMANTICS-IDL 
    Link('instance-target', 'routing-instance', 'route-target', ['ref']) -->
<xsd:element name="bgpaas-bgp-router"/>
<!--#IFMAP-SEMANTICS-IDL
    Link('bgpaas-bgp-router', 'bgp-as-a-service', 'bgp-router', ['ref']) -->

<xsd:element name="route-aggregate" type="ifmap:IdentityType"/>

<xsd:complexType name="RouteListType">
    <xsd:element name="route" type="xsd:string" maxOccurs="unbounded"/>
</xsd:complexType>

<xsd:element name='aggregate-route-entries' type='RouteListType'/>
<!--#IFMAP-SEMANTICS-IDL
     Property('aggregate-route-entries', 'route-aggregate') -->

<xsd:element name='aggregate-route-nexthop' type='xsd:string'/>
<!--#IFMAP-SEMANTICS-IDL
     Property('aggregate-route-nexthop', 'route-aggregate') -->

<xsd:element name="route-aggregate-routing-instance"/>
<!--#IFMAP-SEMANTICS-IDL
     Link('route-aggregate-routing-instance',
          'route-aggregate', 'routing-instance', ['ref']) -->

<xsd:simpleType name="SequenceNumberType">
    <xsd:annotation>
        <xsd:documentation>
            Sequence defines the position of an element in an ordered list
            It could be used as string representation of floating number
            or any string in lexicographic order.
            e.g.1: "1.01" or "0.1"
            In this above case element with "0.1" is inserted before "1.01"
            e.g.1: "abc" or "abcd"
            In this above case element with "abc" is inserted before "abcd"
        </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
</xsd:simpleType>

<xsd:complexType name="RoutingPolicyType">
    <xsd:element name="sequence" type="SequenceNumberType"/>
</xsd:complexType>

<xsd:element name="routing-policy-routing-instance" type="RoutingPolicyType"/>
<!--#IFMAP-SEMANTICS-IDL
     Link('routing-policy-routing-instance',
          'routing-policy', 'routing-instance', ['ref']) -->

<!--#IFMAP-SEMANTICS-IDL 
    Property('default-ce-protocol', 'routing-instance') -->
<!--#IFMAP-SEMANTICS-IDL 
    Link('binding', 'customer-attachment', 'routing-instance', []) -->
<!--#IFMAP-SEMANTICS-IDL 
    Property('attachment-address', 'customer-attachment') -->
<!--#IFMAP-SEMANTICS-IDL 
    Link('attachment-info', 'customer-attachment', 'provider-attachment', []) -->

<xsd:element name='bgp-router' type='IdentityType'/>
<xsd:element name='bgp-router-parameters' type='BgpRouterParams'/>
<!-- #IFMAP-SEMANTICS-IDL
     Property('bgp-router-parameters', 'bgp-router') -->

<xsd:simpleType name='BgpHoldTime'>
    <xsd:annotation>
        <xsd:documentation>
            A value of 0 is treated as unspecified. If the hold time is not
            specified in BgpSessionAttributes or BgpRouterParams, the back
            end uses a hard coded value of StateMachine::kHoldTime.
        </xsd:documentation>
    </xsd:annotation>
     <xsd:restriction base='xsd:integer'>
         <xsd:minInclusive value='0'/>
         <xsd:maxInclusive value='65535'/>
     </xsd:restriction>
</xsd:simpleType> 

<xsd:simpleType name='BgpRouterType'>
    <xsd:restriction base="xsd:string">
        <xsd:enumeration value="control-node"/>
        <xsd:enumeration value="external-control-node"/>
        <xsd:enumeration value="router"/>
        <xsd:enumeration value="bgpaas-server"/>
        <xsd:enumeration value="bgpaas-client"/>
    </xsd:restriction>
</xsd:simpleType>

<xsd:complexType name='BgpRouterParams'>
    <xsd:element name="admin-down" type="xsd:boolean" default="false"/>
    <xsd:element name='vendor' type='xsd:string'/>
    <xsd:element name='autonomous-system' type='xsd:integer'/>
    <xsd:element name='identifier' type='smi:IpAddress'/>
    <xsd:element name='address' type='smi:IpAddress'/>
    <xsd:element name='port' type='xsd:integer'/>
    <xsd:element name='source-port' type='xsd:integer'/>
    <xsd:element name='hold-time' type='BgpHoldTime' default='90'/>
    <xsd:element name='address-families' type='AddressFamilies'/>
    <xsd:element name='auth-data' type='AuthenticationData'/>
    <xsd:element name='local-autonomous-system' type='xsd:integer'/>
    <xsd:element name='router-type' type='BgpRouterType'/>
</xsd:complexType>

<xsd:element name='instance-bgp-router'/>
<!-- #IFMAP-SEMANTICS-IDL
     Link('instance-bgp-router', 'routing-instance',
          'bgp-router', ['has']) -->

<xsd:element name='bgp-peering' type='BgpPeeringAttributes'/>
<!-- #IFMAP-SEMANTICS-IDL
     Link('bgp-peering',
          'bgp-router',  'bgp-router', ['ref']) -->

<!--
	The BgpPeering link defines the attributes for 1 (typically) or more
	sessions between 2 bgp-routers.
  -->
<xsd:complexType name='BgpPeeringAttributes'>
    <xsd:element name='session' type='BgpSession' maxOccurs='unbounded'/>
</xsd:complexType>

<!--
	When multiple sessions are present, each session must have an unique id.
  -->
<xsd:complexType name='BgpSession'>
    <xsd:element name='uuid' type='xsd:string'/>
    <xsd:element name='attributes' type='BgpSessionAttributes' maxOccurs='3'/>
</xsd:complexType>

<xsd:complexType name='BgpSessionAttributes'>
    <xsd:annotation>
        <xsd:documentation>
            When the parameters are uni-directional the bgp-router element
            specifies to which node the configuration applies. If missing
            the attributes apply to both ends of the session.
            A non-zero hold-time overrides the hold-time inherited from the
            bgp-router configuration.
        </xsd:documentation>
    </xsd:annotation>
    <xsd:element name='bgp-router' type='xsd:string'/>
    <xsd:element name="admin-down" type="xsd:boolean" default="false"/>
    <xsd:element name="passive" type="xsd:boolean" default="false"/>
    <xsd:element name='hold-time' type='BgpHoldTime' default='0'/>
    <xsd:element name='loop-count' type='BgpAsPathLoopCount' default='0'/>
    <xsd:element name='address-families' type='AddressFamilies'/>
    <xsd:element name='auth-data' type='AuthenticationData'/>
    <xsd:element name='family-attributes' type='BgpFamilyAttributes' maxOccurs='unbounded'/>
</xsd:complexType>

<xsd:complexType name='BgpFamilyAttributes'>
    <xsd:annotation>
        <xsd:documentation>
            This type is used to configure per address-family parameters
            for a BgpSession.
            * loop-count is the number of times the local bgp-router's AS is
            allowed in the AS_PATH attribute.
            * prefix-limit contains the maximum number of prefixes that are
            allowed to be received on the session.
        </xsd:documentation>
    </xsd:annotation>
    <xsd:element name='address-family' type='AddressFamily'/>
    <xsd:element name='loop-count' type='BgpAsPathLoopCount' default='0'/>
    <xsd:element name='prefix-limit' type='BgpPrefixLimit'/>
</xsd:complexType>

<xsd:simpleType name='BgpAsPathLoopCount'>
     <xsd:restriction base='xsd:integer'>
         <xsd:minInclusive value='0'/>
         <xsd:maxInclusive value='16'/>
     </xsd:restriction>
</xsd:simpleType> 

<xsd:complexType name='BgpPrefixLimit'>
    <xsd:annotation>
        <xsd:documentation>
            This is used to configure the maximum number of received prefixes.
            More fields to control the behavior can be added in future e.g. if
            the session should be torn down when the maximum is reached.
        </xsd:documentation>
    </xsd:annotation>
    <xsd:element name='maximum' type='xsd:integer'/>
</xsd:complexType>

<xsd:simpleType name='AddressFamily'>
    <xsd:restriction base="xsd:string">
        <xsd:enumeration value="inet"/>
        <xsd:enumeration value="inet-vpn"/>
        <xsd:enumeration value="e-vpn"/>
        <xsd:enumeration value="erm-vpn"/>
        <xsd:enumeration value="route-target"/>
        <xsd:enumeration value="inet6"/>
        <xsd:enumeration value="inet6-vpn"/>
    </xsd:restriction>
</xsd:simpleType>

<xsd:complexType name='AddressFamilies'>
    <xsd:element name='family' type='AddressFamily' maxOccurs='unbounded'/>
</xsd:complexType>

<xsd:simpleType name="AuthenticationKeyType">
    <xsd:restriction base='xsd:string'>
        <xsd:enumeration value="md5"/>
    </xsd:restriction>
</xsd:simpleType>

<xsd:simpleType name='AuthenticationKeyId'>
     <xsd:restriction base='xsd:integer'>
         <xsd:minInclusive value='0'/>
         <xsd:maxInclusive value='63'/>
     </xsd:restriction>
</xsd:simpleType> 

<xsd:complexType name="AuthenticationKeyItem">
    <xsd:element name="key-id" type="AuthenticationKeyId"/>
    <xsd:element name="key" type="xsd:string"/>
</xsd:complexType>

<xsd:complexType name='AuthenticationData'>
    <xsd:element name="key-type" type="AuthenticationKeyType"/>
    <xsd:element name='key-items' type='AuthenticationKeyItem' maxOccurs='2'/>
</xsd:complexType>

<xsd:element name='service-chain-information' type='ServiceChainInfo'/>
<!-- #IFMAP-SEMANTICS-IDL
     Property('service-chain-information', 'routing-instance') -->

<xsd:element name='ipv6-service-chain-information' type='ServiceChainInfo'/>
<!-- #IFMAP-SEMANTICS-IDL
     Property('ipv6-service-chain-information', 'routing-instance') -->

<xsd:element name="routing-instance-is-default" type="xsd:boolean" default="false"/>
<!--#IFMAP-SEMANTICS-IDL
     Property('routing-instance-is-default', 'routing-instance') -->

<xsd:element name="routing-instance-has-pnf" type="xsd:boolean"
    default="false"/>
    <xsd:annotation>
        <xsd:documentation>
            This flag is used to indicate that the routing-instance has a
            Physical Network Function (PNF) service associated with it. The
            flag is set by Schema Transformer and examined by Control Node.
            The flag is set if one of the following conditions is met.
            * The routing-instance is created as left/right routing-instance
              for a PNF service.
            * The routing-instance is the default routing-instance of a
              virtual-network that has one or more policies that apply a
              PNF service.
        </xsd:documentation>
    </xsd:annotation>
<!--#IFMAP-SEMANTICS-IDL
     Property('routing-instance-has-pnf', 'routing-instance') -->

<xsd:complexType name="ServiceChainInfo">
    <xsd:all>
        <xsd:element name='routing-instance' type='xsd:string'/>
        <xsd:element name='prefix' type='xsd:string' maxOccurs='unbounded'/>
        <xsd:element name='service-chain-address' type='smi:IpAddress'/>
        <xsd:element name='service-instance' type='xsd:string'/>
        <xsd:element name='source-routing-instance' type='xsd:string'/>
    </xsd:all>
</xsd:complexType>

<xsd:complexType name='StaticRouteType'>
    <xsd:all>
        <xsd:element name='prefix' type='xsd:string'/>
        <xsd:element name='next-hop' type='xsd:string'/>
        <xsd:element name='route-target' type='xsd:string' maxOccurs="unbounded"/>
    </xsd:all>
</xsd:complexType>

<xsd:complexType name="StaticRouteEntriesType">
    <xsd:all>
        <xsd:element name="route" type="StaticRouteType" maxOccurs="unbounded"/>
    </xsd:all>
</xsd:complexType>

<xsd:element name="static-route-entries" type="StaticRouteEntriesType"/>
<!--#IFMAP-SEMANTICS-IDL 
     Property('static-route-entries', 'routing-instance') -->

</xsd:schema>
