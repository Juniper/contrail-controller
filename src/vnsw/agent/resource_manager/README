ResourceManager
---------------
This module mainly responsible for storing the Config data to file using Sandesh encoding.
Please refer for more details.
https://github.com/Juniper/contrail-controller/wiki/Agent-Resource-Manager
Functionality:
-------------
    1) Resotore, Backup and Allocate the resources for config data.
    2) allocates unique index  for each resource this will be used to represent resource index.
        for further reference.
    3) Sandesh module is mainly to encode the data and store in to a file in binary format.
       And read the data from the file and decode it back to respective sandesh maps.
                 ------------------------
        +--------| ResourceManager       |------------+
        |        -----------------------              |
        |                                             |
        |                                             |
        |                                             |
        |                                          -------------
    ---------------------                         |ResourceTable|
    |ResourceBackupManager|------+                 -----^-------
    ---------------------        |                       |
                                 |                       |
                                 |                --------------------
                                 |               |Index ResourceTable|
                                 |                --------^------------
                            -------------------
                            |ResourceSandeshMaps|------+
                            --------------------       |
                                                       |
                                                       |
                                            ------------------------
                                            |    BackUpResourceTable|
                                            -----------^------------
                                                       |
                                                       |
                                            ^--------------------^-------------^--------^
                                            |                    |             |        |
                                        Interfaceresource   routeresource  VRFResource  etc..
modules:

ResourceManager:
---------------
This class is responsible for restore and retaining the config's.
It also triggers the resource allocation by using the key defind by the feature.

Maintains the Restore WorkQueue to restore the data from file.

Restore the data from the file and creates association of Resource Key & data.
And marks the Key as dirty.  Once after receving the Config validates the Resource key
and mark the Key as usable if it exists in config.

Once after downloading the config, EOD RIB Timer notification will come.
After the notification walk through all the entries and remove the  stale.

ResourceTable:
-------------
It maintains Resource Key & data Map table. 

Resource Manager requests, resource table  object to create & delete the resources
based on type of the resources.

IndexResourceTable:
------------------
 This Class maintains the index resource vector for resourcekey.
 
 For every resource key  a unique index will be allocated which will be
 represented as label or it can be represented as respective
 resource Index, This Resource Index will also be used to represent the stored  data
 in the file. Index will be mapped back to index vector after reading from the file.

ResourceBackupManager:
---------------------
This class maintains the WorKQueue for backup data.
All the features which needs to back up the data can enqeue data to this work queue.
ResourceBackupManager reads the data from the WorkQueue and Triggers the data backup to file

BackUpResourceTable:
------------------
Backup Resource Table is a base class. every feature class wants to backup the data
Needs to derive from this class. each of this class maintains table.
contains resource index and Sandesh structure.

Timer is maintained per Backup Resource table.
will be used to trigger Write to file based on idle time out logic.
Trigger will be intiated Only when we don't see any frequent Changes.

In case of modification with in the range of idle time out.
Write will be postponed to next time slot, otherwise Write to file will happens upon
fallback time period.

Hash value will be calculated for the file content. and appended to file name.
This Value will be used to validate while reading the file.

Restoring the Nexthop indexs
---------------------------
Maintained flat Sandesh structure to store all the nexthops
in to file based on the type of the Key nexthop key will be retrived.

Composite Nexthop Sandesh structure maintained separate
as the nexthop resource key is represented diffrent args. Composite next hop is 
retrieved based on the Nhid to label maps parased form CompositeNextHopKey.
