/*
 * Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
 */

/**
 *  Message definitions for vrouter agent config module.
 *
 * Config module implements the north-bound interface for agent.
 * It receives two types of configurations: virtual machine ports and ifmap
 * 
 * Agent sends a subscribe message to controller on port addition, opnes an xmpp
 * connection to controller downloading MAP configuration for the port.
 *
 * All VNC Configuration is stored as MAP (Metadata Access Point) database on controller.
 * The MAP database is accessed using IF-MAP protcol.
 *
 * Config module registers for DBTables of interest from IFMap-Agent-Client library
 * Any add/delete/update of configuration will result in a callback to the Config module
 * which in turn does basic validation on config nodes and triggers operational module.
 *
 */

/**
 * @description: Trace message for interface add/del to config interface table
 * @type: Trace
 * @severity: DEBUG
 */
traceobject sandesh CfgIntfTrace {
    1: string intf;
    2: string vm_name;
    3: string vm;
    4: string vn;
    5: string ip;
    6: string op;
    7: i32 version;
    8: i32 tx_vlan_id;
    9: i32 rx_vlan_id;
    10: string vm_project;
    11: string port_type;
    12: string ip6;
}

/**
 * @description: Trace message for Ifmap graph traversal for port add/del completion
 * @type: Trace
 * @severity: DEBUG
 */
trace sandesh CfgIntfWalkDone {
    1: i32 version;
}

/**
 * @description: Trace message for interface add/del to config interface table
 * @type: Trace
 * @severity: DEBUG
 */
traceobject sandesh CfgIntfErrorTrace {
    1: string err;
}

/**
 * @description: Trace message for Ifmap graph traversal for port add/del to start
 * @type: Trace
 * @severity: DEBUG
 */
trace sandesh CfgIntfWalkStart {
    1: i32 timer_sec;
    2: i32 version;
}

/**
 * @description: Trace message for port information received by agent
 * @type: Trace
 * @severity: DEBUG
 */
trace sandesh CfgIntfInfo {
    1: string info;
}

/**
 * Response message for interface-config table built from port messages
 */
struct SandeshVmiLabelEntry {
    1: string vmi_uuid;
    2: string tap_name;
    3: string vm_label;
    4: string vn_label;
}

response sandesh SandeshVmiLabelTableResp {
    1: list<SandeshVmiLabelEntry> entries;
}

/**
 * Request for showing labels-table created from Oper VMInterface used in
 * kubernetes and mesos
 */
request sandesh SandeshVmiLabelTableReq {
    1: string vm_label;
}

/**
 * Response message for entries in interface-config db-table
 */
struct SandeshInterfaceConfigEntry {
    1: string type
    2: string vmi_uuid;
    3: string vm_label;
    4: string vn_label;
    5: string tap_name;
    6: string last_update_time;
    7: i32 version;
    8: string vmi_type;
    9: string vm_uuid;
   10: string vn_uuid;
   11: string project_uuid;
   12: string ip4_address;
   13: string ip6_address;
   14: string mac_address;
   15: string vm_name;
   16: i32 rx_vlan_id;
   17: i32 tx_vlan_id;
   18: string network_namespace;
   19: string vm_ifname;
}

response sandesh SandeshInterfaceConfigResp {
    1: list<SandeshInterfaceConfigEntry> entries;
}

/**
 * Request for showing labels-table created from Oper VMInterface used in
 * kubernetes and mesos
 */
request sandesh SandeshInterfaceConfigReq {
    1: string tap_name;
    2: string vmi_uuid;
    3: string vm_label;
    4: string vn_label;
}
