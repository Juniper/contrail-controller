#
# Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
#

# -*- mode: python; -*-

import sys
if sys.platform == 'darwin':
    Return()

import re
Import('AgentEnv')
env = AgentEnv.Clone()

# test specific modifications
AgentEnv.MakeTestEnv(env)

targets = env.IFMapAutogen('test_cfg.xsd')
lib_srcs = filter(lambda x: re.match(r'(.*)\.cc$', x.abspath), targets)
env.Library('ifmap_test', lib_srcs)
env.Library('control_node_mock', 'control_node_mock.cc');
env.Library('agent_test_buildinfo', 'test_buildinfo.cc')

test_lib_srcs = ['test_agent_init.cc',
                 'test_init.cc', 
                 'test_util.cc',
                 '../ksync/test/ksync_test.cc',
                 '../uve/test/agent_uve_test.cc',
                 '../uve/test/agent_stats_collector_test.cc',
                 '../uve/test/vm_uve_table_test.cc',
                 '../uve/test/vn_uve_table_test.cc',
                 '../uve/test/vrouter_uve_entry_test.cc']
env.Library('agent_test', test_lib_srcs)

agent_suite = []
test_vn = AgentEnv.MakeTestCmd(env, 'test_vn', agent_suite)
test_vm = AgentEnv.MakeTestCmd(env, 'test_vm', agent_suite)
test_peer_del = AgentEnv.MakeTestCmd(env, 'test_peer_del', agent_suite)
test_vmport_cfg = AgentEnv.MakeTestCmd(env, 'test_vmport_cfg', agent_suite)
test_fip_cfg = AgentEnv.MakeTestCmd(env, 'test_fip_cfg', agent_suite)
#test_stats = AgentEnv.MakeTestCmd(env, 'test_stats', agent_suite)
test_route = AgentEnv.MakeTestCmd(env, 'test_route', agent_suite)
test_l2route = AgentEnv.MakeTestCmd(env, 'test_l2route', agent_suite)
test_cfg = AgentEnv.MakeTestCmd(env, 'test_cfg', agent_suite)
test_xmpp_hv2 = AgentEnv.MakeTestCmd(env, 'test_xmpp_hv2', agent_suite)
test_xmpp_non_hv = AgentEnv.MakeTestCmd(env, 'test_xmpp_non_hv', agent_suite)
test_xmppcs_hv = AgentEnv.MakeTestCmd(env, 'test_xmppcs_hv', agent_suite)
test_xmppcs_non_hv = AgentEnv.MakeTestCmd(env, 'test_xmppcs_non_hv',
                                           agent_suite)
#test_xmpp_ifmap = AgentEnv.MakeTestCmd(env, 'test_xmpp_ifmap', agent_suite)
#test_xmppcs_ifmap = AgentEnv.MakeTestCmd(env, 'test_xmppcs_ifmap', agent_suite)
#test_bgp = AgentEnv.MakeTestCmd(env, 'test_bgp', agent_suite)
test_vrf = AgentEnv.MakeTestCmd(env, 'test_vrf', agent_suite)
test_vhost_ip_change = AgentEnv.MakeTestCmd(env, 'test_vhost_ip_change',
                                        agent_suite)
test_mirror = AgentEnv.MakeTestCmd(env, 'test_mirror', agent_suite)
test_nh = AgentEnv.MakeTestCmd(env, 'test_nh', agent_suite)
test_dummy = AgentEnv.MakeTestCmd(env, 'test_dummy', agent_suite)
#test_multicast = AgentEnv.MakeTestCmd(env, 'test_multicast', agent_suite)
test_xmpp_bcast_hv = AgentEnv.MakeTestCmd(env, 'test_xmpp_bcast_hv',
                                          agent_suite)
test_xmpp_bcast_non_hv = AgentEnv.MakeTestCmd(env, 'test_xmpp_bcast_non_hv',
                                              agent_suite)
test_xmppcs_bcast_hv = AgentEnv.MakeTestCmd(env, 'test_xmppcs_bcast_hv',
                                            agent_suite)
test_xmppcs_bcast_non_hv = AgentEnv.MakeTestCmd(env,'test_xmppcs_bcast_non_hv',
                                                agent_suite)
#test_integration = AgentEnv.MakeTestCmd(env, 'test_integration', agent_suite)
test_service_chain_cfg = AgentEnv.MakeTestCmd(env, 'test_service_chain_cfg',
                                              agent_suite)
test_cfg_listener = AgentEnv.MakeTestCmd(env, 'test_cfg_listener', agent_suite)
#test_route_mock = AgentEnv.MakeTestCmd(env, 'test_route_mock', agent_suite)
test_global_vrouter_config = AgentEnv.MakeTestCmd(env,
                                                 'test_global_vrouter_config',
                                                  agent_suite)
test_tunnel_encap = AgentEnv.MakeTestCmd(env, 'test_tunnel_encap', agent_suite)
test_agent_route_walker = AgentEnv.MakeTestCmd(env, 'test_agent_route_walker',
                                               agent_suite)
#test_xmpp_hv = AgentEnv.MakeTestCmd(env, 'test_xmpp_hv', agent_suite)
test_scale_walk = AgentEnv.MakeTestCmd(env, 'test_scale_walk', agent_suite)
#test_sg = AgentEnv.MakeTestCmd(env, 'test_sg', agent_suite)
test_acl = AgentEnv.MakeTestCmdSrc(env, 'test_acl',
                                   ['../filter/test/acl_test.cc'],
                                   agent_suite)
test_acl_entry = AgentEnv.MakeTestCmdSrc(env, 'test_acl_entry',
                                         ['../filter/test/acl_entry_test.cc'],
                                         agent_suite)

test = env.TestSuite('agent-test', agent_suite)
env.Alias('agent:agent_test', test)
Return('agent_suite')
