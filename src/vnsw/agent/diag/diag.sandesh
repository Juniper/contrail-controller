/*
 * Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
 */

/**
 *  Message definitions for diagnostic module
 * This module is responsible for generating network diagnostic for agent
 */

/**
 * @description: Request message to get ping statistics in agent introspect
 * @cli_name: create diagnostics ping
 */
request sandesh PingReq {
    /** Souce IP Address */
    1: string source_ip;
    /** Source port */
    2: i32    source_port;
    /** Destination IP Address */
    3: string dest_ip;
    /** Destination port */
    4: i32    dest_port;
    /** Protocol is tcp or udp */
    5: i16    protocol;
    /** Source vrf name */
    6: string vrf_name;
    /** Packet size default 100 bytes */
    7: optional i16 packet_size = 100;
    /** Packet count */
    8: optional i16 count = 10;
    /** Retry interval */
    9: optional i32 interval = 1;
}

/**
 * @description: Request message to get trace route information in agent introspect
 * @cli_name: create diagnostics traceroute
 */
request sandesh TraceRouteReq {
    /** Souce IP Address */
    1: string source_ip;
    /** Source port */
    2: i32    source_port;
    /** Destination IP Address */
    3: string dest_ip;
    /** Destination port */
    4: i32    dest_port;
    /** Protocol is tcp or udp */
    5: i16    protocol;
    /** Source vrf name */
    6: string vrf_name;
    /** Max number of hops */
    7: optional i16 max_hops = 30;
    /** Max retry attemps */
    8: optional i16 max_attempts = 3;
    /** Retry interval */
    9: optional i32 interval = 1;
}

/**
 * @description: Request message to get overlay ping statistics in agent introspect
 * @cli_name: create diagnostics ping overlay
 */

request sandesh OverlayPingReq {
    /** Souce IP Address */
    1: string source_ip;
    /** Destination IP Address */
    2: string dest_ip;
    /** UUID for Virtual-network */
    3: string   vn_uuid;
    /** Remote VM Mac Address */
    4: string vm_remote_mac;
    /** Source port */
    5: i32 source_port;
    /** Destination port */
    6: i32    dest_port;
    /** Protocol udp */
    7: optional i16    protocol = 17;
    /** Packet size default 100 bytes*/
    8: optional i16 packet_size = 100;
    /** Packet count */
    9: optional i16 count = 10;
    /** Retry interval */
    10: optional i32 interval = 1;
}

/**
 * @description: Request message to get Overlay trace route information in agent introspect
 * @cli_name: create diagnostics traceroute overaly
 */

request sandesh OverlayTraceReq {
    /** Souce IP Address */
    1: string source_ip;
    /** Destination IP Address */
    2: string dest_ip;
    /** Protocol udp */
    3: i16    protocol;
    /** UUID for Virtual-network */
    4: string   vn_uuid;
    /** Remote VM Mac Address */
    5: string vm_remote_mac;
    /** Source port */
    6: i32 source_port;
    /** Destination port */
    7: i32    dest_port;
    /** Max number of hops */
    8: optional i16 max_hops = 30;
    /** Max retry attemps */
    9: optional i16 max_attempts = 3;
    /** Retry interval */
    10: optional i32 interval = 1;
}

/**
 * Ping response statistics
 */
response sandesh PingResp {
    /** Packet sequence number */
    1: i16 seq_no;
    /** Round trip time */
    2: optional string rtt;
    /** Ping response */
    3: string resp;
}

/**
 * Ping response summary
 */
response sandesh PingSummaryResp {
    /** Number of requests sent */
    1: i16 request_sent;
    /** Number of responses received */
    2: i16 response_received;
    /** Number of packets lost */
    3: i16 pkt_loss;
    /** Average round trip time */
    4: optional string average_rtt;
}

/**
 * Ping error response
 */
response sandesh PingErrResp {
    /** Error response after issuing request */
    1: string error_response;
}

/**
 * Trace route for the address
 */ 
struct TraceRouteHop {
    /** Each hop IP address */
    1: string address;
}

/**
 * Response message for traceroute
 */
response sandesh TraceRouteResp {
    /** Each hop IP address */
    1: string hop;
}

/**
 * Trace route error message
 */
response sandesh TraceRouteErrResp {
    /** Error response after issuing request */
    1: string error_response;
}

/**
 * Segment Health-check statistics for a given interface
 */
struct SegmentHealthCheckStats {
    /** Interface to which the statistics apply*/
    1: u32 interface_index;
    /** Count of Segment health-check request packets sent */
    2: u64 requests_sent;
    /** Count of Segment health-check request packets received */
    3: u64 requests_received;
    /** Count of Segment health-check reply packets sent */
    4: u64 replies_sent;
    /** Count of Segment health-check reply packets received */
    5: u64 replies_received;
}

/**
 * Response message for SegmentHealthCheckPktStats request
 */
response sandesh SegmentHealthCheckPktStatsResp {
    /** Each hop IP address */
    1: list<SegmentHealthCheckStats> stats;
}
/**
 * @description: Request message to get segment health-check packet statistics
 */
request sandesh SegmentHealthCheckPktStats {
}
