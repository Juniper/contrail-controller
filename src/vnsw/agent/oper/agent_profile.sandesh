/*
 * Copyright (c) 2015 Juniper Networks, Inc. All rights reserved.
 */

/**
 *  Message definitions for agent profile .
 *
 * This module is responsible for generating debug information for agent
 * by querying oper db table
 *
 */

/**
 * Sandesh definition for oper db table
 */
struct SandeshDBTableStats {
    1: string table;
    2: u64 db_entry_count;
    3: u64 walker_count;
    4: u64 enqueue_count;
    5: u64 input_count;
    6: u64 notify_count;
}

/**
 * Sandesh definition for oper db table entry
 */

struct SandeshDBTableStatsInfo {
    1: u16 index;
    2: string time_str;
    3: list<SandeshDBTableStats> stats;
}

/**
 * Response message for db table entry list
 */
response sandesh SandeshDBTableStatsList {
    1: list<SandeshDBTableStatsInfo> stats;
}

/**
 * Request messae to get db table entry list from agent introspect
 */
request sandesh SandeshDBTableStatsRequest {
    1: u16 count; // send data for last 'count' entries
}

/**
 * Sandesh definition for flow
 */
struct SandeshFlowStats {
    1:  u16 index;
    2:  string time_str;
    4:  u64 flow_count;
    5:  u64 add_count;
    7:  u64 del_count;
    8:  u64 reval_count;
    9:  u64 handle_update;
   10:  u64 vrouter_error;
   11:  u64 audit_count;
}

/**
 * Response message for flow stats list
 */
response sandesh SandeshFlowStatsList {
    1: list<SandeshFlowStats> stats;
}

/**
 * Request message getting for flow stats
 */
request sandesh SandeshFlowStatsRequest {
    1: u16 count; // send data for last 'count' entries
}

/**
 * Sandesh definition for summary of flow work-queues
 */
struct SandeshFlowQueueSummaryOneInfo {
    1: u64 qcount;
    2: u64 dequeues;
    3: u64 enqueues;
    4: u64 max_qlen;
}

struct SandeshFlowTokenInfo {
    1: u32 add_tokens;
    2: u32 add_token_full;
    3: u32 update_tokens;
    4: u32 update_token_full;
    5: u32 delete_tokens;
    6: u32 delete_token_full;
}

struct SandeshFlowQueueSummaryInfo {
    1: u32 index;
    2: string time_str;
    3: SandeshFlowTokenInfo token_stats;
    4: SandeshFlowQueueSummaryOneInfo flow_event_queue;
    5: SandeshFlowQueueSummaryOneInfo flow_ksync_queue;
    6: SandeshFlowQueueSummaryOneInfo flow_delete_queue;
    7: SandeshFlowQueueSummaryOneInfo flow_update_queue;
    8: SandeshFlowQueueSummaryOneInfo flow_mgmt_queue;
    9: SandeshFlowQueueSummaryOneInfo pkt_handler_queue;
   10: SandeshFlowQueueSummaryOneInfo ksync_tx_queue;
   11: SandeshFlowQueueSummaryOneInfo ksync_rx_queue;
}

/**
 * Response message for flow-queue summary counts
 */
response sandesh SandeshFlowQueueSummaryResp {
    1: list<SandeshFlowQueueSummaryInfo> summary;
}

/**
 * Request message to get summary of flow work-queues
 */
request sandesh SandeshFlowQueueSummaryRequest{
}

/**
 * Sandesh definition for agent profile task
 */
struct TaskProfileStats {
    1:  u16 index;
    2:  i32 flow_run;
    3:  i32 flow_wait;
    4:  i32 flow_defer;
    5:  i32 db_run;
    6:  i32 db_wait;
    7:  i32 db_defer;
    8:  i32 stats_run;
    9:  i32 stats_wait;
   10:  i32 stats_defer;
   11:  i32 io_run;
   12:  i32 io_wait;
   13:  i32 io_defer;
   14:  i32 flow_resp_run;
   15:  i32 flow_resp_wait;
   16:  i32 flow_resp_defer;
   17:  i32 sandesh_rcv_run;
   18:  i32 sandesh_rcv_wait;
   19:  i32 sandesh_rcv_defer;
   20:  i32 bgp_cfg_run;
   21:  i32 bgp_cfg_wait;
   22:  i32 bgp_cfg_defer;
   23:  i32 ksync_run;
   24:  i32 ksync_wait;
   25:  i32 ksync_defer;
}

/**
 * Response message for profile task
 */
response sandesh SandeshTaskStatsList {
    1: list<TaskProfileStats> stats;
}

/**
 * Request message to get profile task stats from agent introspect
 */
request sandesh SandeshTaskStatsRequest {
    1: u16 count; // send data for last 'count' entries
}
