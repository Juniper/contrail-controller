#
# Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
#

# -*- mode: python; -*-
import re
Import('AgentEnv')
env = AgentEnv.Clone()

# test specific modifications
AgentEnv.MakeTestEnv(env)

lib_src = ['test_xml_physical_device.cc']
env.Library('agent_physical_devices_test_xml', lib_src)

env.Append(LIBPATH = env['TOP'] + '/vnsw/agent/test-xml')
env.Append(LIBPATH = env['TOP'] + '/vnsw/agent/oper/test')
env.Append(LIBS = 'agent_test_xml')
env.Append(LIBS = 'agent_oper_test_xml')
env.Append(LIBS = 'agent_physical_devices_test_xml')

oper_test_suite = []
oper_flaky_test_suite = []

test_intf = AgentEnv.MakeTestCmd(env, 'test_intf', oper_test_suite)
test_vrf_assign = AgentEnv.MakeTestCmd(env, 'test_vrf_assign', oper_test_suite)
test_linklocal = AgentEnv.MakeTestCmd(env, 'test_linklocal', oper_flaky_test_suite)
test_inet_interface = AgentEnv.MakeTestCmd(env, 'test_inet_interface',
                                           oper_test_suite)
test_fabric_interface = AgentEnv.MakeTestCmd(env, 'test_fabric_interface',
                                             oper_flaky_test_suite)
test_aap = AgentEnv.MakeTestCmd(env, 'test_aap', oper_flaky_test_suite)
test_ipv6 = AgentEnv.MakeTestCmd(env, 'test_ipv6', oper_test_suite)
test_oper_xml = AgentEnv.MakeTestCmdSrc(env, 'test_oper_xml',
                                        [
                                         'test_oper_xml.cc',
                                         '../../pkt/test/test_pkt_util.o'
                                        ],
                                        oper_test_suite)

test_instance_task = AgentEnv.MakeTestCmd(env, 'test_instance_task', oper_test_suite)
env.Alias('agent:test_ipv6', test_ipv6)

env.Append(LIBPATH = [
        '../../../../base/test',
        '../../../../db/test',
        '../../../../ifmap/test',
])

env.Append(LIBS = [
        'dbtest',
        'ifmap_test_util',
        'ifmap_test_util_agent',
        'task_test',
        ])

ifmap_dependency_manager_test = env.UnitTest(
        'ifmap_dependency_manager_test',
        ['ifmap_dependency_manager_test.cc'])

env.Alias('agent:ifmap_dependency_manager_test',
          ifmap_dependency_manager_test)
oper_flaky_test_suite.append(ifmap_dependency_manager_test)

instance_manager_test = env.UnitTest(
    'instance_manager_test',
    ['instance_manager_test.cc'])
env.Alias('agent:instance_manager_test', instance_manager_test)
oper_test_suite.append(instance_manager_test)

instance_manager_adapters_test = env.UnitTest(
    'instance_manager_adapters_test',
    ['instance_manager_adapters_test.cc'])
env.Alias('agent:instance_manager_adapters_test', instance_manager_adapters_test)
oper_test_suite.append(instance_manager_adapters_test)

loadbalancer_test = env.UnitTest(
    'loadbalancer_test',
    ['loadbalancer_test.cc'])
env.Alias('agent:loadbalancer_test', loadbalancer_test)
oper_test_suite.append(loadbalancer_test)

loadbalancer_haproxy_test = env.UnitTest(
    'loadbalancer_haproxy_test',
    ['loadbalancer_haproxy_test.cc'])
env.Alias('agent:loadbalancer_haproxy_test', loadbalancer_haproxy_test)
oper_test_suite.append(loadbalancer_haproxy_test)

test_physical_devices = AgentEnv.MakeTestCmdSrc(env, 'test_physical_devices',
                                                [
                                                'test_physical_devices.cc',
                                                'test_xml_agent_init.cc',
                                                '../../pkt/test/test_pkt_util.o'
                                                ],
                                                oper_test_suite)

flaky_test = env.TestSuite('agent-flaky-test', oper_flaky_test_suite)
env.Alias('controller/src/vnsw/agent/oper:flaky_test', flaky_test)

test = env.TestSuite('agent-test', oper_test_suite)
env.Alias('agent:oper', test)
env.Alias('controller/src/vnsw/agent/oper:test', test)
Return('oper_test_suite')
