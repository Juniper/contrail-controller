/*
 * Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
 */

/**
 *  Message definitions for BGP and XMPP modules
 *
 *  This modules provides BGP functionality.
 */

/**
 * @description: Generic BGP message
 * @severity: DEBUG
 */
trace sandesh BgpMessageTrace {
    1: string Message;
}

/**
 * @description: Generic BGP message
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpMessageLog {
    1: string Message;
}

/**
 * @description: BGP Message Send event related message
 * @severity: WARNING
 */
trace sandesh BgpMessageSendWarningTrace {
    1: string Message;
}

/**
 * @description: BGP Message Send event related message
 * @severity: WARNING
 * @cause: Cannot encode BGP message properly during message send process
 * @action: Check the routes as reported in the message in appropriate routing tables and find out where the routes are actually originated. If the errors point to some form of configuration, check appropriate configuration of those routes. Session clear or process restart could help in recovering from this issue.
 */
systemlog sandesh BgpMessageSendWarningLog {
    1: string Message;
}

/**
 * @description: Generic BGP Notice message
 * @severity: NOTICE
 */
trace sandesh BgpMessageNoticeTrace {
    1: string Message;
}

/**
 * @description: Generic BGP Notice message
 * @severity: NOTICE
 * @cause: An internal noticeable event occurred
 * @action: Contact your technical support representative if the notice is persistent
 */
systemlog sandesh BgpMessageNoticeLog {
    1: string Message;
}

/**
 * @description: BGP Table message
 * @severity: DEBUG
 */
trace sandesh BgpTableTrace {
    1: string Table;
    2: ":";
    3: string Message;
}

/**
 * @description: BGP Table message
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpTableLog {
    1: string Table;
    2: ":";
    3: string Message;
}

/**
 * @description: Message about BGP Configuration
 * @severity: DEBUG
 */
trace sandesh BgpConfigTrace {
    1: string Message;
}

/**
 * @description: Message about BGP Configuration
 * @severity: DEBUG
 * @cause: Informational
 * @action: None
 */
systemlog sandesh BgpConfigLog {
    1: string Message;
}

/**
 * @description: Message about BGP Configuration
 * @severity: WARNING
 */
trace sandesh BgpConfigWarningTrace {
    1: string Message;
}

/**
 * @description: BGP Configuration related error
 * @severity: WARNING
 * @cause: Invalid BGP Router/Peer parameters found in configuration
 * @action: Check configured BGP Peer address, identifier, gateway address, etc. for sanity.
 */
systemlog sandesh BgpConfigWarningLog {
    1: string Message;
}

/**
 * @description: Message about BGP/TCP Sockets
 * @severity: WARNING
 */
trace sandesh BgpSocketWarningTrace {
    1: string Message;
}

/**
 * @description: BGP/TCP Sockets
 * @severity: WARNING
 * @cause: Failure to open TCP Socket to form a connection with the peer due to either use of sockets above the process limit or due to sockets leakage inside the process
 * @action: Process restart can help in getting around socket descriptors leakage, if any. lsof command can be used to find all sockets allocated by the process (in use or otherwise). ulimit command be used to see and tweak current socket descriptors limit (per process)
 */
systemlog sandesh BgpSocketWarningLog {
    1: string Message;
}

/**
 * @description: Message about BGP Configuration
 * @severity: NOTICE
 */
trace sandesh BgpConfigNoticeTrace {
    1: string Message;
}

/**
 * @description: BGP Configuration related notice message
 * @severity: NOTICE
 * @cause: An internal noticeable event has occurred during configuration
 * @action: Contact your technical support representative if the notice is persistent
 */
systemlog sandesh BgpConfigNoticeLog {
    1: string Message;
}

/**
 * @description: Message about a bgp package sent to a group of peers
 * @severity: DEBUG
 */
trace sandesh BgpMessageBuilderTrace {
    1: string Message;
    2: "in message of size";
    3: i32 Length;
    4: "bytes for route";
    5: string Route;
}

/**
 * @description: Message about a bgp package sent to a group of peers
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpMessageBuilderLog {
    1: string Message;
    2: "in message of size";
    3: i32 Length;
    4: "bytes for route";
    5: string Route;
}

/**
 * @description: Message about routing-instance creation configuration
 * @severity: DEBUG
 */
trace sandesh BgpConfigInstanceCreateTrace {
    1: "Routing Instance";
    2: string name;
    3: "Import Targets";
    4: list<string> import_rt;
    5: "Export Targets";
    6: list<string> export_rt;
    7: "Virtual Network";
    8: string virtual_network;
    9: "VN Index";
    10: i32 index;
}

/**
 * @description: Routing instance creation configuration processing
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpConfigInstanceCreateLog {
    1: "Routing Instance";
    2: string name;
    3: "Import Targets";
    4: list<string> import_rt;
    5: "Export Targets";
    6: list<string> export_rt;
    7: "Virtual Network";
    8: string virtual_network;
    9: "VN Index";
    10: i32 index;
}

/**
 * @description: Routing instance creation configuration processing
 * @severity: DEBUG
 */
trace sandesh BgpConfigInstanceDeleteTrace {
    1: "Routing Instance";
    2: string name;
}

/**
 * @description: Routing instance deletion configuration processing
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpConfigInstanceDeleteLog {
    1: "Routing Instance";
    2: string name;
}

/**
 * @description: Routing instance update configuration processing
 * @severity: DEBUG
 */
trace sandesh BgpConfigInstanceUpdateTrace {
    1: "Routing Instance";
    2: string name;
    3: "Import Targets";
    4: list<string> import_rt;
    5: "Export Targets";
    6: list<string> export_rt;
    7: "Virtual Network";
    8: string virtual_network;
    9: "VN Index";
    10: i32 index;
}

/**
 * @description: Routing instance update configuration processing
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpConfigInstanceUpdateLog {
    1: "Routing Instance";
    2: string name;
    3: "Import Targets";
    4: list<string> import_rt;
    5: "Export Targets";
    6: list<string> export_rt;
    7: "Virtual Network";
    8: string virtual_network;
    9: "VN Index";
    10: i32 index;
}

/**
 * @description: BGP Neighbor create configuration processing
 * @severity: DEBUG
 */
trace sandesh BgpConfigNeighborCreateTrace {
    1: "Neighbor";
    2: string name;
    16: "AdminDown";
    17: bool admin_down;
    18: "Passive";
    19: bool passive;
    9: "Local Identifier";
    10: string local_identifier;
    11: "Local AS";
    12: u32 local_as;
    7: "Peer Address";
    8: string address;
    3: "Peer AS";
    4: u32 as_number;
    5: "Address Families";
    6: list<string> families;
    13: "Keys";
    14: string key_type;
    15: list<string> keys;
}

/**
 * @description: BGP Neighbor create configuration processing
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpConfigNeighborCreateLog {
    1: "Neighbor";
    2: string name;
    16: "AdminDown";
    17: bool admin_down;
    18: "Passive";
    19: bool passive;
    9: "Local Identifier";
    10: string local_identifier;
    11: "Local AS";
    12: u32 local_as;
    7: "Peer Address";
    8: string address;
    3: "Peer AS";
    4: u32 as_number;
    5: "Address Families";
    6: list<string> families;
    13: "Keys";
    14: string key_type;
    15: list<string> keys;
}

/**
 * @description: BGP Neighbor delete configuration processing
 * @severity: DEBUG
 */
trace sandesh BgpConfigNeighborDeleteTrace {
    1: "Neighbor";
    2: string name;
}

/**
 * @description: BGP Neighbor delete configuration processing
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpConfigNeighborDeleteLog {
    1: "Neighbor";
    2: string name;
}

/**
 * @description: BGP Neighbor update configuration processing
 * @severity: DEBUG
 */
trace sandesh BgpConfigNeighborUpdateTrace {
    1: "Neighbor";
    2: string name;
    16: "AdminDown";
    17: bool admin_down;
    18: "Passive";
    19: bool passive;
    9: "Local Identifier";
    10: string local_identifier;
    11: "Local AS";
    12: u32 local_as;
    7: "Peer Address";
    8: string address;
    3: "Peer AS";
    4: u32 as_number;
    5: "Address Families";
    6: list<string> families;
    13: "Keys";
    14: string key_type;
    15: list<string> keys;
}

/**
 * @description: BGP Neighbor update configuration processing
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpConfigNeighborUpdateLog {
    1: "Neighbor";
    2: string name;
    16: "AdminDown";
    17: bool admin_down;
    18: "Passive";
    19: bool passive;
    9: "Local Identifier";
    10: string local_identifier;
    11: "Local AS";
    12: u32 local_as;
    7: "Peer Address";
    8: string address;
    3: "Peer AS";
    4: u32 as_number;
    5: "Address Families";
    6: list<string> families;
    13: "Keys";
    14: string key_type;
    15: list<string> keys;
}

/**
 * @description: BGP peering create configuration processing
 * @severity: DEBUG
 */
trace sandesh BgpConfigPeeringCreateTrace {
    1: "Peering";
    2: string name;
}

/**
 * @description: BGP peering create configuration processing
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpConfigPeeringCreateLog {
    1: "Peering";
    2: string name;
}

/**
 * @description: BGP peering delete configuration processing
 * @severity: DEBUG
 */
trace sandesh BgpConfigPeeringDeleteTrace {
    1: "Peering";
    2: string name;
}

/**
 * @description: BGP peering delete configuration processing
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpConfigPeeringDeleteLog {
    1: "Peering";
    2: string name;
}

/**
 * @description: BGP peering update configuration processing
 * @severity: DEBUG
 */
trace sandesh BgpConfigPeeringUpdateTrace {
    1: "Peering";
    2: string name;
}

/**
 * @description: BGP peering update configuration processing
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpConfigPeeringUpdateLog {
    1: "Peering";
    2: string name;
}

/**
 * @description: BGP protocol create configuration processing
 * @severity: DEBUG
 */
trace sandesh BgpConfigProtocolCreateTrace {
    1: "Routing Instance";
    2: string name;
    13: "AdminDown";
    14: bool admin_down;
    3: "Local AS";
    4: u32 as_number;
    5: "Router ID";
    6: string identifier;
    7: "Address";
    8: string address;
    11: "Hold Time";
    12: i32 hold_time;
    9: "Address Families";
    10: list<string> families;
}

/**
 * @description: BGP protocol create configuration processing
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpConfigProtocolCreateLog {
    1: "Routing Instance";
    2: string name;
    13: "AdminDown";
    14: bool admin_down;
    3: "Local AS";
    4: u32 as_number;
    5: "Router ID";
    6: string identifier;
    7: "Address";
    8: string address;
    11: "Hold Time";
    12: i32 hold_time;
    9: "Address Families";
    10: list<string> families;
}

/**
 * @description: BGP protocol delete configuration processing
 * @severity: DEBUG
 */
trace sandesh BgpConfigProtocolDeleteTrace {
    1: "Routing Instance";
    2: string name;
}

/**
 * @description: BGP protocol delete configuration processing
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpConfigProtocolDeleteLog {
    1: "Routing Instance";
    2: string name;
}

/**
 * @description: BGP protocol update configuration processing
 * @severity: DEBUG
 */
trace sandesh BgpConfigProtocolUpdateTrace {
    1: "Routing Instance";
    2: string name;
    13: "AdminDown";
    14: bool admin_down;
    3: "Local AS";
    4: u32 as_number;
    5: "Router ID";
    6: string identifier;
    7: "Address";
    8: string address;
    11: "Hold Time";
    12: i32 hold_time;
    9: "Address Families";
    10: list<string> families;
}

/**
 * @description: BGP protocol update configuration processing
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpConfigProtocolUpdateLog {
    1: "Routing Instance";
    2: string name;
    13: "AdminDown";
    14: bool admin_down;
    3: "Local AS";
    4: u32 as_number;
    5: "Router ID";
    6: string identifier;
    7: "Address";
    8: string address;
    11: "Hold Time";
    12: i32 hold_time;
    9: "Address Families";
    10: list<string> families;
}

/**
 * @description: BGP Peer received/sent message
 * @severity: DEBUG
 */
trace sandesh BgpPeerMessageTrace {
    1: "BGP Peer"
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: BGP Peer received/sent message
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpPeerMessageLog {
    1: "BGP Peer"
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: BGP Peer received warning message
 * @severity: WARNING
 */
trace sandesh BgpPeerMessageWarningTrace {
    1: "BGP Peer"
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: BGP Peer received warning message
 * @severity: WARNING
 * @cause: Invalid data detected while processing incoming BGP protocol message
 * @action: Check actual BGP protocol messages exchanged for errors using tools such as tcpdump. If the errors point to some form of configuration such as address-families, check appropriate bgp configuration on either side of the session. Session clear could help in recovering from this issue.
 */
systemlog sandesh BgpPeerMessageWarningLog {
    1: "BGP Peer"
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: BGP Peer received/sent noticeable message
 * @severity: NOTICE
 */
trace sandesh BgpPeerMessageNoticeTrace {
    1: "BGP Peer"
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: BGP Peer received/sent critical message
 * @severity: NOTICE
 * @cause: A noticeable internal software failure has occurred
 * @action: Contact your technical support representative if these are persistent
 */
systemlog sandesh BgpPeerMessageNoticeLog {
    1: "BGP Peer"
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: BGP Peer Timer related message
 * @severity: DEBUG
 */
trace sandesh BgpPeerTimerTrace {
    1: "BGP Peer"
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: BGP Peer Timer related message
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpPeerTimerLog {
    1: "BGP Peer"
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: BGP Peer Timer related critical message
 * @severity: CRITICAL
 */
trace sandesh BgpPeerTimerCriticalTrace {
    1: "BGP Peer"
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: BGP Peer Timer related critical message
 * @severity: CRITICAL
 * @cause: Scheduled Timer operation did not operate correctly
 * @action: Check system logs for any additional insight into this issue. Peer clear or contrail-control restart might help as a work around.
 */
systemlog sandesh BgpPeerTimerCriticalLog {
    1: "BGP Peer"
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: BGP Peer specific routing table membership manager message
 * @severity: DEBUG
 */
trace sandesh BgpPeerMembershipTrace {
    1: "BGP Peer"
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: BGP Peer specific routing table membership manager message
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpPeerMembershipLog {
    1: "BGP Peer"
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: BGP Peer specific routing table membership manager message
 * @severity: WARNING
 */
trace sandesh BgpPeerMembershipWarningTrace {
    1: "BGP Peer"
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: BGP Peer specific routing table membership manager message
 * @severity: WARNING
 * @cause: bgp peer has sent subscribe/unsubscribe messages at unexpected states
 * @action: Check logs from the offending bgp peer for the appropriated networks as reported in the message. Peer clear and control-node restart might also help as work around.
 */
systemlog sandesh BgpPeerMembershipWarningLog {
    1: "BGP Peer"
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: BGP Peer event message
 * @severity: DEBUG
 */
trace sandesh BgpPeerEventTrace {
    1: "BGP Peer"
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: BGP Peer event message
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpPeerEventLog {
    1: "BGP Peer"
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: BGP Peer Notification message
 * @severity: DEBUG
 */
trace sandesh BgpPeerNotificationTrace {
    1 : "Bgp Peer";
    2 : string BgpPeer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3 : string Direction;
    4 : "Notification with Code";
    5 : i32 ErrorCode;
    6 : "and SubCode"
    7 : i32 ErrorSubCode;
    8 : "(";
    9 : string Message;
    10: ")";
}

/**
 * @description: BGP Peer Notification message
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpPeerNotificationLog {
    1 : "Bgp Peer";
    2 : string BgpPeer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3 : string Direction;
    4 : "Notification with Code";
    5 : i32 ErrorCode;
    6 : "and SubCode"
    7 : i32 ErrorSubCode;
    8 : "(";
    9 : string Message;
    10: ")";
}

/**
 * @description: BGP Peer Notification message
 * @severity: NOTICE
 */
trace sandesh BgpPeerNotificationNoticeTrace {
    1 : "Bgp Peer";
    2 : string BgpPeer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3 : string Direction;
    4 : "Notification with Code";
    5 : i32 ErrorCode;
    6 : "and SubCode"
    7 : i32 ErrorSubCode;
    8 : "(";
    9 : string Message;
    10: ")";
}

/**
 * @description: BGP Peer Notification message
 * @severity: NOTICE
 * @cause: A protocol state machine error has occurred
 * @action: In case of persistent notices, please refer to BGP protocol documentation and contact your technical support representative.
 */
systemlog sandesh BgpPeerNotificationNoticeLog {
    1 : "Bgp Peer";
    2 : string BgpPeer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3 : string Direction;
    4 : "Notification with Code";
    5 : i32 ErrorCode;
    6 : "and SubCode"
    7 : i32 ErrorSubCode;
    8 : "(";
    9 : string Message;
    10: ")";
}

/**
 * @description: BGP Peer Table message
 * @severity: DEBUG
 */
trace sandesh BgpPeerTableTrace {
    1: "BGP Peer"
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: "in table";
    5: string Table;
    6: "in instance";
    7: string Instance;
    8: ":";
    9: string Message;
}

/**
 * @description: BGP Peer Table message
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpPeerTableLog {
    1: "BGP Peer"
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: "in table";
    5: string Table;
    6: "in instance";
    7: string Instance;
    8: ":";
    9: string Message;
}

/**
 * @description: BGP Peer routing-instance message
 * @severity: DEBUG
 */
trace sandesh BgpPeerInstanceTrace {
    1: "BGP Peer"
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: "in instance";
    5: string Instance;
    6: ":";
    7: string Message;
}

/**
 * @description: BGP Peer routing-instance message
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpPeerInstanceLog {
    1: "BGP Peer"
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: "in instance";
    5: string Instance;
    6: ":";
    7: string Message;
}

/**
 * @description: BGP Peer outbound send update message
 * @severity: DEBUG
 */
trace sandesh BgpPeerSendUpdateTrace {
    1: "BGP Peer"
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: ":";
    5: string Message;
}

/**
 * @description: BGP Peer outbound send update message
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpPeerSendUpdateLog {
    1: "BGP Peer"
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: ":";
    5: string Message;
}

/**
 * @description: BGP Peer State Machine related message
 * @severity: DEBUG
 */
trace sandesh BgpPeerStateMachineTrace {
    1: "Bgp Peer";
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: BGP Peer State Machine related message
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpPeerStateMachineLog {
    1: "Bgp Peer";
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: BGP Peer State Machine related noticeable message
 * @severity: Notice
 */
trace sandesh BgpPeerStateMachineNoticeTrace {
    1: "Bgp Peer";
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: BGP Peer State Machine related message
 * @severity: NOTICE
 * @cause: An internal noticeable software failure event has occurred
 * @action: Contact your technical support representative if they are persistent
 */
systemlog sandesh BgpPeerStateMachineNoticeLog {
    1: "Bgp Peer";
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: BGP Peer route related message
 * @severity: DEBUG
 */
trace sandesh BgpPeerRouteTrace {
    1: "BGP Peer";
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
    5: string Route;
    6: "in table"
    7: string Table;
}

/**
 * @description: BGP Peer route related message
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpPeerRouteLog {
    1: "BGP Peer";
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
    5: string Route;
    6: "in table"
    7: string Table;
}

/**
 * @description: BGP Peer Configuration message
 * @severity: DEBUG
 */
trace sandesh BgpPeerConfigTrace {
    1: "Bgp Peer";
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: ":";
    5: string Message;
}

/**
 * @description: BGP Peer Configuration message
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh BgpPeerConfigLog {
    1: "Bgp Peer";
    2: string Peer (key="ObjectBgpPeer");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: ":";
    5: string Message;
}

/**
 * @description: Xmpp Peer specific generic message
 * @severity: DEBUG
 */
trace sandesh XmppPeerMessageTrace {
    1: "XMPP Peer"
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: Xmpp Peer specific generic message
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh XmppPeerMessageLog {
    1: "XMPP Peer"
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: XMPP Peer received warning message
 * @severity: WARNING
 */
trace sandesh XmppPeerMessageWarningTrace {
    1: "XMPP Peer"
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: XMPP Peer received warning message
 * @severity: WARNING
 * @cause: Invalid data detected while processing incoming BGP protocol message
 * @action: Check actual XMPP protocol messages exchanged for errors using tools such as tcpdump. If the errors point to some form of configuration such as address-families, check appropriate bgp configuration on either side of the session. Session clear could help in recovering from this issue.
 */
systemlog sandesh XmppPeerMessageWarningLog {
    1: "XMPP Peer"
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: Xmpp Peer specific noticeable message
 * @severity: NOTICE
 */
trace sandesh XmppPeerMessageNoticeTrace {
    1: "XMPP Peer"
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: Xmpp Peer specific noticeable message
 * @severity: NOTICE
 * @cause: A noticeable internal software failure has occurred
 * @action: Contact your technical support representative if these are persistent
 */
systemlog sandesh XmppPeerMessageNoticeLog {
    1: "XMPP Peer"
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: Xmpp Peer Timer message
 * @severity: DEBUG
 */
trace sandesh XmppPeerTimerTrace {
    1: "XMPP Peer"
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: Xmpp Peer Timer message
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh XmppPeerTimerLog {
    1: "XMPP Peer"
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: Xmpp Peer Timer critical message
 * @severity: CRITICAL
 */
trace sandesh XmppPeerTimerCriticalTrace {
    1: "XMPP Peer"
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: Xmpp Peer Timer critical message
 * @severity: CRITICAL
 * @cause: Scheduled Timer operation did not operate correctly
 * @action: Check system logs for any additional insight into this issue. Peer clear or contrail-control restart might help as a work around.
 */
systemlog sandesh XmppPeerTimerCriticalLog {
    1: "XMPP Peer"
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: Xmpp peer event message
 * @severity: DEBUG
 */
trace sandesh XmppPeerEventTrace {
    1: "XMPP Peer"
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: Xmpp peer event message
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh XmppPeerEventLog {
    1: "XMPP Peer"
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: Xmpp peer table message
 * @severity: DEBUG
 */
trace sandesh XmppPeerTableTrace {
    1: "XMPP Peer"
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: "in table";
    5: string Table;
    6: "in instance";
    7: string Instance;
    8: ":";
    9: string Message;
}

/**
 * @description: Xmpp peer table message
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh XmppPeerTableLog {
    1: "XMPP Peer"
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: "in table";
    5: string Table;
    6: "in instance";
    7: string Instance;
    8: ":";
    9: string Message;
}

/**
 * @description: Xmpp peer routing instance message
 * @severity: DEBUG
 */
trace sandesh XmppPeerInstanceTrace {
    1: "XMPP Peer"
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: "in instance";
    5: string Instance;
    6: ":";
    7: string Message;
}

/**
 * @description: Xmpp peer routing instance message
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh XmppPeerInstanceLog {
    1: "XMPP Peer"
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: "in instance";
    5: string Instance;
    6: ":";
    7: string Message;
}

/**
 * @description: Xmpp peer outbound send update message
 * @severity: DEBUG
 */
trace sandesh XmppPeerSendUpdateTrace {
    1: "XMPP Peer"
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: ":";
    5: string Message;
}

/**
 * @description: Xmpp peer outbound send update message
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh XmppPeerSendUpdateLog {
    1: "XMPP Peer"
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: ":";
    5: string Message;
}

/**
 * @description: Xmpp peer route message
 * @severity: DEBUG
 */
trace sandesh XmppPeerRouteTrace {
    1: "XMPP Peer";
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
    5: string Route;
    6: "in table"
    7: string Table;
}

/**
 * @description: Xmpp peer route message
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh XmppPeerRouteLog {
    1: "XMPP Peer";
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
    5: string Route;
    6: "in table"
    7: string Table;
}

/**
 * @description: Xmpp peer configuration message
 * @severity: DEBUG
 */
trace sandesh XmppPeerConfigTrace {
    1: "Xmpp Peer";
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: ":";
    5: string Message;
}

/**
 * @description: Xmpp peer configuration message
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh XmppPeerConfigLog {
    1: "Xmpp Peer";
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: ":";
    5: string Message;
}

/**
 * @description: Xmpp Peer membership to a table message
 * @severity: DEBUG
 */
trace sandesh XmppPeerMembershipTrace {
    1: "XMPP Peer"
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: Xmpp Peer membership to a table message
 * @severity: DEBUG
 * @cause: Normal diagnostic message used during software trouble-shooting
 * @action: None
 */
systemlog sandesh XmppPeerMembershipLog {
    1: "XMPP Peer"
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: XMPP Peer specific routing table membership manager message
 * @severity: WARNING
 */
trace sandesh XmppPeerMembershipWarningTrace {
    1: "XMPP Peer"
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: XMPP Peer specific routing table membership manager message
 * @severity: WARNING
 * @cause: contrail-vrouter-agent software has sent subscribe/unsubscribe messages at unexpected states
 * @action: Check logs from the offending peers (xmpp agents) for the appropriated networks as reported in the message. Peer clear, agent restart and control-node restart might also help as work around.
 */
systemlog sandesh XmppPeerMembershipWarningLog {
    1: "XMPP Peer"
    2: string Peer (key="ObjectVRouter");
    /** Direction is 'SEND' or 'RECV' */
    3: string Direction;
    4: string Message;
}
