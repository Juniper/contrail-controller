# -*- mode: python; -*-

#
# Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
#
import os

Import('BuildEnv')
env = BuildEnv.Clone()

autogen_infra_sources = [
                 '#/tools/generateds/generateDS.py',
                 '#/tools/generateds/TypeGenerator.py',
                 '#/tools/generateds/ccsvc.py',
                 '#/tools/generateds/idl_parser.py',
                 '#/tools/generateds/ServiceGenerator.py',
                ]

autogen_sources = [
                 '#controller/src/schema/services.xsd',
                ]

autogen_script = File('#tools/generateds/generateDS.py').path
autogen_cmd = '%s -f -l py -o %s -g service' % (autogen_script, Dir('discovery/services').path)

generated_files = [ 
                  'discovery/services.py',
                ]
generated_rule = env.Command(generated_files,
                             '#controller/src/schema/services.xsd',
                             autogen_cmd + ' $SOURCE')

setup_sources = [
           'setup.py',
           'MANIFEST.in',
           'run_tests.sh',
           'requirements.txt',
           'test-requirements.txt',
           '.testr.conf',
           'tests',
          ]
setup_sources_rules = []
for file in setup_sources:
    setup_sources_rules.append(
        env.Install(Dir('.'), '#controller/src/discovery/' + file))

local_sources = [
           '__init__.py',
           'disc_server.py',
           'disc_utils.py',
           'disc_consts.py',
           'disc_exceptions.py',
           'client.py',
           'disc_cassdb.py',
           'output.py',
           'disc_auth_keystone.py',
           'disc_chash.py',
          ]
local_sources_rules = []
for file in local_sources:
    local_sources_rules.append(
        env.Install("discovery", '#controller/src/discovery/' + file))

introspect_pkg = env.SandeshGenPy('discovery_introspect.sandesh', 'discovery/sandesh/', False)
nodeinfo_pkg = env.SandeshGenPy('#controller/src/base/sandesh/nodeinfo.sandesh', 'discovery/sandesh/', False)
cpuinfo_pkg = env.SandeshGenPy('#controller/src/base/sandesh/cpuinfo.sandesh', 'discovery/sandesh/nodeinfo/', False)
process_info_pkg = env.SandeshGenPy('#controller/src/base/sandesh/process_info.sandesh', 'discovery/sandesh/nodeinfo/', False)

cd_cmd = 'cd ' + Dir('.').path + ' && '
sdist_depends = [generated_rule]
sdist_depends.extend(setup_sources_rules)
sdist_depends.extend(local_sources_rules)
sdist_depends.extend(introspect_pkg)
sdist_depends.extend(nodeinfo_pkg)
sdist_depends.extend(cpuinfo_pkg)
sdist_depends.extend(process_info_pkg)

sdist_gen = env.Command('dist', 'setup.py', cd_cmd + 'python setup.py sdist')

env.Default(sdist_gen)

# generated files depend on autogeneration infra parts

env.Depends(generated_rule, [autogen_infra_sources, autogen_sources])
env.Depends(local_sources_rules, autogen_infra_sources)

# install everything before building distribution
env.Depends(sdist_gen, sdist_depends)
env.Alias('src/discovery:discovery', sdist_gen)
env.Alias('contrail-discovery', sdist_gen)

# Documentation
doc_files = []
doc_files += env.SandeshGenDoc('discovery_introspect.sandesh')

if 'install' in BUILD_TARGETS:
    install_cmd = env.Command(None, 'setup.py',
                              cd_cmd + 'python setup.py install %s' %
                              env['PYTHON_INSTALL_OPT'])
    env.Depends(install_cmd, sdist_depends)
    env.Alias('install', install_cmd)

env.Alias('install', 
    env.Install(env['INSTALL_CONF'], 'contrail-discovery.conf'))
env.Alias('install', env.InstallAs(
    env['INSTALL_INITD'] + 
    '/contrail-discovery', 'contrail-discovery.initd.supervisord'))
env.Alias('install', env.Install(env['INSTALL_CONF']+ 
    '/supervisord_config_files', 'contrail-discovery.ini'))
env.Alias('install', env.Install(
    env['INSTALL_MESSAGE_DOC'] + '/contrail-discovery/', doc_files))

subdirs = [
           'client'
          ]

for dir in subdirs:
    env.SConscript(dir + '/SConscript', exports='BuildEnv', duplicate=0)

buildspace_link = os.environ.get('CONTRAIL_REPO')
if buildspace_link:
    # in CI environment shebang limit exceeds for python
    # in easy_install/pip, reach to it via symlink
    top_path = buildspace_link + '/' + Dir('.').path
    top_dir = Dir(top_path)
else:
    top_dir = Dir('.')

cov_cmd = env.Command('coveragetest.log', sdist_gen,
                      'bash -c "set -o pipefail && cd ' + Dir(top_dir).path + ' && python setup.py run_tests --coverage 2>&1 | tee coveragetest.log"')

test_cmd = env.Command('test.log', sdist_gen,
                      'bash -c "set -o pipefail && cd ' + Dir(top_dir).path + ' && python setup.py run_tests 2>&1 | tee test.log"')

test_depends = ['/config/common/dist/cfgm_common-0.1dev.tar.gz',
                '/api-lib/dist/vnc_api-0.1dev.tar.gz',
                '/discovery/client/dist/discoveryclient-0.1dev.tar.gz',
                '/tools/sandesh/library/python/dist/sandesh-0.1dev.tar.gz',
                '/sandesh/common/dist/sandesh-common-0.1dev.tar.gz',
                '/config/api-server/dist/vnc_cfg_api_server-0.1dev.tar.gz',]

env.Depends(test_cmd, [env['TOP']+x for x in test_depends])
env.Depends(cov_cmd, [env['TOP']+x for x in test_depends])

env.Alias('controller/src/discovery:test', test_cmd)
env.Alias('controller/src/discovery:coverage', cov_cmd)
