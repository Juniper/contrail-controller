#
# Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
#

Import('BuildEnv')
import sys

env = BuildEnv.Clone()

env.Append(CPPPATH = env['TOP'])
env.Append(CPPPATH = [env['TOP'] + '/database'])
env.Append(CPPPATH = env['TOP'] + '/ifmap/client/test')

env.Append(LIBPATH = env['TOP'] + '/io')
env.Append(LIBPATH = env['TOP'] + '/db')
env.Append(LIBPATH = env['TOP'] + '/base')
env.Append(LIBPATH = env['TOP'] + '/bgp')
env.Append(LIBPATH = env['TOP'] + '/base/test')
env.Append(LIBPATH = env['TOP'] + '/control-node')
env.Append(LIBPATH = env['TOP'] + '/ifmap')
env.Append(LIBPATH = env['TOP'] + '/ifmap/test')
env.Append(LIBPATH = env['TOP'] + '/xml')
env.Append(LIBPATH = env['TOP'] + '/xmpp')
env.Append(LIBPATH = env['TOP'] + '/schema')

env.Prepend(LIBS = [
                    'ifmapio', 'bgp_schema', 'ifmap_vnc', 'ifmap_server',
                    'xmpp', 'peer_sandesh',
                    'sandesh', 'http', 'http_parser', 'httpc',
                    'curl', 'sandeshvns', 'process_info', 'io', 'control_node',
                    'ifmap_common', 'bgp_schema', 'ifmap_vnc', 
                    'ifmap_test_util', 'ifmap_test_util_agent',
                    'pugixml', 'xml', 'task_test', 'db', 'curl',
                    'base', 'gunit', 'crypto', 'ssl', 'boost_regex',
                    'ifmapio', 'libbgp_schema',
                    'libifmap_server', 'libifmap_vnc', 'cassandra_cql',
                    'cassandra', 'gendb', 'httpc',
                    'SimpleAmqpClient', 'rabbitmq'
                   ])

if sys.platform != 'darwin':
    env.Append(LIBS = ['boost_chrono'])

config_json_parser_test = env.UnitTest('config_json_parser_test',
                                       ['config_json_parser_test.cc'])
env.Alias('src/ifmap/client:config_json_parser_test', config_json_parser_test)

config_cassandra_client_test = env.UnitTest('config_cassandra_client_test',
                                       ['config_cassandra_client_test.cc'])
env.Alias('src/ifmap/client:config_cassandra_client_test',
          config_cassandra_client_test)

config_amqp_client_test = env.UnitTest('config_amqp_client_test',
                                       ['config_amqp_client_test.cc'])
env.Alias('src/ifmap/client:config_amqp_client_test', config_amqp_client_test)

client_unit_tests = [ config_json_parser_test, config_cassandra_client_test,
                      config_amqp_client_test ]

client_test = env.TestSuite('ifmap-test', client_unit_tests)

env.Alias('src/ifmap/client:test', client_test)
env.Alias('src/ifmap/client:flaky-test', [ ])
Return('client_unit_tests')
