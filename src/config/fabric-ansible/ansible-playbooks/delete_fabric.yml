---
- name: Delete devices in a specific fabric
  hosts: localhost
  connection: local
  tasks:

    - name: Initialize weights
      set_fact:
        job_ctx: "{{job_ctx|combine({'total_task_count':3, 'task_weightage_array':[50, 25, 25] })}}"

    - name: Save fabric name
      set_fact:
        fabric_name: "{{ job_ctx.job_input.fabric_fq_name[-1] }}"
      when: fabric_name is undefined

    - name: Save ZTP DNSMASQ conf file name
      set_fact:
        ztp_dnsmasq_conf_file: "{{ fabric_name }}.conf"

    - name: Save ZTP script file name
      set_fact:
        ztp_script_file: "{{ fabric_name }}_juniper.sh"

    - name: delete devices in a fabric
      set_fact:
        output: "{{ job_ctx | delete_fabric }}"

    - block:
        - set_fact:
            op_err_message: "Failed to delete fabric due to error: {{ output.error_msg }}. Here is the deletion log: {{ output.deletion_log}}"
            jl_err_message: "Failed to delete fabric due to error: {{ output.error_msg }}"
            fail_playbook: True

        - name: Update job log with percentage
          include_tasks: percentage_update.yml
          vars:
            current_index: 1
            jl_message: "{{ jl_err_message }}"
            results: {}

        - pause: seconds=5

        - name: handle failure
          include_tasks: error_handler.yml
      when: output.status == 'failure'

    - name: Update job log with percentage
      include_tasks: percentage_update.yml
      vars:
        current_index: 1
        jl_message: "Completed fabric removal from database"



- name: Delete ansible-created script files from TFTP server
  hosts: localhost
  gather_facts: no
  connection: local

  tasks:
    - name: Call TFTP role
      import_role:
        name: ztp_tftp


- name: Gather results from TFTP server
  hosts: localhost
  gather_facts: no
  connection: local

  tasks:
    - name: Get TFTP results
      set_fact:
        tftp_results: |
          {%- set outp = hostvars['localhost'].get('tftp_output', None) -%} {{ outp }}

    - name: if error, set ouput and bail
      block:
        - name: set output
          set_fact:
            output: "{{ output | combine(tftp_results) }}"
        - name: set tftp_err
          set_fact:
            tftp_err: True
      when: tftp_results != "\n"

    - name: Update job log with percentage
      include_tasks: percentage_update.yml
      vars:
        current_index: 2
        jl_message: "Removed TFTP file"


- name: Delete ansible-created section of DHCP server config file
  hosts: localhost
  gather_facts: no
  connection: local

  tasks:
    - name: Call DHCP role
      import_role:
        name: ztp_dhcp
      when: hostvars['localhost'].tftp_err is undefined


- name: Finish up on localhost
  hosts: localhost
  gather_facts: no
  connection: local

  tasks:
    - name: Set final output
      block:
        - name: Get DHCP results
          set_fact:
            dhcp_results: |
              {%- set outp = hostvars['localhost'].get('dhcp_output', None) -%} {{ outp }}

        - name: Set final output
          set_fact:
            output: "{{output | combine(dhcp_results)}}"
          when: dhcp_results != "\n"
      when: tftp_err is undefined

    - name: check failure
      include_tasks: error_handler.yml
      when: output.status == 'Failure'
      vars:
        op_err_message: "{{ output.results.jl_message }}"
        jl_err_message: "Failed to delete fabric {{ playbook_input.input.fabric_fq_name }} due to error: {{ output.message }}"
        results:
          fabric_uuid: "{{ playbook_input.input.fabric_fq_name }}"

    - name: Update job log with job completed status
      include_tasks: percentage_update.yml
      vars:
        current_index: 3
        jl_message: "Removed DHCP config file"
