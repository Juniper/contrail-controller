{%     set firewall = device_abstract_config.get('features', {}).get('firewall', {}).get('firewall') %}
{%     set ns_deny_filterlist = [] %}
{%     if firewall != None %}
{%         set firewall_filters = firewall.get('firewall_filters', []) %}
{%         for filter in firewall_filters %}
{%             if 'Security Group' not in filter.get('comment', '') %}
{%                 continue %}
{%             endif %}
{%             set filter_name = filter.get('name', '') %}
{%             set terms = filter.get('terms', []) %}
{%             set nsfilter = namespace(found=false) %}
{%             for term in terms %}
{%                 set term_from = term.get('fromxx') %}
{%                 if term_from == None %}
{%                     continue %}
{%                 endif %}
{%                 set ether_type = term_from.get('ether_type', '') %}
{%                 set term_then = term.get('then') %}
{%                 if term_then == None or ether_type == 'IPv6' %}
{%                     continue %}
{%                 endif %}
{%                 set term_name = term.get('name') %}
{%                 set dst_addrs = term_from.get('destination_address', []) %}
{%                 set src_addrs = term_from.get('source_address', []) %}
{%                 set src_ports = term_from.get('source_ports', []) %}
{%                 set dst_ports = term_from.get('destination_ports', []) %}
{%                 set ip_proto = term_from.get('ip_protocol') %}
{%                 set then_accept_or_reject = term_then.get('accept_or_reject', []) %}
{%                 for src_port in src_ports %}
set groups {{cfg_group}} firewall family ethernet-switching filter {{filter_name}} term {{term_name}} from source-port {{src_port}}
{%                 endfor %}
{%                 for dst_port in dst_ports %}
set groups {{cfg_group}} firewall family ethernet-switching filter {{filter_name}} term {{term_name}} from destination-port {{dst_port}}
{%                 endfor %}
{%                 for src_addr in src_addrs %}
{%                     if 'ipv6' not in src_addr.get('comment', '') %}
{%                         set cidr = src_addr.get('prefix') + '/' + src_addr.get('prefix_len')|string %}
set groups {{cfg_group}} firewall family ethernet-switching filter {{filter_name}} term {{term_name}} from ip-source-address {{cidr}}
{%                     endif %}
{%                 endfor %}
{%                 for dst_addr in dst_addrs %}
{%                     if 'ipv6' not in dst_addr.get('comment', '') %}
{%                         set cidr = dst_addr.get('prefix') + '/' + dst_addr.get('prefix_len')|string %}
set groups {{cfg_group}} firewall family ethernet-switching filter {{filter_name}} term {{term_name}} from ip-destination-address {{cidr}}
{%                     endif %}
{%                 endfor %}
{%                 if ip_proto %}
set groups {{cfg_group}} firewall family ethernet-switching filter {{filter_name}} term {{term_name}} from ip-protocol {{ip_proto}}
{%                 endif %}
{%                 if then_accept_or_reject == True and (ether_type != 'arp') %}
{%                     if nsfilter.found == false %}
{%                         set nsfilter.found = true %}
{%                         do ns_deny_filterlist.append(filter_name) %}
{%                     endif %}
set groups {{cfg_group}} firewall family ethernet-switching filter {{filter_name}} term {{term_name}} then accept
{%                 endif %}
{%             endfor %}{# /* for each terms under firewall filter */ #}
set groups {{cfg_group}} firewall family ethernet-switching filter arp term t1 from ether-type arp
set groups {{cfg_group}} firewall family ethernet-switching filter arp term t1 then accept
{%         endfor %}{# /* for each firewall filter */ #}
{%         if ns_deny_filterlist|length > 0 %}
set groups {{cfg_group}} firewall family ethernet-switching filter denyall term tdenyall then discard
{%         endif %}
{%     endif %}{# /* firewall valid */ #}
{%     for phy_int in device_abstract_config.get('features', {}).get('firewall', {}).get('physical_interfaces', []) %}
{%         set nsadd_once = namespace(found=false) %}
{%         for li in phy_int.get('logical_interfaces', []) %}
{%             set firewall_filters = li.get('firewall_filters', []) %}
{%             for firewall_filter in firewall_filters %}
set groups {{cfg_group}} interfaces {{phy_int.name}} unit 0 family ethernet-switching filter input-list {{firewall_filter}}
{%                 if nsadd_once.found == false and firewall_filter in ns_deny_filterlist %}
{%                     set nsadd_once.found = true %}
{%                 endif %}
{%             endfor %}
{%         endfor %}{# /* each li */ #}
{%         if nsadd_once.found == true %}
set groups {{cfg_group}} interfaces {{phy_int.name}} unit 0 family ethernet-switching filter input-list arp
set groups {{cfg_group}} interfaces {{phy_int.name}} unit 0 family ethernet-switching filter input-list denyall
{%         endif %}
{%     endfor %}{# /* each phy_int */ #}
