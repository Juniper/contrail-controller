{%    set replicator_ip = device_abstract_config.get('features').get('assisted-replicator').get('assisted_replicator').get('ar_loopback_ip', '') %}
{%    if replicator_ip %}
set groups {{cfg_group}} interfaces lo0 unit 0 family inet address {{replicator_ip}}
set groups {{cfg_group}} protocols evpn assisted-replication replicator
set groups {{cfg_group}} protocols evpn assisted-replication replicator inet {{replicator_ip}}
set groups {{cfg_group}} protocols evpn assisted-replication replicator vxlan-encapsulation-source-ip ingress-replication-ip
{%    endif %}
set groups {{cfg_group}} protocols evpn encapsulation vxlan
{%    for ri in device_abstract_config.get('features').get('assisted-replicator').get('routing_instances', []) %}
{%         set name = ri.get('name') %}
{%         set vxlan_id = ri.get('vxlan_id', '') %}
{%         for export_target in ri.get('export_targets', []) %}
set groups {{cfg_group}} protocols evpn vni-options vni {{vxlan_id}} vrf-target {{export_target}}
{%         endfor %}
{%    endfor %}

{%    for vlan in device_abstract_config.get('features').get('assisted-replicator').get('vlans', []) %}
{%        set vlan_name = vlan.get('name') %}
{%        set ns = namespace(tagged_vlan_id='', untagged_vlan_id='') %}
{%        set vni = vlan.get('vxlan_id') %}
set groups {{cfg_group}} vlans {{vlan_name}} description "{{vlan.get('description')}}"
set groups {{cfg_group}} vlans {{vlan_name}} vxlan vni {{vni}}
set groups {{cfg_group}} vlans {{vlan_name}} vlan-id none
{%    endfor %}
