{%     for phy_int in device_abstract_config.get('features', {}).get('l2-gateway',{}).get('physical_interfaces', []) %}
{%         set name = phy_int.get('name') %}
{%         set desc =  namespace(description=phy_int.get('comment', ''))%}
{%         set member_ae = desc.description.split(':')[-1].strip() %}
{%         if phy_int.get('link_aggregation_group') %}
set groups {{cfg_group}} interfaces {{name}} description "{{phy_int.get('link_aggregation_group').get('description')}}"
{%             set desc.description = desc.description + phy_int.get('link_aggregation_group').get('description', '') %}
{%         endif %}
{%         if not name.startswith('ae') %}
{#         this is for member interfaces of ae and single member interfaces of VPG #}
{%             if phy_int.get('lacp_force_up', False) == True and not phy_int.get('link_aggregation_group') %}
set groups {{cfg_group}} interfaces {{name}} ether-options 802.3ad {{member_ae}} lacp force-up
{%             endif %}
{%             if phy_int.get('port_params') %}
{%                 set port_params = phy_int.get('port_params') %}
{%                 if port_params.get('port_disable', False) == True %}
set groups {{cfg_group}} interfaces {{name}} disable
{%                 endif %}
{%                 if port_params.get('port_description') %}
{%                     set desc.description = desc.description + ' ' + port_params.get('port_description') %}
set groups {{cfg_group}} interfaces {{name}} description "{{desc.description}}"
{%                 endif %}
{%             endif %}
{%         endif %}
{%         for li in phy_int.get('logical_interfaces', []) %}
{%             if 'EVPN' in li.get('comment', '') %}
{%                 set unit = li.get('unit') %}
{%                 set vlan_id = li.get('vlan_tag') %}
set groups {{cfg_group}} interfaces {{name}} mtu 9192
set groups {{cfg_group}} interfaces {{name}} unit 0 family ethernet-switching interface-mode trunk
{%                 if li.get('is_tagged', false) == false %}
set groups {{cfg_group}} interfaces {{name}} native-vlan-id {{vlan_id}}
{%                 endif %}
{%                 if not li.get('name').startswith('ae')  %}
{%                     if li.get('port_params', {}).get('port_description') %}
set groups {{cfg_group}} interfaces {{name}} unit 0 description "{{li.get('port_params').get('port_description')}}"
{%                     endif %}
{%                 endif %}
{%             endif %}
{%         endfor %}
{%     endfor %}
{%     for vlan in device_abstract_config.get('features', {}).get('l2-gateway',{}).get('vlans', []) %}
{%         set vlan_name = vlan.get('name') %}
{%         set vni = vlan.get('vxlan_id') %}
{%         set intfs = vlan.get('interfaces',[]) %}
set groups {{cfg_group}} vlans {{vlan_name}} description "{{vlan.get('description')}}"
{%         for each in intfs %}
{%             set int_name = each.get('name', '') %}
{%             for phy_intf in device_abstract_config.get('features', {}).get('l2-gateway',{}).get('physical_interfaces', []) %}
{%                 for li in phy_intf.get('logical_interfaces', []) %}
{%                     set ifd_name = int_name.split('.')[0] %}
{%                     if ifd_name == phy_intf.name %}
set groups {{cfg_group}} interfaces {{ifd_name}} unit 0 family ethernet-switching vlan members {{vlan_name}}
set groups {{cfg_group}} vlans {{vlan_name}} vxlan vni {{vni}}
{%                         set vlan_id = vlan.get('vlan_id') %}
set groups {{cfg_group}} vlans {{vlan_name}} vlan-id {{vlan_id}}
{%                     endif %}
{%                 endfor %}
{%             endfor %}
{%         endfor %}
{%     endfor %}
{%     for bgp_elem in device_abstract_config.get('features', {}).get('overlay-bgp',{}).get('bgp', []) %}
{%         set families = bgp_elem.get('families', []) %}
{%         if 'evpn' in families %}
set groups {{cfg_group}} protocols evpn multicast-mode ingress-replication
set groups {{cfg_group}} switch-options vrf-target auto
{%         endif %}
{%     endfor %}
