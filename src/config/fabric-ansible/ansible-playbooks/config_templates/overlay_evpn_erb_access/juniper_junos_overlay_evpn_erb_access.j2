{%     set device_product_name = device_abstract_config.get('system', {}).get('product_name', '') %}
{%     for phy_int in device_abstract_config.features.get('l2-gateway').get('physical_interfaces', []) %}
{%         set name = phy_int.get('name') %}
{%         if phy_int.get('link_aggregation_group') %}
set groups {{cfg_group}} interfaces {{name}} description "{{phy_int.get('link_aggregation_group').get('description')}}"
{%         endif %}
{%         if not name.startswith('ae') %}
{#         this is for member interfaces of ae and single member interfaces of VPG #}
{%             if phy_int.get('lacp_force_up', False) == True %}
set groups {{cfg_group}} interfaces {{name}} ether-options 802.3ad lacp force-up
{%             endif %}
{%             if phy_int.get('port_params') %}
{%                 port_params = phy_int.get('port_params') %}
{%                 if port_params.get('port_disable', False) == True %}
set groups {{cfg_group}} interfaces {{name}} disable
{%                 endif %}
{%                 if port_params.get('port_description') and not (phy_int.get('link_aggregation_group', {}).get('description')) %}
set groups {{cfg_group}} interfaces {{name}} description "{{port_params.get('port_description')}}"
{%                 endif %}
{%             endif %}
{%         endif %}
{%         for li in phy_int.get('logical_interfaces', []) %}
{%             set unit = li.get('unit') %}
{%             set vlan_id = li.get('vlan_tag') %}
set groups {{cfg_group}} interfaces {{name}} mtu 9192
set groups {{cfg_group}} interfaces {{name}} encapsulation extended-vlan-bridge
set groups {{cfg_group}} interfaces {{name}} flexible-vlan-tagging
{%             if unit <= 16385 %}
set groups {{cfg_group}} interfaces {{name}} unit {{unit}} vlan-id {{vlan_id}}
{%             endif %}
{%             if li.get('is_tagged', false) == false %}
set groups {{cfg_group}} interfaces {{name}} native-vlan-id {{vlan_id}}
{%             endif %}
{%             if 'EVPN' in li.get('comment', '') %}
{%                 if not li.get('name').startswith('ae') and unit <=16385 %}
{%                     if li.get('port_params', {}).get('port_description') %}
set groups {{cfg_group}} interfaces {{name}} unit {{unit}} description {{li.get('port_params').get('port_description')}}
{%                     endif %}
{%                     if li.get('port_params', {}).get('port_mtu') %}
{%                         if device_product_name.startswith('mx') %}
{%                             if li.get('port_params', {}).get('port_mtu') <= 9192 %}
set groups {{cfg_group}} interfaces {{name}} unit {{unit}} family inet mtu {{li.get('port_params').get('port_mtu')}}
{%                             endif %}
{%                         else %}
set groups {{cfg_group}} interfaces {{name}} unit {{unit}} family inet mtu {{li.get('port_params').get('port_mtu')}}
{%                         endif %}
{%                     endif %}
{%             endif %}
{%         endfor %}
{%     endfor %}

{#     for vlan in device_abstract_config.features.get('l2-gateway').get('vlans', []) %}
{%         set vlan_name = vlan.get('name') %}
{%         set ns = namespace(tagged_vlan_id='', untagged_vlan_id='') %}
{%         set vni = vlan.get('vxlan_id') %}
{%         set intfs = vlan.get('interfaces',[]) %}
{%         for ri in device_abstract_config.features.get('l2-gateway').get('routing_instance', []) %}
{%         endfor %}
set groups {{cfg_group}} bridge-domains {{vlan_name}} description "{{vlan.get('description')}}"
set groups {{cfg_group}} bridge-domains {{vlan_name}} vxlan vni {{vni}}
{%         for each in intfs %}
{%             set int_name = each.get('name', '') %}
{%             for phy_intf in device_abstract_config.features.get('l2-gateway').get('physical_interfaces', []) %}
{%                 for li in phy_intf.get('logical_interfaces', []) %}
{%                     if li.get('name', '') == int_name %}
{%                         set ifd_name = int_name.split('.')[0] %}
set groups {{cfg_group}} bridge-domains {{vlan_name}} interface {{int_name}}
{%                         if li.get('is_tagged', false) != false %}
{%                             set ns.tagged_vlan_id = li.get('vlan_tag') %}
{%                         else %}
{%                             set ns.untagged_vlan_id = li.get('vlan_tag') %}
{%                         endif %}
{%                     endif %}
{%                 endfor %}
{%             endfor %}
{%         endfor %}
{%         if ns.tagged_vlan_id == '' and ns.untagged_vlan_id != '' %}
set groups {{cfg_group}} bridge-domains {{vlan_name}} vlan-id {{ns.untagged_vlan_id}}
{%         endif %}
{%         if ns.tagged_vlan_id != '' %}
set groups {{cfg_group}} bridge-domains {{vlan_name}} vlan-id {{ns.tagged_vlan_id}}
{%         endif %}
{%     endfor #}

{#     for bgp_elem in device_abstract_config.features.get('overlay-bgp').get('bgp', []) %}
{%         set families = bgp_elem.get('families', []) %}
{         for fam in families %}
{%             if fam == 'evpn' %}
set groups {{cfg_group}} protocols evpn multicast-mode ingress-replication
set groups {{cfg_group}} switch-options vrf-target auto
{%             endif %}
{%         endfor %}
{%     endfor #}
