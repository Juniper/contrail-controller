---
- name: Determine upgrade strategy and start sending upgrade batches

  hosts: localhost
  connection: local

  vars:
    image_upgrade_list: "{{playbook_input.input.image_devices}}"
    upgrade_mode: "{{playbook_input.input.upgrade_mode}}"
    output: {"status":"", "message":""}

  tasks:
    - set_fact:
        job_ctx: "{{job_ctx|combine({'total_task_count':1, 'task_weightage_array':[100] })}}"

    - name: Create hitless upgrade plan
      set_fact:
        upgrade_plan: "{{ job_ctx | hitless_upgrade_plan(image_upgrade_list) }}"

    - name: Print upgrade_plan
      debug: var=upgrade_plan verbosity=1

    - name: Exit if nothing to do
      include_tasks: error_handler.yml
      when: upgrade_plan.device_count == 0
      vars:
        op_err_message: "No devices to upgrade"
        jl_err_message: "No devices to upgrade"
        results:
          upgrade_plan: "{{ upgrade_plan.results }}"

    - name: If test run, return all devices to job manager
      set_fact:
        first_batch: "{{ job_ctx | hitless_all_devices(upgrade_plan) }}"
      when: upgrade_mode == 'test_run'

    - name: Get first batch of devices and return to job manager
      set_fact:
        first_batch: "{{ job_ctx | hitless_next_batch(upgrade_plan, '') }}"
      when: upgrade_mode == 'upgrade'

    - name: Update job log with percentage
      include_tasks: percentage_update.yml
      vars:
        current_index: 1
        jl_message: "Successfully created upgrade plan: {{upgrade_plan.results}}"

    - name: set output parameter
      set_fact:
         output: "{{ output|combine({'status':'SUCCESS', 'message':'Created upgrade plan', 'results': upgrade_plan.results, 'upgrade_plan': upgrade_plan, 'multi_device_count': upgrade_plan.device_count, 'advanced_parameters': upgrade_plan.advanced_parameters})}}"

    - name: set output parameter
      set_fact:
         output: "{{ output|combine({'device_json': first_batch.next.batch_devices })}}"
      when: first_batch.next.batch_devices

    - name: Print output
      debug: var=output verbosity=1
