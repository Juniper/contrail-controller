- name: Generate TFTP script file and sections of DHCP server config file
  hosts: localhost
  gather_facts: no
  connection: local

  pre_tasks:
   - name: Initialize weights
     set_fact:
       job_ctx: "{{job_ctx|combine({'total_task_count':3, 'task_weightage_array':[10, 30, 60] })}}"

  roles:
    - ztp_config

  tasks:
    - name: This is a create operation
      set_fact:
        ztp_create: True

    - name: Update job log with percentage
      include_tasks: percentage_update.yml
      vars:
        current_index: 1
        jl_message: "Created DHCP and TFTP configuration"

- name: Copy ansible-created script files to TFTP server
  hosts: tftp
  gather_facts: no
  connection: "{{ tftp_connection }}"

  tasks:
    - name: Call TFTP role
      import_role:
        name: ztp_tftp


- name: Gather results from TFTP server
  hosts: localhost
  gather_facts: no
  connection: local

  tasks:
    - name: Get TFTP host
      set_fact:
        tftp_host: "{{groups['tftp'][0]}}"

    - name: Get TFTP results
      set_fact:
        tftp_results: |
          {%- set output = hostvars[tftp_host].get('tftp_output', None) -%} {{ output }}

    - name: if error, set ouput and bail
      set_fact:
        output: "{{tftp_results}}"
      when: tftp_results != "\n"

    - name: Update job log with percentage
      include_tasks: percentage_update.yml
      vars:
        current_index: 2
        jl_message: "Updated TFTP server settings on {{tftp_host}}"


- name: Insert/update ansible-created section of DHCP server config file
  hosts: dhcp
  gather_facts: no
  connection: "{{ dhcp_connection }}"

  tasks:
    - name: Call DHCP role
      import_role:
        name: ztp_dhcp
      when: hostvars['localhost'].output is undefined


- name: Finish up on localhost
  hosts: localhost
  gather_facts: no
  connection: local

  tasks:
    - name: Set final output
      block:
        - name: set output parameter
          set_fact:
            outp: {'status':'Success', 'message':'ZTP playbook successfully executed'}

        - name: Get DHCP host
          set_fact:
            dhcp_host: "{{groups['dhcp'][0]}}"

        - name: Set log message
          set_fact:
            output_msg: "Updated DHCP server settings on {{dhcp_host}}"

        - name: Get DHCP results
          set_fact:
            dhcp_results: "{{hostvars[dhcp_host]['dhcp_output']}}"

        - name: Set final output
          set_fact:
            output: "{{outp | combine(dhcp_results)}}"
      when: output is undefined

    - name: print output
      debug: var=output verbosity=1

    - name: Update job log with percentage
      include_tasks: percentage_update.yml
      vars:
        current_index: 3
        jl_message: "{{ output.results.jl_message if output.status == 'Failure' else output_msg }}"
