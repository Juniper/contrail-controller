- name: Generate TFTP script file and DHCP config file
  hosts: localhost
  gather_facts: no
  connection: local

  pre_tasks:
   - name: Initialize weights
     set_fact:
       job_ctx: "{{job_ctx|combine({'total_task_count':3, 'task_weightage_array':[10, 30, 60] })}}"

  tasks:
    - name: Save fabric UUID
      set_fact:
        fabric_uuid: "{{ playbook_input.input.fabric_uuid }}"

    - name: Save device info
      set_fact:
        device_to_ztp: "{{ playbook_input.input.device_to_ztp }}"
      when: playbook_input.input.device_to_ztp is defined

    - name: Save device count
      set_fact:
        device_count: "{{ playbook_input.input.device_count }}"
      when: device_to_ztp is not defined

    - name: Get fabric fq_name
      vnc_db_mod:
        enable_job_ctx: False
        job_ctx: "{{ job_ctx }}"
        object_type: "fabric"
        object_op: "id_to_fq_name"
        object_dict: |
          {
            "uuid": "{{ fabric_uuid }}"
          }
      register: fabric_fq_name

    - name: Save fabric name
      set_fact:
        fabric_name: "{{ fabric_fq_name.fq_name[-1] }}"

    - name: Save ZTP config directory
      set_fact:
        ztp_conf_dir: ./config/ztp

    - name: This is a create operation
      set_fact:
        ztp_create: True

    - import_role:
        name: ztp_dhcp_config

    - import_role:
        name: ztp_tftp_config

    - name: Update job log with percentage
      include_tasks: percentage_update.yml
      vars:
        current_index: 1
        jl_message: "Created DHCP and TFTP configuration"

- name: Create TFTP script file
  hosts: localhost
  gather_facts: no
  connection: local

  tasks:
    - import_role:
        name: ztp_tftp

    - name: If error, set output and bail
      set_fact:
        output: "{{tftp_output}}"
      when: tftp_output is defined

    - name: Update job log with percentage
      include_tasks: percentage_update.yml
      vars:
        current_index: 2
        jl_message: "Published TFTP script file"
      when: output is undefined

- name: Create DHCP config file
  hosts: localhost
  gather_facts: no
  connection: local

  tasks:
    - import_role:
        name: ztp_dhcp
      when: output is undefined

    - name: If error, set output and bail
      set_fact:
        output: "{{dhcp_output}}"
      when: dhcp_output is defined

    - name: Update job log with percentage
      include_tasks: percentage_update.yml
      vars:
        current_index: 2
        jl_message: "Published DHCP config file"
      when: output is undefined

- name: Finish up
  hosts: localhost
  gather_facts: no
  connection: local

  tasks:
    - block:
      - name: Set output message
        set_fact:
          output: {'status':'Success', 'message':'ZTP playbook successfully executed'}
        when: output is undefined

      - name: Set final output
        set_fact:
          output: "{{output | combine(publish_result)}}"
        when: output.status == 'Success'

    - name: Print Output
      debug: var=output verbosity=1

    - name: Update job log with percentage
      include_tasks: percentage_update.yml
      vars:
        current_index: 3
        jl_message: "{{ output.results.jl_message if output.status == 'Failure' else output.message }}"
