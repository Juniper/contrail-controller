---

- name: RMA Activation Workflow
  hosts: localhost
  gather_facts: no
  connection: local

  vars:
    rma_devices: "{{playbook_input.input.rma_devices}}"
    output: {"status":"", "message":""}

  tasks:
    - set_fact:
        job_ctx: "{{job_ctx|combine({'total_task_count':2, 'task_weightage_array':[50, 50] })}}"
        fabric_fqname: "{{playbook_input.fabric_fq_name.split(':')}}"

    - set_fact:
        fabric_name: "{{fabric_fqname[-1]}}"

    - name: Invoke IP assignment task
      block:
        - name: Call vnc to read the fabric object
          vnc_db_mod:
            job_ctx: "{{ job_ctx }}"
            object_type: "fabric"
            object_op: "read"
            object_dict: { "fq_name": "{{fabric_fqname}}" }
          register: fabric_obj

        - name: Activate devices and return device_to_ztp list for all devices
          set_fact:
             devices_to_ztp: "{{ job_ctx | rma_devices_to_ztp(rma_devices) }}"

        - name: Update job log with percentage
          include_tasks: percentage_update.yml
          vars:
            current_index: 1
            jl_message: "Start reading DHCP leases file"

        - name: Get ZTP DHCP config
          set_fact:
             ztp_dhcp_config: "{{ job_ctx | ztp_dhcp_config(fabric_obj.obj.uuid) }}"

        - name: Save ZTP DHCP config file name
          set_fact:
             ztp_dhcp_config_file: "{{ fabric_name }}.conf"

        - name: Read dhcp leases using device info
          set_fact:
            leases_result: "{{ devices_to_ztp | read_only_dhcp_leases(ztp_dhcp_config['ipam_subnets'], ztp_dhcp_config_file, fabric_name, job_ctx) }}"

        - name: Perform the necessary error handling
          include_tasks: error_handler.yml
          vars:
            op_err_message: "Device not found in DHCP leases file"
            jl_err_message: "Device not found in DHCP leases file"
          when: leases_result.failed == True

        - name: Process RMA
          set_fact:
            rma_device_info: "{{ job_ctx | rma_activate_devices(rma_devices, leases_result) }}"

        - name: Return dynamic DHCP mgmt_ip in output for use in next playbook
          set_fact:
            output: "{{ output|combine({'dynamic_mgmt_ip_tbl': rma_device_info['dynamic_mgmt_ip_tbl'], 'fabric_uuid': fabric_obj.obj.uuid, 'device_json': rma_device_info['device_info'] })}}"

        - name: Update job log with percentage
          include_tasks: percentage_update.yml
          vars:
            current_index: 2
            jl_message: "Done reading DHCP leases file"

        - name: Exit if successful
          set_fact:
            output: "{{ output|combine({'status':'SUCCESS', 'message':'Finished with initial RMA activating'})}}"

      rescue:
        - name: Perform the necessary error handling
          include_tasks: error_handler.yml
          vars:
            op_err_message: "Failed to RMA greenfield devices"
            jl_err_message: "Failed to RMA greenfield devices"

