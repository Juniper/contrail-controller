---
- name: Select appropriate image for upgrade during ztp
  hosts: localhost
  gather_facts: no
  connection: local
  roles:
    - Juniper.junos

  vars:
    pr_fq_name: "{{playbook_input.device_fqname[-1]}}"
    pr_vendor_name: "{{playbook_input.vendor | lower}}"
    current_index: 0
    pr_product_name: "{{playbook_input.product_name}}"
    final_task_dict:
      total_task_count: 4
      task_weightage_array: [5, 40, 45, 10]

  tasks:
    - name: Include global variables
      include_vars: group_vars/all.yml

    - name: Set os version only if defined
      set_fact:
        os_defined: true
      when: playbook_input.input.os_version is defined

    - name: Set version
      set_fact:
        ztp_os_version: "{{playbook_input.input.os_version}}"
      when: os_defined is defined and os_defined

    - block:
        - name: Set variable to continue workflow
          set_fact:
            continue_workflow: true

        - set_fact:
            job_ctx: "{{job_ctx|combine(final_task_dict)}}"

        - name: Set auto increment
          set_fact:
            percentage_auto_increment: true

        - name: Construct hardware name from product name
          set_fact:
            hardware_fq_name: ["{{pr_vendor_name}}-{{pr_product_name}}"]

        - name: Read the hardware vnc object
          vnc_db_mod:
            job_ctx: "{{ job_ctx }}"
            object_type: "hardware"
            object_op: "read"
            object_dict: {"fq_name": "{{hardware_fq_name}}", "fields": ['device_image_back_refs']}
          register: hardware_obj

        - name: Get the device image back refs
          set_fact:
            image_refs: "{{hardware_obj.obj.device_image_back_refs}}"

        - name: Pick the right image
          include: image_validation.yml
          with_items:
          - "{{image_refs}}"
          when: image_uuid is not defined and image_refs != ""

        - block:
            - name: Handle case if no image is found
              set_fact:
                err_message: "No image with os version {{ztp_os_version}} that is compatible with the device {{pr_fq_name}} was found"

            - name: Set variable
              set_fact:
                skip_upgrade: True
          when: image_uuid is not defined

        - block:
            - name: Call image upgrade
              include_role:
                name: image_upgrade_role

            - set_fact:
                output: {
                      "status": "Success",
                      "message": "Image upgrade for device: {{pr_fq_name}} successful",
                      "results":
                          {
                            "msg": "Device {{pr_fq_name}} is upgraded with new image with os version {{ztp_os_version}}"
                          }
                  }
              when: task_fail is not defined

            - set_fact:
                output: {
                      "status": "Success",
                      "message": "Image upgrade for device: {{pr_fq_name}} unsuccessful",
                      "results":
                          {
                            "msg": "Unable to upgrade image on the device {{pr_fq_name}}"
                          }
                  }
              when: task_fail is defined and task_fail
          when: image_uuid is defined
      when: ztp_os_version is defined

    - block:

        - name: Unset auto increment
          set_fact:
            percentage_auto_increment: false

        - name: Bump up the percentage to 100 if no os version/image is defined.
          set_fact:
            percent_init_dict: { 'total_task_count': 1, 'task_weightage_array': [100] }

        - set_fact:
            job_ctx: "{{job_ctx|combine(percent_init_dict)}}"

        - set_fact:
            skip_msg: "Skippping image upgrade for device {{pr_fq_name}}"

        - set_fact:
            skip_msg: "{{err_message}}"
          when: skip_upgrade is defined and skip_upgrade == True

        - name: Update job log with percentage
          include_tasks: percentage_update.yml
          vars:
            current_index: 1
            jl_message: "{{skip_msg}}"

        - name: Set the output
          set_fact:
            output: {'status':'Success', 'message':'{{skip_msg}}'}
      when: ztp_os_version is not defined or skip_upgrade is defined
