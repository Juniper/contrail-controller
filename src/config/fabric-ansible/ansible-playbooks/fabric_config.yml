---

- name: Push fabric config to device and read back facts
  hosts: localhost
  connection: local
  vars:
    input: "{{ playbook_input.input }}"
    device_mgmt_ip: "{{ input.device_management_ip }}"
    additional_feature_params: "{{ input.additional_feature_params }}"
    is_delete: "{{ input.is_delete }}"
    manage_underlay: "{{ input.manage_underlay}}"
    output: {"status":"", "message":"", "results":""}

  pre_tasks:
    - set_fact:
        job_ctx: "{{job_ctx|combine({'total_task_count':2, 'task_weightage_array':[20, 80] })}}"

    - set_fact:
        conf_dir: "./config/{{ device_mgmt_ip }}"

    - name: "load abstract config from {{conf_dir}}"
      include_vars:
        file: "{{conf_dir}}/abstract_cfg.json"
        name: abstract_cfg

    - set_fact:
        device_info: "{{ abstract_cfg.system }}"

    - set_fact:
        device_name: "{{ device_info.name }}"
        device_vendor: "{{ device_info.vendor_name|lower }}"
        device_family: "{{ device_info.device_family|lower }}"
        device_model: "{{ device_info.product_name }}"
        device_username: "{{ device_info.credentials.user_name }}"
        device_password: "{{ device_info.credentials.password }}"
        device_phy_role: "{{ device_info.physical_role }}"
        device_rb_roles: "{{ device_info.routing_bridging_roles if device_info.routing_bridging_roles is defined else [] }}"

    - set_fact:
        device_abstract_config: "{{abstract_cfg}}"
      when: input.is_delete is undefined or input.is_delete == False

    - name: Remove build_config folder if it already exists
      file:
        path: "{{ conf_dir }}/build_config"
        state: absent

    - name: Remove final_config folder if it already exists
      file:
        path: "{{ conf_dir }}/final_config"
        state: absent

    - name: Remove the abstract config if deleting the device
      file:
        path: "{{conf_dir}}/abstract_cfg.json"
        state: absent
      when: input.is_delete is defined and input.is_delete == True

    - name: Create build folder
      file:
        path: "{{ conf_dir }}/build_config"
        state: directory

    - name: Update job log with percentage
      include_tasks: percentage_update.yml
      vars:
        current_index: 1
        jl_message: "Config push for device {{ device_mgmt_ip }} started"

  roles:
    - cfg_basic
    - cfg_underlay_ip_clos
    - cfg_overlay_bgp
    - cfg_overlay_evpn
    - cfg_overlay_evpn_access
    - cfg_overlay_evpn_gateway
    - cfg_overlay_evpn_type5
    - cfg_overlay_evpn_ucast_gateway
    - cfg_overlay_evpn_mcast_gateway
    - cfg_overlay_fip_snat
    - cfg_overlay_networking
    - cfg_overlay_security_group
    - cfg_overlay_multi_homing
    - cfg_overlay_lag
    - cfg_overlay_pim
    - cfg_overlay_service_chain
    - commit_fabric_config

  tasks:
    - set_fact:
        prouter_fqname: ['default-global-system-config', '{{ device_name }}' ]

    - name: PR objectlog update to set onboarding state
      prouter_objectlog:
        job_ctx: "{{ job_ctx }}"
        prouter_fqname: "{{ prouter_fqname }}"
        onboarding_state: "{{ DEVICE_STATE.UNDERLAY_CONFIGURED }}"
      when: input.is_delete is undefined or input.is_delete == False

    - name: Update job log with percentage
      include_tasks: percentage_update.yml
      vars:
        current_index: 2
        jl_message: "Underlay config successful for: {{device_mgmt_ip}}"
        
    - set_fact:
        output: {
              "status": "Success",
              "message": "Underlay config successful for: {{device_mgmt_ip}}"
          }

    - name: print output
      debug: var=output verbosity=1

