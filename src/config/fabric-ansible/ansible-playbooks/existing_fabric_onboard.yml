---
- name: Onboard fabric data model to the database

  hosts: localhost
  connection: local

  tasks:
    - name: onboard fabric
      set_fact:
        output: "{{ job_ctx | onboard_existing_fabric }}"

    - debug: var=output

    - name: check failure
      include_tasks: error_handler.yml
      when: output.status == 'failure'
      vars:
        op_err_message: "Unable to onboard fabric due to error"
        jl_err_message: "Failed to onboard fabric {{ playbook_input.input.fabric_fq_name }} due to error. Here is onboarding log\n: {{ output.onboard_log }}"
        results:
          fabric_uuid: "{{ output.fabric_uuid }}"

    - name: Update Job log with fabric onboarding job status
      job_objectlog:
        job_ctx: "{{ job_ctx }}"
        status: "{{ JOBLOG_STATUS.IN_PROGRESS }}"
        message: "Successfully onboarded fabric: {{ playbook_input.input.fabric_fq_name }}"

    - set_fact:
        pb_output:
          fabric_uuid: "{{output.fabric_uuid}}"

    - set_fact:
        line: "{{job_ctx.unique_pb_id}}{{PB_OUTPUT_MARKER}}{{pb_output}}{{PB_OUTPUT_MARKER}}"

    - name: insert/update in /tmp/<exec-id> file
      set_fact:
        write_resp: "{{job_ctx.job_execution_id | write_to_file(line)}}"

    - set_fact:
        line: "{{job_ctx.unique_pb_id}} END"

    - name: insert/update in /tmp/<exec-id> file
      set_fact:
        write_resp: "{{job_ctx.job_execution_id | write_to_file(line)}}"
