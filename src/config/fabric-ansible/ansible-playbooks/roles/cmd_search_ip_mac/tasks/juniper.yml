- import_role:
    name: Juniper.junos

- name: Execute commands on a Juniper Device to get interfaces
  juniper_junos_command:
    commands:
      - show evpn database extensive
    display: xml
    provider:
      host: "{{device_management_ip}}"
      username: "{{device_username}}"
      password: "{{device_password}}"
      port: 22
      timeout: "{{JUNOS_COMMAND_TIMEOUT|int}}"
  register: evpn_command_resp

- name: settings facts
  set_fact:
    mgmt_ips: []
    evpn_command_resp: "{{evpn_command_resp|json_query('parsed_output.\"evpn-database-information\".\"evpn-database-instance\"')}}"

- name: set the source_details from template
  set_fact:
    source_details: "{{lookup('template', '../templates/juniper_source_details.j2')}}"

- block:
    - name: set the source lo0 ip and the mac address
      set_fact:
        source_lo0_ips: "{{source_details.active_source[-2]}}"
        mac_address: "{{source_details.active_source[-1]}}"

    - name: Todo get the loopback ips to management ips list
      set_fact:
        mgmt_ip_resp: "{{job_ctx | get_mgmt_ips_frm_lo_ips(source_lo0_ips, device_name)}}"

    - name: Warning message in case mgmt ip is not found
      debug:
        msg: " Warning: Management IPs could not be found"
        verbosity: 0
      when: mgmt_ip_resp.get_mgmt_ips == []

    - name: Warning message with traceback in case of any other exception
      debug:
        msg: "Here is the error: {{mgmt_ip_resp.error_msg}} and trace of events: {{mgmt_ip_resp.get_mgmt_ip_log}}"
        verbosity: 0
      when: mgmt_ip_resp.status == 'failure'

    - name: Set the management ip
      set_fact:
        mgmt_ips: "{{mgmt_ip_resp.get_mgmt_ips}}"

    - name: SSH into this device to locate the interface
      juniper_junos_command:
        commands:
          - show ethernet-switching table
        display: xml
        provider:
          host: "{{item}}"
          username: "{{device_username}}"
          password: "{{device_password}}"
          port: 22
          timeout: "{{JUNOS_COMMAND_TIMEOUT|int}}"
      with_items: "{{mgmt_ips}}"
      register: command_resp
  when: source_details.active_source != ['']

