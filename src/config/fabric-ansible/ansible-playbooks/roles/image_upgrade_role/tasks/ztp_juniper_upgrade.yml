- name: Execute a basic Junos software upgrade.
  block:
    - juniper_junos_software:
        provider:
          host: "{{pr_host}}"
          user: "{{pr_user}}"
          password: "{{pr_password}}"
          port: 22
        version: "{{image_os_version}}"
        vmhost: "{{vmhost_flag}}"
        reboot: true
        remote_package: "{{downloadurl}}"
      register: junos_response
    #  ignore_errors: True
  rescue:
    - name: Set task fail variable
      set_fact:
        task_fail: true

    - name: Unset auto increment
      set_fact:
        percentage_auto_increment: false

    - name: Bump up the percentage 100 if upgrade fails
      set_fact:
        percent_init_dict: { 'total_task_count': 1, 'task_weightage_array': [95] }

    - set_fact:
        job_ctx: "{{job_ctx|combine(percent_init_dict)}}"

    - name: Set the error message
      set_fact:
        failure_message: "Unable to upgrade image on the device {{pr_fqname}}. Junos upgrade task during ztp failed with exception. {{junos_response.msg}}"

    - name: Update job log with percentage
      include_tasks: percentage_update.yml
      vars:
        current_index: 1
        jl_message: "{{failure_message}}"

- block:
    - name: Job logs for image upgrade task with percentage
      include_tasks: percentage_update.yml
      vars:
        jl_message: >
          {% if 'Reboot' in junos_response.msg -%}
            Image upgrade task completed on this device: {{junos_response.msg}}. Device reboot may take 15 to 20 mins.
          {% else -%}
           Image upgrade task completed on this device. Same version found.
          {%- endif %}

    - name: Rebooting
      block:
        - name: Update prouter logs with maintenance mode status
          prouter_objectlog:
            prouter_fqname: "{{pr_fqname}}"
            onboarding_state: "{{DEVICE_STATE.REBOOTING}}"
            job_ctx: "{{job_ctx}}"

         #Delay for 60 sec and then keep checking netconf connectivity for every 60 sec(sleep). Total timeout 1200 sec
        - name: Check NETCONF connectivity after reboot
          wait_for:
            host: "{{pr_host}}"
            port: 830
            timeout: 1200
            delay: 60
            connect_timeout: 10
            sleep: 60
      when: "'Reboot' in junos_response.msg"

     #Initialize job data
    - name: Append job logs after device is up with percentage
      include_tasks: percentage_update.yml
      vars:
        jl_message: >
          {% if 'Reboot' in junos_response.msg -%}
            Device is up after reboot. Now validating image version on device.
          {% else -%}
            Validating image version on device.
          {%- endif %}
  when: task_fail is not defined
