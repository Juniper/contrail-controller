{%     for ri in device_abstract_config.get('routing_instances', []) %}
{%         if (ri.get('routing_instance_type') == 'virtual-switch') or (ri.get('virtual_network_is_internal') == true) or ((ri.get('routing_instance_type') == 'vrf') and (ri.get('is_public_network') == true)) %}
{%             set vrf_import = ri.name+'-import' %}
{%             set vrf_export = ri.name+'-export' %}
{%             for import_target in ri.get('import_targets', []) %}
{%                 set community_target = import_target.replace(':', '_') %}
set groups __contrail_{{feature}}__ policy-options policy-statement {{vrf_import}} term t1 from community {{community_target}}
set groups __contrail_{{feature}}__ policy-options community {{community_target}} members {{import_target}}
{%             endfor %}
set groups __contrail_{{feature}}__ policy-options policy-statement {{vrf_import}} term t1 then accept
set groups __contrail_{{feature}}__ switch-options vrf-import {{vrf_import}}
{%             for export_target in ri.get('export_targets', []) %}
{%                 set community_target = export_target.replace(':', '_') %}
set groups __contrail_{{feature}}__ policy-options policy-statement {{vrf_export}} term t1 then community add {{community_target}}
set groups __contrail_{{feature}}__ policy-options community {{community_target}} members {{export_target}}
{%             endfor %}
set groups __contrail_{{feature}}__ policy-options policy-statement {{vrf_export}} term t1 then accept
set groups __contrail_{{feature}}__ switch-options vrf-export {{vrf_export}}
{%         endif %}
{%     endfor %}

{%     for bgp_elem in device_abstract_config.get('bgp', []) %}
{%         set families = bgp_elem.get('families', []) %}
{%         for fam in families %}
{%             if fam == 'evpn' %}
{%                 set route_distinguisher = bgp_elem.get('ip_address') %}
{%                 set as_number = bgp_elem.get('autonomous_system') %}
set groups __contrail_{{feature}}__ protocols evpn encapsulation vxlan
set groups __contrail_{{feature}}__ protocols evpn extended-vni-list all
set groups __contrail_{{feature}}__ switch-options vtep-source-interface lo0.0
set groups __contrail_{{feature}}__ switch-options route-distinguisher {{route_distinguisher}}:1
set groups __contrail_{{feature}}__ switch-options vrf-target target:{{as_number}}:1
{%                 for ri in device_abstract_config.get('routing_instances', []) %}
{%                     set name = ri.get('name') %}
{%                     set vxlan_id = ri.get('vxlan_id') %}
{%                     if ri.get('routing_instance_type', '') == 'virtual-switch' %}
{%                         for import_target in ri.get('import_targets', []) %}
set groups __contrail_{{feature}}__ protocols evpn vni-options vni {{vxlan_id}} vrf-target {{import_target}}
{%                         endfor %}
{%                     endif %}
{%                 endfor %}
{%             endif %}
{%         endfor %}
{%     endfor %}
