- name: settings facts
  set_fact:
    phy_interface: "{{item}}"
- set_fact:
    phy_interface_name: "{{phy_interface.name|replace(':', '_')}}"
    log_interface_list: []

- set_fact:
    log_interface_list:
      - "{{phy_interface.unit}}"
  when: "'unit' in phy_interface"

- set_fact:
    log_interface_list:
      - "{{phy_interface['logical-interface']}}"
  when: "'logical-interface' in phy_interface"

- name: call vnc to create the physical-interface
  vnc_db_mod:
    object_type: "physical_interface"
    object_op: "create"
    object_dict: |
      {
        "parent_type": "physical-router",
        "fq_name": ["default-global-system-config", "{{prouter_name}}", "{{phy_interface_name}}"],
        "display_name": "{{phy_interface.name}}"
      }
    auth_token: "{{auth_token}}"
  register: post_resp_phy
    
- name: Perform the necessary error handling
  include_tasks: error_handler.yml
  when: "post_resp_phy.failure == true"
  vars:
    op_err_message: "{{post_resp_phy.msg}}"
    jl_err_message: "Creating Physical Interface Failed on {{prouter_name}}, Imported so far: PhyInterfaces: {{phy_int_count}}, LogInterfaces: {{log_int_count}}; see result for more details"

- set_fact:
    phy_int_count: "{{phy_int_count | int + 1}}"
    
- set_fact:
    phy_uuid: {"physical_interface_uuid": "{{post_resp_phy.uuid}}"}
  
- set_fact:
    log_uuid_list: []

- name: create the configured log interface
  include_tasks: logical_interface_configured.yml
  when: "'family' in item"
  with_items: "{{log_interface_list}}"

- name: create the runtime log interface
  include_tasks: logical_interface_runtime.yml
  when: "'family' not in item"
  with_items: "{{log_interface_list}}"

- set_fact: 
    log_uuids: {"logical_interface_uuids": "{{log_uuid_list}}" }

- set_fact:
    result: "{{phy_uuid | combine(log_uuids)}}"

- set_fact:
    results: "{{results}}+[{{result}}]"
