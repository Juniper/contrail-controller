- name: call vnc to create the logical-interface
  vnc_db_mod:
    object_type: "logical_interface"
    object_op: "create"
    object_dict: "{{payload}}"
    auth_token: "{{auth_token}}"
  register: post_resp_log

- name: Perform the necessary error handling
  include_tasks: error_handler.yml
  when: "post_resp_log.failure == true"
  vars:
    op_err_message: "{{post_resp_log.msg}}"
    jl_err_message: "Creating Logical Interface Failed on {{prouter_name}}, Imported so far: PhyInterfaces: {{phy_int_count}}, LogInterfaces: {{log_int_count}}; see result for more details"

- set_fact:
    log_int_count: "{{log_int_count | int + 1}}"
    
- set_fact:
    log_uuid_list: "{{log_uuid_list}}+['{{post_resp_log.uuid}}']"
