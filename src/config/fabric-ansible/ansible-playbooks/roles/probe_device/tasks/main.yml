---
# tasks file for probe_device
    - name: ping check
      ping_sweep:
        hosts: "{{ ipaddress }}"
      register: hosts

    - debug: var=hosts

    - name: get snmp info
      snmp_facts:
        host: '{{ item }}'
        version: v2c
        community: public
      with_items: "{{ hosts.reachable_hosts }}"
      register: snmp_output
      no_log: True


    - name: pingable host list
      set_fact:
          pingable_hosts: "{{ hosts.reachable_hosts }}"


    - name: identify vendor and device family from OID
      oid_to_vendor_family:
        oid:  "{{ item.ansible_facts.ansible_sysobjectid }}"
        host: "{{ item.item }}"
        hostname: "{{ item.ansible_facts.ansible_sysname }}"
      with_items: "{{ snmp_output.results }}"
      register: vendor_family
      no_log: True


    - name: assign vendor family mapping
      set_fact:
          host_vendor_mapping: "{{ host_vendor_mapping|default([]) + [ item.oid_mapping ] }}"
      with_items: "{{ vendor_family.results }}"
      no_log: True


    - debug: var=host_vendor_mapping


    - name: get token
      uri:
        url: http://fab-server01.englab.juniper.net:5000/v3/auth/tokens
        method: POST
        status_code: 201
        headers:
          Content-Type: "application/json"
        body: |
          {
            "auth": {
              "identity": {
                "methods": ["password"],
                "password": {
                  "user": {
                    "name": "admin",
                    "domain": { "id": "default" },
                    "password": "contrail123"
                  }
                }
              },
              "scope": {
                "project": {
                  "name": "admin",
                  "domain": { "id": "default" }
                }
              }
            }
          }
      register: token

    - name: call vnc to create physical-router
      vnc_db_mod:
        object_type: "physical_router"
        object_op: "create"
        object_dict: |
          {
              "parent_type": "global-system-config",
              "fq_name": ["default-global-system-config", "{{ item.hostname }}"],
              "physical_router_management_ip": "{{ item.host }}",
              "physical_router_vendor_name": "{{ item.vendor }}",
              "physical_router_product_name": "{{ item.product }}"
           }
        auth_token: "{{token.x_subject_token}}"
      with_items: "{{ host_vendor_mapping }}"
      
