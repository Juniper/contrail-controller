---
# tasks file for device_facts_uve
- set_fact:
    job_ctx: "{{job_ctx|combine(percent_init_dict)}}"

- name: check to see if the ansible file for the vendor and family exists
  stat:
    path: "../../{{prouter_vendor}}_device_roles/tasks/{{prouter_family}}_facts.yml"
  register: p

- name: Get device facts with error handling
  block:
    - name: Execute get facts on device
      include_tasks: "../../{{prouter_vendor}}_device_roles/tasks/{{prouter_family}}_facts.yml"
      when: p.stat.exists

    # this is assuming device family is of the form: vendor_os-device_family. Ex: junos-qfx
    - name: Get device facts from default location
      block:
        - set_fact:
            prouter_family_mod: "{{ prouter_family.split('-')[0] | lower }}"
        - include_tasks: "../../{{prouter_vendor}}_device_roles/tasks/{{prouter_family_mod}}_facts.yml"
      when: p.stat.exists == False
  rescue:
    - name: Perform the necessary error handling
      include_tasks: error_handler.yml
      when: "device_data.failed==true"
      vars:
        op_err_message: "Error while obtaining facts from {{prouter_vendor}} device: {{device_data.msg}}"
        jl_err_message: "Error while obtaining facts from {{prouter_vendor}} device: {{device_data.msg}}"

- set_fact: 
    device_info: "{{device_info.facts}}"

- set_fact:
    hardware_model: "{{device_info.model}}"
    serial_number: "{{device_info.serialnumber}}"
    os_version: "{{device_info.version}}"
    hostname: "{{device_info.hostname}}"

- name: Update Job log with device_facts successs
  job_objectlog:
    job_ctx: "{{ job_ctx }}"
    status: "{{ JOBLOG_STATUS.IN_PROGRESS }}"
    message: "Imported system info for {{prouter_vendor}} device, {{prouter_name}}:\n   Serial number: {{serial_number}}\n   OS version: {{os_version}}\n   Model: {{hardware_model}}\n   Host name: {{hostname}}"
    device_name: "{{prouter_name}}"
