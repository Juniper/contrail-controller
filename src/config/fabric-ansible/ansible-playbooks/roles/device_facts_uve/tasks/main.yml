---
# tasks file for device_facts_uve
- set_fact:
    job_ctx: "{{job_ctx|combine(percent_init_dict)}}"

- name: check to see if the ansible file for the vendor and family exists
  stat:
    path: "../../{{prouter_vendor}}_device_roles/tasks/{{prouter_family}}_facts.yml"
  register: p

- name: Get device facts
  include_tasks: "../../{{prouter_vendor}}_device_roles/tasks/{{prouter_family}}_facts.yml"
  when: p.stat.exists

# this is assuming device family is of the form: vendor_os-device_family. Ex: junos-qfx
- name: Get device facts from default location
  block:
    - set_fact:
        prouter_family_mod: "{{ prouter_family.split('-')[0] | lower }}"
    - include_tasks: "../../{{prouter_vendor}}_device_roles/tasks/{{prouter_family_mod}}_facts.yml"
  when: p.stat.exists == False

- set_fact: 
    device_info: "{{device_info.facts}}"

- set_fact:
    hardware_model: "{{device_info.model}}"
    serial_number: "{{device_info.serialnumber}}"
    os_version: "{{device_info.version}}"
    hostname: "{{device_info.hostname}}"

- name: Update Job log with device_facts successs
  job_objectlog:
    job_ctx: "{{ job_ctx }}"
    status: "{{ JOBLOG_STATUS.IN_PROGRESS }}"
    message: "Obtained operational state information for {{prouter_vendor}} device: [SerialNo: {{serial_number}}, os_version: {{os_version}}, H/W Model: {{hardware_model}}, hostname: {{hostname}}]"
    device_name: "{{prouter_name}}"
