---
# tasks file for topology_discovery_role

- set_fact:
    job_ctx: "{{job_ctx|combine(percent_init_dict)}}"

- name: Execute "show lldp neighbors" command
  block:
    - juniper_junos_command:
        commands:
          - "show lldp neighbors interface"
        format: xml
        provider:
          host: "{{junos_host}}"
          username: "{{junos_username}}"
          password: "{{junos_password}}"
          port: 22
      register: resp
  rescue:
    - name: Perform the necessary error handling
      include_tasks: error_handler.yml
      when: resp is defined and resp.failed == true
      vars:
        op_err_message: "{{resp.msg}}"
        jl_err_message: "Failed to execute 'show lldp neighbors' command on Juniper device"

- name: check if resp is defined with neighbor info. If not, end play and stop playbook with status success
  block:
    - name: End Task gracefully if no neighbors are found
      include_tasks: percentage_update.yml
      vars:
        current_index: 4
        jl_message: "Obtained topology information from Juniper device; 0 neighbors found."
    - set_fact:
        output: "{{output }}"
    - meta: end_play
  when: '"lldp-neighbor-information" not in resp.parsed_output["lldp-neighbors-information"]'

- set_fact:
    lldp_neighbor_info: "{{resp['parsed_output']['lldp-neighbors-information']['lldp-neighbor-information']}}"

- name: set lldp-neighbor-info into list in case of a single neighbor
  set_fact:
    lldp_neighbor_info: [ "{{lldp_neighbor_info}}"  ]
  when: lldp_neighbor_info is mapping

- name: get the local interfaces name
  set_fact:
    local_interfaces_port_list: "{{lldp_neighbor_info|json_query('[*].\"lldp-local-port-id\"')}}"

- name: get the local interfaces name
  set_fact:
    local_interfaces_name_list: "{{lldp_neighbor_info|json_query('[*].\"lldp-local-interface\"')}}"

- set_fact:
    local_interfaces_list: "{{local_interfaces_port_list + local_interfaces_name_list}}"

- name: Execute "show lldp neighbors interface <interface-name>" command
  block:
    - juniper_junos_command:
        commands:
          - "show lldp neighbors interface {{item}}"
        format: xml
        provider:
          host: "{{junos_host}}"
          username: "{{junos_username}}"
          password: "{{junos_password}}"
          port: 22
      register: junos_dev_details
      with_items: "{{local_interfaces_list}}"
  rescue:
    - name: Perform the necessary error handling
      include_tasks: error_handler.yml
      when: junos_dev_details.failed == true
      vars:
        op_err_message: "Failed to execute 'show lldp neighbors interface' command on Juniper device: {{junos_dev_details.msg}}"
        jl_err_message: "Failed to execute 'show lldp neighbors interface' command on Juniper device"

- name: Update job log with percentage
  include_tasks: percentage_update.yml
  vars:
    current_index: 1
    jl_message: "Discoverd topology info:\n  {{prouter_name}} / {{lldp_neighbor_info['lldp-local-port-id']}} --> {{lldp_neighbor_info['lldp-remote-system-name']}}"
  when: lldp_neighbor_info is mapping

- debug:
    msg: "{{local_interfaces_list}}"
    verbosity: 1

- name: parse lldp info obtained to get remote system information
  set_fact:
    parsed_lldp_neighbors_op: "{{junos_dev_details | parse_neighbor_info(prouter_fqname)}}"

- debug:
    msg: "{{parsed_lldp_neighbors_op}}"
    verbosity: 1

- name: vnc-db-mod bulk query for listing all physical-interfaces for multiple devices
  vnc_db_mod:
    job_ctx: "{{job_ctx}}"
    object_type: "physical_interface"
    object_op: "bulk_query"
    object_dict: {"fields": ['physical_interface_port_id']}
    object_list: "{{parsed_lldp_neighbors_op.remote_neighbors_list}}"
  register: bulk_query_prouter_resp

- debug:
    msg: "{{bulk_query_prouter_resp}}"
    verbosity: 1

- name: get remote port-id to fq_name map
  set_fact:
    port_id_fqname_map: "{{bulk_query_prouter_resp| get_port_id_fqname_map}}"

- debug:
    msg: "{{port_id_fqname_map}}"
    verbosity: 1

- name: get the payload for bulk ref add
  set_fact:
    bulk_ref_add_payload: "{{port_id_fqname_map | get_bulk_ref_add_payload(parsed_lldp_neighbors_op.neighbor_map_info_list)}}"

- debug:
    msg: "{{bulk_ref_add_payload}}"
    verbosity: 1

- name: bulk add references between the objects and update vnc
  vnc_db_mod:
    job_ctx: "{{job_ctx}}"
    object_type: "physical_interface"
    object_dict: {"ref_type": "physical_interface", "ignore_unknown_id_err": True }
    object_op: "bulk_ref_update"
    object_list: "{{bulk_ref_add_payload}}"
  register: bulk_ref_create_resp
