group {
  # Globals for the group
  class "JUNIPER" {
    match if substring(option vendor-class-identifier, 0, 7) = "Juniper";
    vendor-option-space jn;
    option jn.config-file-name "{{ fabric_fq_name[-1] }}_juniper.sh";
    option jn.transfer-mode "tftp";
  }
{% if ztp_config.network_ipam_mgmt is defined %}
{%   if ztp_config.network_ipam_mgmt.dhcp_option_list is defined %}
{%     if ztp_config.network_ipam_mgmt.dhcp_option_list.dhcp_option is defined %}
{%       for option in ztp_config.network_ipam_mgmt.dhcp_option_list.dhcp_option %}
{%         if option.dhcp_option_name == "15" %}
  option domain-name {{ option.dhcp_option_value }};
{%         endif %}
{%       endfor %}
{%     endif %}
{%   endif %}
{%   if ztp_config.network_ipam_mgmt.ipam_dns_server is defined %}
{%     if ztp_config.network_ipam_mgmt.ipam_dns_server.tenant_dns_server_address is defined %}
  option domain-name-servers
{%-     for server in ztp_config.network_ipam_mgmt.ipam_dns_server.tenant_dns_server_address.ip_address %} {{ server }}{% if not loop.last %},{% endif %}{% endfor %};
{%     endif %}
{%   endif %}
{% endif %}

{% if ztp_config.ipam_subnets is defined %}
  # Defines a range of addresses to be assigned on the given subnet
{%   for subnet in ztp_config.ipam_subnets %}
{%     set cidr = subnet.subnet.ip_prefix + '/' + subnet.subnet.ip_prefix_len|string %}
  subnet {{ cidr | ipv4('network') }} netmask {{ cidr | ipv4('netmask') }} {
    default-lease-time -1;
    max-lease-time -1;

    option broadcast-address {{ cidr | ipv4('broadcast') }};

    option tftp-server-name "{{ tftp_server }}";
    option option-150 {{ tftp_server }};

{%     set alloc_list = [] %}
{%     set x = alloc_list.append((cidr | ipsubnet(31,0) | ipv4('address')) | ipaddr('int')) %}
{%     set y = alloc_list.append((cidr | ipsubnet(31,-1) | ipv4('address')) | ipaddr('int') +1) %}
{%     if subnet.default_gateway is defined %}
    option routers {{ subnet.default_gateway }};
{%     endif %}
{%     set z = alloc_list.append((subnet.default_gateway | ipv4('address')) | ipaddr('int')) %}
{%     set alloc_list = alloc_list | sort %}
{%     set length = alloc_list | length %}
{%     for idx in range(length-1) %}
{%       if alloc_list[idx+1] != alloc_list[idx]+1 %}
    pool {
        range {{ (alloc_list[idx]+1) | ipaddr }} {{ (alloc_list[idx+1]-1) | ipaddr }};
    }
{%       endif %}
{%     endfor %}
  }
{%   endfor %}
{% endif %}
}
