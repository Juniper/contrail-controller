---

- name: Save fabric UUID
  set_fact: fabric_uuid="{{fabric_uuid}}"

- name: Save device count
  set_fact: device_count="{{device_count}}"

- name: get fabric fq name
  vnc_db_mod:
    enable_job_ctx: False
    job_ctx: "{{ job_ctx }}"
    object_type: "fabric"
    object_op: "id_to_fq_name"
    object_dict: |
      {
        "uuid": "{{ fabric_uuid }}"
      }
  register: fq_name
  when: fabric_uuid is defined

- name: Save fabric name
  set_fact:
     fabric_fq_name: "{{ fq_name.fq_name }}"
  when: fabric_uuid is defined

- name: get fabric
  vnc_db_mod:
    enable_job_ctx: False
    job_ctx: "{{ job_ctx }}"
    object_type: "fabric"
    object_op: "read"
    object_dict: |
      {
        "fq_name": "{{ fabric_fq_name }}"
      }
  register: fabric

- name: get network_ipam fq name
  vnc_db_mod:
    enable_job_ctx: False
    job_ctx: "{{ job_ctx }}"
    object_type: "network_ipam"
    object_op: "id_to_fq_name"
    object_dict: |
      {
        "uuid": "{{ ipam_uuid }}"
      }
  register: i_fq_name
  when: ipam_uuid is defined

- name: Save IPAM name
  set_fact:
     ipam_fq_name: "{{ i_fq_name.fq_name }}"
  when: ipam_uuid is defined

- name: Print ipam_fq_name
  debug: var=ipam_fq_name verbosity=1

- name: get network_ipam
  vnc_db_mod:
    enable_job_ctx: False
    job_ctx: "{{ job_ctx }}"
    object_type: "network_ipam"
    object_op: "read"
    object_dict: |
      {
        "fq_name": "{{ ipam_fq_name }}"
      }
  register: ipam

- name: Save IPAM config
  set_fact:
     dhcp_config: "{{ ipam.obj }}"

- name: Print IPAM object
  debug: var=dhcp_config verbosity=1

- name: Create subdirectories for calculating config
  include_tasks: create_subdirs.yml

- name: Generate config file global section on local host
  block:
    - name: Generate config file global section on local host
      template:
        src: dhcpd-global.conf.j2
        dest: "{{ ztp_dhcp_gconf_path }}"
      register: cmd_res
  rescue:
    - set_fact:
        output: {
          "status": "Failed to generate global config",
          "message": "{{cmd_res.msg}}"
        }
    - name: print output
      debug: var=output verbosity=1
    - meta: end_play

- name: Generate config file subsection on local host
  block:
    - name: Generate config file subsection on local host
      template:
        src: dhcpd.conf.j2
        dest: "{{ ztp_dhcp_conf_path }}"
      register: cmd_res
  rescue:
    - set_fact:
        output: {
          "status": "Failed to generate config",
          "message": "{{cmd_res.msg}}"
        }
    - name: print output
      debug: var=output verbosity=1
    - meta: end_play

- name: Generate script file on local host
  block:
    - name: Generate script file on local host
      template:
        src: juniper.sh.j2
        dest: "{{ ztp_tftp_dir }}/{{ fabric_fq_name[-1] }}_juniper.sh"
      register: cmd_res
  rescue:
    - set_fact:
        output: {
          "status": "Failed to generate script",
          "message": "{{cmd_res.msg}}"
        }
    - name: print output
      debug: var=output verbosity=1
    - meta: end_play

