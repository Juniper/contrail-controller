- name: Update pb_input
  set_fact:
    pb_input: "{{pb_input | combine({'interface_filters': [{'op': 'regex', 'expr': '^xe|^ge|^et|^fxp|^xle|^fc|^fte'}] })}}"

- name: Execute commands on device
  include_tasks: "../../{{prouter_vendor}}_device_roles/tasks/{{prouter_os}}_command.yml"

- name: set device info as interface_info
  set_fact:
    interface_info: "{{device_info}}"

- name: settings facts
  set_fact:
    interface_list: "{{interface_info|json_query('output[0].\"rpc-reply\".\"configuration\".\"interfaces\".\"interface\"')}}"
    interface_list_new: "{{interface_info|json_query('output[1].\"rpc-reply\".\"interface-information\".\"physical-interface\"')}}"

- name: Update job log with percentage
  include_tasks: percentage_update.yml
  vars:
    current_index: 2
    jl_message: "Obtained interface information from the Juniper device; starting import ..."

- name: Get the pattern object
  set_fact:
    pattern_obj: |
      {%- set regex_list = []                                                           %}
      {%- for filter in pb_input.get('interface_filters', {})                           %}
      {%-     if filter.get('op') == "regex"                                            %}
      {%-         set x=regex_list.append(filter.get('expr', None))                     %}
      {%-     endif                                                                     %}
      {%- endfor                                                                        %}
      {
       "regex_list": {{regex_list|to_json}}
      }

- name: get the regex str separated by |
  set_fact:
    regex_str: "{{pattern_obj.regex_list|join('|')}}"

- name: test filter working
  set_fact: 
    result: "{{job_ctx.get('auth_token') | device_import(prouter_name, prouter_vendor, prouter_family, interface_info, regex_str) }}"
