---
- name: Get Device commits
  block:
    - import_role:
        name: Juniper.junos

    - name: Execute commands on a Juniper Device to get Commits
      juniper_junos_command:
        commands:
          - show system commit
        format: xml
        dest: "./manual_config/{{ device_mgmt_ip }}/show_system_commits.xml"
        provider:
          host: "{{device_mgmt_ip}}"
          username: "{{device_username}}"
          password: "{{device_password}}"
          port: 22
          timeout: "{{JUNOS_COMMAND_TIMEOUT|int}}"
      register: device_commits

- name: Setting commit_list and Date-time to be formatted to include underscores
  block:
    - name: Set_fact commit_list and another variable to hold formatted date-time
      set_fact:
        commit_list: "{{ device_commits.parsed_output[\"commit-information\"][\"commit-history\"] }}"
        commit_list_mod: []

    - name: Format date-time in commit_list to replace space with underscores as it causes issues with xmlfile lookup plugin
      set_fact:
        commit_list_mod: "{{ commit_list  | map(attribute = 'date-time') | map('regex_replace',' ','_') | list }}"

# For greenfield two scenarios to identify contrail commit:
#     1. Before Fabric provisioning: 'junoscript' found in Client
#     2. After Fabric provisioning: Commit comment (log) includes words as 'Contrail execution ID'
# For Brownfield: No rollback compare as none of the above will be included.
#For instance as below:
# 0   2019-12-13 01:01:46 UTC by charles via cli
#     third commit by Charles
# 1   2019-12-13 00:59:19 UTC by bhakti via cli
# 2   2019-12-13 00:56:55 UTC by pbok via cli
# 3   2019-12-12 23:59:58 UTC by root via netconf
#     Contrail execution ID: 1578601440800_94bbb4de-b4df-442e-8028-10d4d9fd661f
#
#Note: Here comment includes words 'Contrail execution ID' hence 3 is picked as contrail committed and since it is not 0, 3 will be compared with rollback commit 2, 2 with 1 and 1 with 0.
- name: Determine if Contrail Committed or not
  block:
    - name: Check if contrail committed using junoscript, i.e. after Junos zeroize
      ignore_errors: true
      set_fact:
        jscript_commit: "{{ commit_list | selectattr('client', 'equalto', 'junoscript') | map(attribute = 'sequence-number') | list | first }}"

    - name: Check if contrail committed using commit comment and Netconf, i.e. Netconf via Contrail
      ignore_errors: true
      set_fact:
        contrail_commit: "{{ commit_list | selectattr('client', 'equalto', 'netconf') | selectattr('log', 'defined') |  selectattr('log', 'search', 'Contrail execution ID') | map(attribute = 'sequence-number') | list | first }}"

    - name: Check if jscript commit then set contrail commit variable
      when: contrail_commit is not defined and jscript_commit is defined
      set_fact:
        contrail_commit: "{{ jscript_commit }}"

    - name: Check if contrail_commit or jscript_commit is recent
      when: contrail_commit is defined and jscript_commit is defined
      set_fact:
        contrail_commit: "{% if contrail_commit|int < jscript_commit|int  %}{{ contrail_commit }}{% else %}{{ jscript_commit }}{% endif %}"

    - name: Check if manual commit has occur
      when: contrail_commit is not defined and jscript_commit is not defined
      set_fact:
        contrail_commit: "{{ 0 }}"

    - name: Print contrail_commit
      debug:
        msg: "{{ contrail_commit }}"

    - name: Check if contrail commit is latest, i.e. 0
      set_fact:
        latest_cont_commit: "{% if contrail_commit|int == 0 %}true{% else %}false{% endif %}"
      when: contrail_commit is defined

    - name: Display message if contrail_commit is latest
      debug:
        msg: "Contrail Commit is latest or there were no contrail commits before for brownfield site. Hence no further processing will be carried out."
      when: contrail_commit is defined and latest_cont_commit == true
  ignore_errors: yes

- name: Get rollback compare if contrail committed
  block:

    - import_role:
        name: Juniper.junos

    - name: Execute command on a Juniper Device to get Commits
      juniper_junos_command:
        commands:
          - show system rollback {{ item|int -1}} compare {{ item }}
        format: xml
        dest: "./manual_config/{{ device_mgmt_ip }}/{{commit_list[item|int -1]['user']}}_{{commit_list_mod[item|int -1]}}.xml"
        provider:
          host: "{{device_mgmt_ip}}"
          username: "{{device_username}}"
          password: "{{device_password}}"
          port: 22
          timeout: "{{JUNOS_COMMAND_TIMEOUT|int}}"
      register: rollback_compare
      loop: "{{ range(contrail_commit|int,0,-1)|list }}"
  when: (latest_cont_commit == false) and (contrail_commit is defined)
  ignore_errors: yes

- name: Parse rollback_compare xml files from prev step to diff file
  block:

    - name: Convert XML to diff file
      include_tasks: "create_diff_file.yml"
      loop: "{{ range(contrail_commit|int,0,-1)|list }}"
  when: (latest_cont_commit == false) and (contrail_commit is defined)
  ignore_errors: yes
