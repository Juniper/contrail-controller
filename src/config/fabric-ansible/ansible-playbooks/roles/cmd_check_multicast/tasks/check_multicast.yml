---

- name: "Read configuration type and filter"
  set_fact:
    src: "{{input_params.get('src', '') | trim}}"

- name: "Print src"
  debug:
    var: src

- name: Read the physical-router properties for {{ device_uuid }}
  vnc_db_mod:
    job_ctx: "{{ job_ctx }}"
    object_type: "physical_router"
    object_op: "read"
    object_dict: {"uuid": "{{ device_uuid }}"}
  register: physical_router_properties

- name: "Fetch fabric uuid from physical router properties"
  set_fact:
    fabric_uuid: "{{ physical_router_properties.obj.fabric_refs[0].uuid }}"

- name: Read the fabric properties for {{ fabric_uuid }}
  vnc_db_mod:
    job_ctx: "{{ job_ctx }}"
    object_type: "fabric"
    object_op: "read"
    object_dict: {"uuid": "{{ fabric_uuid }}"}
  register: fabric_properties

- name: "Fetch fabric name from fabric properties"
  set_fact:
    fabric_name: "{{ fabric_properties.obj.fq_name[1] }}"

- name: "Read physical routers for the fabric: {{ fabric_name }}"
  vnc_db_mod:
    job_ctx: "{{ job_ctx }}"
    object_type: "physical_router"
    object_op: "list"
    object_dict: "{ 'filters':{'fabric_refs[0].uuid':'{{ fabric_uuid }}'} }"
  register: devices_from_fabric

- name: "Fetch device uuids from the list of physical routers"
  set_fact:
    device_uuids: "{{ devices_from_fabric | json_query('obj.\"physical-routers\"[*].uuid') }}"

- name: "Print device uuids for the fabric {{ fabric_name }}"
  debug:
    var: device_uuids

- name: "Write results to the temporary file: {{ tmp_dir_name }}/tmp-results.txt"
  copy:
    content: "{{ device_uuids }}"
    dest: "{{ tmp_dir_name }}/tmp-results.txt"

- name: "Give the temporary file its final name: {{ tmp_dir_name }}/results.txt"
  command: "mv {{ tmp_dir_name }}/tmp-results.txt {{ tmp_dir_name }}/results.txt"
