- block:
    - name: Call vendor-specific health check logic
      include_tasks: "{{ device_vendor }}.yml"

    - name: Abort if requested
      include_tasks: error_handler.yml
      when: device_health_report.total_failures > 0 and abort_upon_failure == True
      vars:
        op_err_message: |
            {{prouter_name}} failed device health check with {{ device_health_report.total_failures }} failures
            Health report for {{prouter_name}}:\n {{device_health_report|to_yaml}}
        jl_err_message: |
            {{prouter_name}} failed device health check with {{ device_health_report.total_failures }} failures
            Health report for {{prouter_name}}:\n {{device_health_report|to_yaml}}
        upgrade_error_state: "{{DEVICE_STATE.HEALTH_CHECK_FAILED}}"
        results:
          "test_results": "{{ device_health_report }}"

    - name: convert to json string
      set_fact:
        device_health_report: "{{device_health_report|to_yaml}}"
  when: snap_test_pfx is defined

- block:
    - name: Call vendor-specific multi-homing check logic
      include_tasks: "{{device_vendor}}_multihoming.yml"

    - block:
        - name: Print all the errors
          debug:
            msg="{{errors_list}}"

        - name: Set the is_hitless to False
          set_fact:
            is_hitless_upgrade: False
      when: multi_homed_error_flag and abort_upon_failure == False

    - name: Abort if requested
      include_tasks: error_handler.yml
      when: multi_homed_error_flag and abort_upon_failure == True
      vars:
        op_err_message: "{{errors_list}}"
        jl_err_message: "{{errors_list}}"
        upgrade_error_state: "{{DEVICE_STATE.HEALTH_CHECK_FAILED}}"
  when: snap_action == "check_peer"

- name: Update the prouter logs with success status
  prouter_objectlog:
    prouter_fqname: "{{device_fqname}}"
    onboarding_state: "{{DEVICE_STATE.HEALTH_CHECK_SUCCESSFUL}}"
    job_ctx: "{{job_ctx}}"
