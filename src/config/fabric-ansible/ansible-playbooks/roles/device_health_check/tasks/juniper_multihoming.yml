- name: Create a list to append errors if any
  set_fact:
    errors_list: []

- name: Create a list to append correct interface status
  set_fact:
    interface_up_list: []

- name: Grab device information for multihomed leaf
  set_fact:
      device_info: "{{upgrade_plan['device_table'].get(device_uuid)}}"

- name: Set the multi homed error flag
  set_fact:
    multi_homed_error_flag: False

- name: Check multihomed interface status for peer
  block:

    - name: Set the buddy details
      set_fact:
        buddy_details: "{{device_info.vpg_info.buddies}}"

    - name: Set vpg list info
      set_fact:
         vpg_list: "{{device_info.vpg_info.vpg_list}}"

    - name: Print the buddy details
      debug: var=buddy_details verbosity=1

    - name: Set the peer check variable
      set_fact:
        itr_check: "peer_check"

    - name: Print device health report
      debug:
        var: device_health_report
        verbosity: 1

    - block:
        - name: Log error if buddy detail is null
          set_fact:
            lacp_error_msg: "The device {{device_info.name}} does not have any multihomed peers. The upgrade will not be hitless"

        - name: Append error to the list
          set_fact:
            errors_list: "{{ errors_list + [ lacp_error_msg ] }}"

        - name: Set the multi-homed error flag
          set_fact:
            multi_homed_error_flag: True
      when: buddy_details|length<=0 and vpg_list|length!=0

    - name: Check if multihomed interfaces are up on peer device
      block:
        - name: Set the buddy details
          set_fact:
            device_list: "{{buddy_details}}"

        - block:
            - juniper_junos_command:
                commands:
                  - show lacp interfaces
                display: xml
                provider:
                  host: "{{item.mgmt_ip}}"
                  username: "{{item.username}}"
                  password: "{{item.password}}"
                  port: 22
                  timeout: 30
              register: interface_info
              with_items:
                - "{{device_list}}"

            - name: Display the results
              debug:
                msg="{{interface_info}}"
          rescue:
            - name: Log error if juniper junos command fails
              set_fact:
                lacp_error_msg: "Error while obtaining interface information from Juniper device: {{interface_info.msg}}"

            - name: Append error to the list
              set_fact:
                errors_list: "{{ errors_list + [ lacp_error_msg ] }}"

            - name: Set the multi-homed error flag
              set_fact:
                multi_homed_error_flag: True

        - block:
            - name: Grab the lacp information list info for peer check
              set_fact:
                lacp_information_list: "{{interface_info.results[0].parsed_output['lacp-interface-information-list']['lacp-interface-information']}}"

            - include: lacp_interfaces_analyze.yml
              with_subelements:
              - "{{device_list}}"
              - multihomed_interface_list

            - name: Unset the variable
              set_fact:
                itr_check: "peer_check_done"
          when: interface_info.results[0].failed == False
      when: buddy_details is defined and buddy_details |length>0
  when: lacp_down_peer_check


- name: Check if multi-homed interfaces are up on target device
  block:
    - set_fact:
            target_interface_list: "{{device_info.target_multihomed_interface}}"

    - block:
        - name: Log error if target interface is null
          set_fact:
            lacp_error_msg: "The device {{device_info.name}} does not have any interfaces multihomed with it listed peers. The upgrade will not be hitless "

        - name: Append to the errors list
          set_fact:
            errors_list: "{{ errors_list + [ lacp_error_msg ] }}"

        - name: Set the multi-homed error flag
          set_fact:
            multi_homed_error_flag: True
      when: buddy_details is defined and buddy_details |length>0 and target_interface_list|length<=0

    - block:
        - block:
            - juniper_junos_command:
                commands:
                  - show lacp interfaces
                display: xml
                provider:
                  host: "{{device_mgmt_ip}}"
                  username: "{{device_username}}"
                  password: "{{device_password}}"
                  port: 22
                  timeout: 30
              register: interface_info
          rescue:
            - name: Log error if juniper junos command fails
              set_fact:
                lacp_error_msg: "Error while obtaining interface information from Juniper device: {{interface_info.msg}}"

            - name: Append error to the list
              set_fact:
                errors_list: "{{ errors_list + [ lacp_error_msg ] }}"

            - name: Set the multi-homed error flag
              set_fact:
                multi_homed_error_flag: True
        - block:
            - name: Grab the lacp information list for target device check
              set_fact:
                lacp_information_list: "{{interface_info.parsed_output['lacp-interface-information-list']['lacp-interface-information']}}"

            - name: Set the device name
              set_fact:
                device_name: "{{device_info.name}}"

            - include: lacp_interfaces_analyze.yml
              with_together:
              - ["{{device_info}}"]
              - "{{target_interface_list}}"
          when: interface_info.failed == False
      when: buddy_details is defined and buddy_details |length>0 and target_interface_list is defined and target_interface_list |length>0
  when: lacp_down_local_check

