# -*- mode: python; -*-

#
# Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
# 
import os

Import('CfgmEnv')
env = CfgmEnv.Clone()

sources = [
    'setup.py',
    'requirements.txt',
    'test-requirements.txt',
    'MANIFEST.in',
    'svc_monitor/__init__.py',
    'svc_monitor/svc_monitor.py',
    'svc_monitor/instance_manager.py',
    'svc_monitor/db.py',
    'svc_monitor/logger.py',
    'svc_monitor/scheduler/__init__.py',
    'svc_monitor/scheduler/vrouter_scheduler.py',
    'svc_monitor/tests/__init__.py',
    'svc_monitor/tests/test_init.py',
    'svc_monitor/tests/scheduler/__init__.py',
    'svc_monitor/tests/scheduler/test_vrouter_schedulers.py',
]

sources += env.SandeshGenPy('svc_mon_introspect.sandesh',
                            'svc_monitor/sandesh/', False)

sdist_gen = env.Command('dist', sources, 'python setup.py sdist', chdir=1)
env.Alias('controller/src/config/svc_monitor:sdist', sdist_gen)

test_sources = sources
packages = [
    '%s/api-lib/dist/vnc_api-0.1dev.tar.gz' % env['TOP'],
    '%s/config/common/dist/cfgm_common-0.1dev.tar.gz' % env['TOP'],
    '%s/discovery/client/dist/discoveryclient-0.1dev.tar.gz' % env['TOP'],
    '%s/sandesh/common/dist/sandesh-common-0.1dev.tar.gz' % env['TOP'],
    '%s/tools/sandesh/library/python/dist/sandesh-0.1dev.tar.gz' % env['TOP'],
]

def BuildPyTestSetup(env, target, source):
    file = open(target[0].abspath, 'w')
    file.write("[easy_install]\nfind_links =")
    for pkg in source:
        dependency = env.File(pkg)
        file.write(" %s" % os.path.dirname(dependency.abspath))
    file.write("\n")
    file.close()
    return

def GeneratePyTestSetup(env, targets, source):
    """
    Generate a setup.cfg file that contains a list of directories
    where dependent packages can be found. The fact that package directory
    list is being given as a source automatically adds them as dependencies.
    """
    target = env.File('setup.cfg')
    return env.Command(target=target, source=source, action=BuildPyTestSetup);

env.Append(BUILDERS = {'PythonTestSetup': GeneratePyTestSetup})
test_sources += env.PythonTestSetup(source=packages)

test = env.Command(None, test_sources,
                   'python setup.py test',
                   chdir=1)

env.Alias('controller/src/config/svc_monitor:test', test)

if 'install' in BUILD_TARGETS:
    install_cmd = env.Command(None, sources,
                              'python setup.py install %s' %
                              env['PYTHON_INSTALL_OPT'],
                              chdir = 1)
    env.Alias('install', install_cmd)

env.Alias('install', env.Install(env['INSTALL_CONF'], 'contrail-svc-monitor.conf'))
env.Alias('install', env.InstallAs( env['INSTALL_INITD'] +
    '/contrail-svc-monitor', 'contrail-svc-monitor.initd.supervisord'))
env.Alias('install', env.Install(env['INSTALL_CONF']+ 
    '/supervisord_config_files', 'contrail-svc-monitor.ini')) 
