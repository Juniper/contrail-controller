//
// service_instance.sandesh
//
// UVE service instance
//
// Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
//

struct UveSvcInstanceVMConfig {
    1: string          uuid
    2: optional string vr_name;
    3: optional string ha;
}

struct UveSvcInstanceConfig {
    1: string                                name (key="ObjectSITable")
    2: optional bool                         deleted
    3: optional string                       st_name
    4: optional string                       status
    5: optional i64                          create_ts
    6: optional list<UveSvcInstanceVMConfig> vm_list;
}

uve sandesh UveSvcInstanceConfigTrace {
    1: UveSvcInstanceConfig data
}

struct UveLoadbalancerVirtualIp {
    10: string          obj_name;
    11: string          uuid;
    12: string          status;
    13: string          vip;
    14: string          vip_subnet;
}

struct UveLoadbalancerListener {
    10: string          obj_name;
    11: string          uuid;
    12: string          status;
    13: string          protocol;
    14: string          protocol_port;
    15: string          connection_limit;
}

struct UveLoadbalancerPool {
    10: string          obj_name;
    11: string          uuid;
    12: string          status;
    13: string          protocol;
    14: string          protocol_port;
    15: string          lb_algorithm;
    16: string          session_persistence;
}

struct UveLoadbalancerMember {
    10: string          obj_name;
    11: string          uuid;
    12: string          admin_state;
    13: string          address;
    14: string          protocol_port;
    15: string          weight;
}

struct UveLoadbalancerStats {
    10: string          obj_name;
    11: string          uuid;
    12: string          status;
    20: optional u64    active_connections;
    21: optional u64    max_connections;
    22: optional u64    current_sessions;
    23: optional u64    max_sessions;
    24: optional u64    total_sessions;
    25: optional u64    bytes_in;
    26: optional u64    bytes_out;
    27: optional u64    connection_errors;
    28: optional u64    reponse_errors;
}

struct UveLoadbalancer {
    1: string                                  name (key="ObjectSITable")
    2: optional bool                           deleted
    3: optional list<UveLoadbalancerVirtualIp> virtual_ip
    3: optional list<UveLoadbalancerStats>     virtual_ip_stats (tags=".uuid,.obj_name");
    4: optional list<UveLoadbalancerListener>  listener
    4: optional list<UveLoadbalancerStats>     listener_stats   (tags=".uuid,.obj_name");
    5: optional list<UveLoadbalancerPool>      pool
    5: optional list<UveLoadbalancerStats>     pool_stats       (tags=".uuid,.obj_name");
    6: optional list<UveLoadbalancerMember>    member
    6: optional list<UveLoadbalancerStats>     member_stats     (tags=".uuid,.obj_name");
}

uve sandesh UveLoadbalancerStatsTrace {
    1: UveLoadbalancerStats data
}
