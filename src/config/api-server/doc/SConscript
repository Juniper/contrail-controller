#
# Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
#

# -*- mode: python; -*-

Import('CfgmEnv')
env = CfgmEnv.Clone()

import os
import shutil

doc_sources_rules = []

generated = ['vnc_cfg_api_server.rst', 'modules.rst']
if os.path.exists('/usr/bin/sphinx-apidoc'):
    apidoc_rule = env.Command(generated, '', 'SPHINX_APIDOC_OPTIONS="members,show-inheritance" sphinx-apidoc -f -o ' + Dir('.').path + ' ' + Dir('../vnc_cfg_api_server').path + ' ' + Dir('.').path)
    env.Depends(apidoc_rule, File(env['TOP'] + '/config/api-server/vnc_cfg_api_server/gen/__init__.py'))

    userdoc_rule = env.Install(Dir('.'), Glob('#controller/src/config/api-server/doc/source/*'))
    schema_rule = env.Install(Dir('.'), Glob('#controller/src/schema/*.xsd'))

    html_gen_rule = env.Command('contrail-config', ['Makefile', 'conf.py'],
                                'make -C ' + Dir('.').path + ' html') 
    env.Depends(html_gen_rule, [apidoc_rule, userdoc_rule, schema_rule])


    doc_sources_rules.append(env.Install("../vnc_cfg_api_server", Dir('.')))
    env.Depends(doc_sources_rules, html_gen_rule)

env.Requires(doc_sources_rules, File(env['TOP'] + '/config/api-server/vnc_cfg_api_server/vnc_cfg_api_server.py'))

if 'install' in BUILD_TARGETS:
    env.Alias('install', env.Install(env['INSTALL_DOC']+'/contrail-config', doc_sources_rules))

Return('doc_sources_rules')
