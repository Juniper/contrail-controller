#!/bin/bash
#
# Copyright (c) 2014 Juniper Networks, Inc. All rights reserved.
#

usage () {
  echo "usage: $0 -[hdei]"
  echo " Default status will be given with all the options"
  echo "-i Gives the package information"
  echo "-d Detailed status"
  echo "-e Errors"
}

detailed=0
errors=0
dpkg_info=0

while getopts ':hdei?' OPTION
do
  case $OPTION in
  d) detailed=0
     break ;;
  e) errors=1
     break ;;
  i) dpkg_info=0
     break ;;
  h) usage
     exit 2
     ;;
  ?) usage
     exit 2
     ;;
  esac
done

systemctl --version >/dev/null 2>&1 && systemctl=1

dpkg -l contrail-libs 2> /dev/null 1> /dev/null && clibs='clibs'
dpkg -l contrail-control 2> /dev/null 1> /dev/null && control='control'
dpkg -l contrail-analytics 2> /dev/null 1> /dev/null && analytics='analytics'
dpkg -l contrail-vrouter  2> /dev/null 1> /dev/null && agent='agent'
dpkg -l contrail-config  2> /dev/null 1> /dev/null && capi='capi'
dpkg -l openstack-quantum-contrail 2> /dev/null 1> /dev/null && cquantum='cquantum'
dpkg -l contrail-web-core  2> /dev/null 1> /dev/null && cwebui='cwebui'
dpkg -l contrail-openstack-database 2> /dev/null 1> /dev/null  && database='database'
lsmod | grep vrouter 2> /dev/null 1> /dev/null && vr='vr'

declare -a failedlist

service_installed() {
    initctl show-config $1 2> /dev/null 1> /dev/null
}

service_enabled() {
  if [ "$systemctl" ]; then
    systemctl --quiet is-enabled $1.service 2>/dev/null
  else
    initctl show-config $1 | grep -q "^  start on" 2> /dev/null 1> /dev/null
  fi
}

check_sysv_svc() {

  printf '%-30s' "$1:"
  install_status=$(service_installed $1 && echo installed || echo not-installed)
  if [ "$install_status" = 'installed' ]; then
      bootstatus=$(service_enabled $1 && echo enabled || echo disabled)
      status=$(service $1 status | grep -s running  >/dev/null 2>/dev/null && echo active || echo inactive)
  else
      bootstatus='disabled'
      status='inactive'
  fi
  if [ "$bootstatus" = 'disabled' ]; then
    bootstatus=' (disabled on boot)'
  else
    bootstatus=''
  fi

  if [ "$status" = 'inactive' ] && [ -z "$bootstatus" ]; then
    failedlist=("${failedlist[@]}" "$1")
  fi
  if [ "$status" = 'failed' ] && [ -z "$bootstatus" ]; then
    failedlist=("${failedlist[@]}" "$1")
  fi
  printf '%s\n' "$status$bootstatus"
}

check_svc() {

  if [ ! "$systemctl" ]; then
    check_sysv_svc "$@"
    return
  fi

  printf '%-30s' "$1:"
  bootstatus=$(service_enabled $1 && echo enabled || echo disabled)
  status=$(systemctl is-active $1.service 2>/dev/null)
  # For "simple" systemd services you get
  # "unknown" if you query a non enabled service
  if [ "$bootstatus" = 'disabled' ]; then
    bootstatus=' (disabled on boot)'
    [ $status = 'unknown' ] && status='inactive'
  else
    bootstatus=''
  fi
  if [ "$status" = 'inactive' ] && [ -z "$bootstatus" ]; then
    failedlist=("${failedlist[@]}" "$1")
  fi

  if [ "$status" = 'failed' ] && [ -z "$bootstatus" ]; then
    failedlist=("${failedlist[@]}" "$1")
  fi
  printf '%s\n' "$status$bootstatus"
}

if test -z "$vr"; then
  printf "vRouter is NOT PRESENT\n"
fi

if test -z "$agent"; then
  printf "vRouter agent is NOT PRESENT\n"
else
  printf "== Contrail vRouter ==\n"
    check_svc supervisor-vrouter 
    (supervisorctl -s http://localhost:9005 status | grep "refused connection" > /dev/null) ||  supervisorctl -s http://localhost:9005 status| cut  -c1-40 | sed -e 's/   RUNNING/active/g' | sed -e 's/   STOPPED/inactive/g' | sed -e 's/   FATAL/failed/g'
fi

if test -z "$clibs"; then
  printf "Contrail libs are NOT PRESENT\n"
fi

if test "$control"; then
  printf "== Contrail Control ==\n"
   check_svc supervisor-control
   (supervisorctl -s http://localhost:9003 status | grep "refused connection" > /dev/null) ||  supervisorctl -s http://localhost:9003 status| cut  -c1-40 | sed -e 's/   RUNNING/active/g' | sed -e 's/   STOPPED/inactive/g' | sed -e 's/   FATAL/failed/g'
fi

if test "$analytics"; then
  printf "== Contrail Analytics ==\n"
  check_svc supervisor-analytics
  (supervisorctl -s http://localhost:9002 status | grep "refused connection" > /dev/null) ||  supervisorctl -s http://localhost:9002 status| cut  -c1-40 | sed -e 's/   RUNNING/active/g' | sed -e 's/   STOPPED/inactive/g' | sed -e 's/   FATAL/failed/g'
fi

if test "$capi"; then
  printf "== Contrail Config ==\n"
  check_svc supervisor-config
  (supervisorctl -s http://localhost:9004 status | grep "refused connection" > /dev/null) ||  supervisorctl -s http://localhost:9004 status| cut  -c1-40 | sed -e 's/   RUNNING/active/g' | sed -e 's/   STOPPED/inactive/g' | sed -e 's/   FATAL/failed/g'
fi

if test "$cwebui"; then
  printf "== Contrail Web UI ==\n"
  check_svc supervisor-webui
  (supervisorctl -s http://localhost:9008 status | grep "refused connection" > /dev/null) ||  supervisorctl -s http://localhost:9008 status| cut  -c1-40 | sed -e 's/   RUNNING/active/g' | sed -e 's/   STOPPED/inactive/g' | sed -e 's/   FATAL/failed/g'
fi

if test "$database"; then
  printf "== Contrail Database ==\n"
  check_svc supervisord-contrail-database
  (supervisorctl -s http://localhost:9007 status | grep "refused connection" > /dev/null) ||  supervisorctl -s http://localhost:9007 status| cut  -c1-40 | sed -e 's/   RUNNING/active/g' | sed -e 's/   STOPPED/inactive/g' | sed -e 's/   FATAL/failed/g'
fi

# TODO Not yet implemented in Ubuntu
dpkg_info() {
   qformat='%{NAME} %{VERSION} %{RELEASE}'
   printf "%-27s %-8s %-11s " $(rpm -qa --queryformat "$qformat" "$@")
   summary='%{SUMMARY}'
   printf "$(rpm -qa --queryformat "$summary" "$@")\n"
}

if [[ "$dpkg_info" -eq 1 || "detailed" -eq 1 ]]; then
  printf "\n==========Contrail installed list===========\n"
  printf "%-27s %-8s %-11s %-10s\n" "Name" "Release" "Version" "Summary" 
  dpkg_info contrail-vrouter
  dpkg_info contrail-libs
  dpkg_info contrail-control
  dpkg_info contrail-analytics
  dpkg_info contrail-config
  dpkg_info openstack-quantum-contrail
  dpkg_info contrail-web-core
  dpkg_info redis
  dpkg_info contrail-database
fi

if [ ${#failedlist[@]} -gt 0 ]; then
  printf "\n=========Failed service list=============\n"
fi

for i in ${failedlist[@]}
do
  if [ "$systemctl" ]; then
     i+=".service"
     systemctl status $i
  else
     service $i status
  fi
done

cnt=$(ls -la /var/crashes/core.* 2>/dev/null | wc -l)
if [ "$cnt" -gt 0 ]; then
  printf "\n========Run time service failures=============\n"
  ls -ltr /var/crashes/core.*
fi

