#!/bin/sh
#
# Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
#

usage () {
  echo "usage: $0 -[hdei]"
  echo " Default status will be given with all the options"
  echo "-i Gives the package information"
  echo "-d Detailed status"
  echo "-e Errors"
}

detailed=0
errors=0
rpm_info=0

while getopts ':hdei?' OPTION
do
  case $OPTION in
  d) detailed=1
     break ;;
  e) errors=1
     break ;;
  i) rpm_info=1
     break ;;
  h) usage
     exit 2
     ;;
  ?) usage
     exit 2
     ;;
  esac
done

systemctl --version >/dev/null 2>&1 && systemctl=1
[ "$systemctl" ] || RUNLEVEL=$(LANG=C who -r | sed 's/.*run-level \([0-9]\).*/\1/')

rpm -q contrail-libs > /dev/null && clibs='clibs'
rpm -q contrail-control > /dev/null && control='control'
rpm -q contrail-analytics > /dev/null && analytics='analytics'
rpm -q contrail-agent > /dev/null && agent='agent'
rpm -q contrail-api > /dev/null && capi='capi'
rpm -q openstack-quantum-contrail > /dev/null && cquantum='cquantum'
rpm -q contrail-web-core > /dev/null && cwebui='cwebui'
rpm -q cassandra > /dev/null && database='database'
lsmod | grep vrouter > /dev/null && vr='vr'

declare -a failedlist

service_installed() {
  PAGER= systemctl show $1.service >/dev/null 2>&1 ||
  chkconfig --list $1 >//dev/null 2>&1
}

service_enabled() {
  if [ "$systemctl" ]; then
    systemctl --quiet is-enabled $1.service 2>/dev/null
  else
    chkconfig --levels $RUNLEVEL "$1"
  fi
}

check_sysv_svc() {

  printf '%-30s' "$1:"
  bootstatus=$(service_enabled $1 && echo enabled || echo disabled)
  status=$(service $1 status >/dev/null 2>/dev/null && echo active || echo inactive)
  if [ "$bootstatus" = 'disabled' ]; then
    bootstatus=' (disabled on boot)'
  else
    bootstatus=''
  fi
  if [ "$status" = 'inactive' ] && [ -z "$bootstatus" ]; then
    failedlist=("${failedlist[@]}" "$1")
  fi
  if [ "$status" = 'failed' ] && [ -z "$bootstatus" ]; then
    failedlist=("${failedlist[@]}" "$1")
  fi
  printf '%s\n' "$status$bootstatus"
}

check_svc() {

  if [ ! "$systemctl" ]; then
    check_sysv_svc "$@"
    return
  fi

  printf '%-30s' "$1:"
  bootstatus=$(service_enabled $1 && echo enabled || echo disabled)
  status=$(systemctl is-active $1.service 2>/dev/null)
  # For "simple" systemd services you get
  # "unknown" if you query a non enabled service
  if [ "$bootstatus" = 'disabled' ]; then
    bootstatus=' (disabled on boot)'
    [ $status = 'unknown' ] && status='inactive'
  else
    bootstatus=''
  fi

  if [ "$status" = 'inactive' ] && [ -z "$bootstatus" ]; then
    failedlist=("${failedlist[@]}" "$1")
  fi

  if [ "$status" = 'failed' ] && [ -z "$bootstatus" ]; then
    failedlist=("${failedlist[@]}" "$1")
  fi
  printf '%s\n' "$status$bootstatus"
}

if test -z "$vr"; then
  printf "VRouter is NOT PRESENT\n"
fi

if test -z "$agent"; then
  printf "Agent is NOT PRESENT\n"
else
  printf "== Agent ==\n"
  check_svc contrail-vrouter 
fi

if test -z "$clibs"; then
  printf "Contril libs are NOT PRESENT\n"
fi

if test "$control"; then
  printf "== Control node ==\n"
  check_svc contrail-control
  check_svc contrail-named
  check_svc contrail-dns
fi

if test "$analytics"; then
  printf "== Analytics ==\n"
  check_svc supervisor-analytics
  supervisorctl -s http://localhost:9002 status
fi

if test "$capi"; then
  printf "== Contrail API server ==\n"
  check_svc contrail-api
  check_svc contrail-schema
  check_svc contrail-svc-monitor
  check_svc contrail-discovery
fi

if test "$cquantum"; then
  printf "== Contrail quantum ==\n"
fi

if test "$cwebui"; then
  printf "== Contrail Web UI ==\n"
  check_svc contrail-webui
  check_svc contrail-webui-middleware
fi

if test "$database"; then
  printf "== Database ==\n"
  check_svc cassandra
fi

rpm_info() {
   qformat='%{NAME} %{VERSION} %{RELEASE}'
   printf "%-27s %-8s %-11s " $(rpm -qa --queryformat "$qformat" "$@")
   summary='%{SUMMARY}'
   printf "$(rpm -qa --queryformat "$summary" "$@")\n"
}

if [[ "$rpm_info" -eq 1 || "detailed" -eq 1 ]]; then
  printf "\n==========Contrail installed list===========\n"
  printf "%-27s %-8s %-11s %-10s\n" "Name" "Release" "Version" "Summary" 
  rpm_info contrail-agent
  rpm_info contrail-libs
  rpm_info contrail-control
  rpm_info contrail-analytics
  rpm_info contrail-api
  rpm_info openstack-quantum-contrail
  rpm_info contrail-web-core
  rpm_info redis
  rpm_info cassandra
fi

if [ ${#failedlist[@]} -gt 0 ]; then
  printf "\n=========Failed service list=============\n"
fi

for i in ${failedlist[@]}
do
  if [ "$systemctl" ]; then
     i+=".service"
     systemctl status $i
  else
     service $i status
  fi
done

cnt=$(ls -la /var/crashes/core.* 2>/dev/null | wc -l)
if [ "$cnt" -gt 0 ]; then
  printf "\n========Run time service failures=============\n"
  ls -ltr /var/crashes/core.*
fi

