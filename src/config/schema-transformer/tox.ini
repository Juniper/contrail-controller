# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
minversion = 1.6
# Test envs list buid and run by default
envlist = pep8,py27

# Common env configuration
[testenv]
install_command =
    pip install --no-cache-dir \
        --find-links file://{toxinidir}/../../config/common/dist/ \
        --find-links file://{toxinidir}/../../api-lib/dist/ \
        --find-links file://{toxinidir}/../../tools/sandesh/library/python/dist/ \
        --find-links file://{toxinidir}/../../sandesh/common/dist/ \
        --find-links file://{toxinidir}/../../../noarch/config/svc-monitor/dist/ \
        --find-links file://{toxinidir}/../../config/api-server/dist/ {opts} {packages}
whitelist_externals =
    sh
    find
commands =
    find {toxinidir} -type f -name "*.log*" -delete
    find {toxinidir} -type f -name "*.db" -delete
    - stestr run --abbreviate --slowest {posargs}
    sh -c "stestr last --subunit > {toxinidir}/testr.subunit"
    subunit2html {toxinidir}/testr.subunit {toxinidir}/test-results.html
    - sh -c "subunit2junitxml --output-to={toxinidir}/test-results.xml < {toxinidir}/testr.subunit"
    stestr last
deps =
    junitxml
    os-testr
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/test-requirements.txt

# Sandbox env where a command can be run, ie. "tox -evenv pip install ipdb"
[testenv:venv]
commands = {posargs}

# PEP8 checks env
[testenv:pep8]
basepython = python3
deps =
    flake8
    flake8-import-order
    flake8-blind-except
    flake8-builtins
    flake8-docstrings
    flake8-rst-docstrings
    flake8-logging-format
commands =
    flake8

# Test code coverage env
[testenv:cover]
setenv =
    PYTHON = coverage run --source . --parallel-mode
deps =
    {[testenv]deps}
    coverage
commands =
    stestr run --no-subunit-trace {posargs}
    coverage combine
    coverage html -d covhtml -i --title="Contrail Schema Transformer coverage report"
    coverage xml -o covhtml/coverage.xml
    coverage report

[flake8]
show-source = True
ignore = W504,D100,D101,D102,D103,D104,D105,D107,A002
import-order-style = google
application-import-names = schema_transformer
exclude = .tox,.eggs,doc
filename =
    */resources/*.py
    */tests/*.py
    */__init__.py
    */db.py
    */logger.py
    */st_amqp.py
    */to_bgp.py
    */utils.py
