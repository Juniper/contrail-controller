/*
 * Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
 */

/**
 *  Message definitions for IO and EventManager modules.
 *
 * The EventManager module is responsible for handling IO and timer events
 * in a daemon.
 *
 * The IO module is responsible for handling TCP and UDP IO server and client
 * in a daemon.
 */

/**
 * @description: Trace message for EventManager module debugging
 * @type: Trace
 * @severity: DEBUG
 */
trace sandesh EventManagerMessageTrace {
    1: string Message;
}

/**
 * @description: System log for EventManager module
 * @type: Error: An error occurred
 * @severity: ERROR
 * @cause: An internal software failure occurred
 * @action: Contact your technical support representative
 */
systemlog sandesh EventManagerMessageLog {
    1: string Message;
}

/**
 * @description: Trace message for TCP message debugging
 * @type: Trace
 * @severity: DEBUG
 */
trace sandesh TcpMessageTrace {
    /** Direction is send '>' or receive '<' */
    1: string Direction;
    2: string Message;
}

/**
 * @description: System log for TCP messages
 * @type: Event
 * @severity: DEBUG
 * @cause: Normal operation
 */
systemlog sandesh TcpMessageLog {
    /** Direction is send '>' or receive '<' */
    1: string Direction;
    2: string Message;
}

/**
 * @description: Trace message for TCP server module debugging
 * @type: Trace
 * @severity: DEBUG
 */
trace sandesh TcpServerMessageTrace {
    1: "Server";
    /** Name of server is usually the local endpoint */
    2: string ServerName;
    /** Direction is send '>' or receive '<' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: System log for TCP server module
 * @type: Error: An error occurred
 * @severity: ERROR
 * @cause: An internal software failure occurred
 * @action: Contact your technical support representative
 */
systemlog sandesh TcpServerMessageLog {
    1: "Server";
    /** Name of server is usually the local endpoint */
    2: string ServerName;
    /** Direction is send '>' or receive '<' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: Trace message for TCP session debugging
 * @type: Trace
 * @severity: DEBUG
 */
trace sandesh TcpSessionMessageTrace {
    1: "Session";
    /**
     * Session name is usually the contactenation
     * of local and remote endpoints
     */
    2: string SessionName;
    /** Direction is send '>' or receive '<' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: System log for TCP session
 * @type: Error / Event
 * @severity: ERROR / DEBUG
 * @cause: Normal operation / An internal software failure occurred
 * @action: Contact your technical support representative in case of Error
 */
systemlog sandesh TcpSessionMessageLog {
    1: "Session";
    /**
     * Session name is usually the contactenation
     * of local and remote endpoints
     */
    2: string SessionName;
    /** Direction is send '>' or receive '<' */
    3: string Direction;
    4: string Message;
}

/**
 * Statistics representing IO activity related to a socket
 */
struct SocketIOStats {
    1: u64 bytes;
    2: u64 calls;
    3: double average_bytes;
    4: string blocked_duration;
    5: u64 blocked_count;
    6: string average_blocked_duration;
    7: u64 errors;
}

/**
 * Statistics representing IO activitiy related to a particular
 * message on an endpoint
 */
struct SocketEndpointMessageStats {
    1: string endpoint_name;
    2: string message_name;
    3: u64 messages;
    4: u64 bytes;
    5: u64 errors;
    6: u64 last_timestamp;
}

/**
 * @description: Trace message for UDP message debugging
 * @type: Trace
 * @severity: DEBUG
 */
trace sandesh UdpMessageTrace {
    /** Direction is send '>' or receive '<' */
    1: string Direction;
    2: string Message;
}

/**
 * @description: System log for UDP messages
 * @type: Event
 * @severity: DEBUG
 * @cause: Normal operation
 */
systemlog sandesh UdpMessageLog {
    /** Direction is send '>' or receive '<' */
    1: string Direction;
    2: string Message;
}

/**
 * @description: Trace message for UDP server module debugging
 * @type: Trace
 * @severity: DEBUG
 */
trace sandesh UdpServerMessageTrace {
    1: "Server";
    /** Name of server is usually the local endpoint */
    2: string ServerName;
    /** Direction is send '>' or receive '<' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: System log for UDP server module
 * @type: Error: An error occurred
 * @severity: ERROR
 * @cause: An internal software failure occurred
 * @action: Contact your technical support representative
 */
systemlog sandesh UdpServerMessageLog {
    1: "Server";
    /** Name of server is usually the local endpoint */
    2: string ServerName;
    /** Direction is send '>' or receive '<' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: Trace message for UDP session debugging
 * @type: Trace
 * @severity: DEBUG
 */
trace sandesh UdpSessionMessageTrace {
    1: "Session";
    /**
     * Session name is usually the contactenation
     * of local and remote endpoints
     */
    2: string SessionName;
    /** Direction is send '>' or receive '<' */
    3: string Direction;
    4: string Message;
}

/**
 * @description: System log for UDP session
 * @type: Event
 * @severity: DEBUG
 * @cause: Normal operation
 */
systemlog sandesh UdpSessionMessageLog {
    1: "Session";
    /**
     * Session name is usually the contactenation
     * of local and remote endpoints
     */
    2: string SessionName;
    /** Direction is send '>' or receive '<' */
    3: string Direction;
    4: string Message;
}

