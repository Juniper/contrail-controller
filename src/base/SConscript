#
# Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
#

# -*- mode: python; -*-

Import('BuildEnv')

env = BuildEnv.Clone()

except_env = BuildEnv.Clone()
except_env.Append(CPPPATH = env['TOP'])
except_env.CppEnableExceptions()

timer_env = BuildEnv.Clone()
timer_env.AppendUnique(CCFLAGS='-DBOOST_CHRONO_HEADER_ONLY')

TaskInfoSandeshGenFiles = env.SandeshGenCpp('sandesh/task.sandesh')
TaskInfoSandeshGenSrcs = env.ExtractCpp(TaskInfoSandeshGenFiles)
taskinfo_sandesh_files_ = []
for src in TaskInfoSandeshGenSrcs:
    objname = src.replace('.cpp', '.o')
    obj = env.Object(objname, src)
    taskinfo_sandesh_files_.append(obj)

CpuInfoSandeshGenFiles = env.SandeshGenCpp('sandesh/cpuinfo.sandesh')
CpuInfoSandeshGenSrcs = env.ExtractCpp(CpuInfoSandeshGenFiles)

cpuinfo_sandesh_files_ = []
for src in CpuInfoSandeshGenSrcs:
    objname = src.replace('.cpp', '.o')
    obj = env.Object(objname, src)
    cpuinfo_sandesh_files_.append(obj)

libcpuinfo = env.Library('cpuinfo', ['cpuinfo.cc'] + cpuinfo_sandesh_files_)

task = except_env.Object('task.o', 'task.cc')
timer = timer_env.Object('timer.o', 'timer.cc')

ProcessInfoSandeshGenFiles = env.SandeshGenCpp('sandesh/process_info.sandesh')
ProcessInfoSandeshGenSrcs = env.ExtractCpp(ProcessInfoSandeshGenFiles)

libprocessinfo = env.Library('process_info',
                          ['connection_info.cc'] +
                          ProcessInfoSandeshGenSrcs)

VersionInfoSandeshGenFiles = env.SandeshGenCpp('sandesh/version.sandesh')
VersionInfoSandeshGenSrcs = env.ExtractCpp(VersionInfoSandeshGenFiles)

env.Append(CPPPATH = env['TOP'])
libbase = env.Library('base',
                      [VersionInfoSandeshGenSrcs +
                      ['backtrace.cc',
                       'contrail_ports.cc',
                       'misc_utils.cc',
                       'bitset.cc',
                       'index_allocator.cc',
                       'label_block.cc',
                       'lifetime.cc',
                       'logging.cc',
                       'proto.cc',
                       task,
                       'task_annotations.cc',
                       'task_sandesh.cc',
                       'task_trigger.cc',
                       'tdigest.c',
                       timer,
                       taskinfo_sandesh_files_,
                       ]])
env.Requires(libbase, '#/build/lib/liblog4cplus.a')
env.Requires(libbase, '#/build/include/boost')

env.SConscript('test/SConscript', exports='BuildEnv', duplicate = 0)
