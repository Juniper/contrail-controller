/*
 * Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
 */
 
/* 
 * flow.sandesh
 *
 * Flow sandesh definitions
 */

/**
 * @description:This structure contains a map of all the remote
 * session end points connected to this session. key uniquely
 * identifies the remote session end point and value is the
 * traffic info, security info, to that end point
 */

struct RemoteSessionVal {
    1: i64 sampled_tx_bytes;
    2: i64 sampled_tx_pkts;
    3: i64 sampled_rx_bytes;
    4: i64 sampled_rx_pkts;
    5: i64 logged_tx_bytes;
    6: i64 logged_tx_pkts;
    7: i64 logged_rx_bytes;
    8: i64 logged_rx_pkts;
    9: string forward_flow_uuid;
   10: string reverse_flow_uuid;
   11: i16 local_tcp_flags;
   12: i16 reverse_tcp_flags;
   /** @display_name: The VM to which session belongs, same in both direction*/
   13: string vm;
   /** @display_name: The session set up at same time in both direction*/
   14: i64 setup_time;
   /** @display_name: The session torn down at same time in both direction*/
   15: i64 teardown_time;
   16: string action;
   17: string reverse_action;
   18: string sg_rule_uuid;
   19: string reverse_sg_rule_uuid;
   20: string other_vrouter_ip;
   21: string nw_ace_uuid;
   22: string reverse_nw_ace_uuid;
   23: string reverse_vrouter_ip;
   24: u16 underlay_proto;
   25: u16 underlay_source_port;
   26: u16 reverse_underlay_source_port;
   27: string drop_reason;
   28: string reverse_drop_reason;
}

/**
 * @description: structure to identify the local session endpoint. The ip
 * is the local IP and dport is serverport regardless of whether we are
 * reporting the session as a client or server
 */

// here key is 32 bytes where 16 MSB are Port and 16 LSB are Protocol
typedef map<u32, RemoteSessionVal> sessionProtPortMap

struct SessionAggInfo {
    1: i64 sampled_tx_bytes;
    2: i64 sampled_tx_pkts;
    3: i64 sampled_rx_bytes;
    4: i64 sampled_rx_pkts;
    5: i64 logged_tx_bytes;
    6: i64 logged_tx_pkts;
    7: i64 logged_rx_bytes;
    8: i64 logged_rx_pkts;
    9: map<ipaddr, sessionProtPortMap> sessionMap;
}

flowlog sandesh SessionEndpoint {
    1: string vmi;
    2: string vn;
    3: string deployment;
    4: string tier;
    5: string application;
    6: string site;
    7: set<string> labels;
    8: string remote_deployment;
    9: string remote_tier;
    10: string remote_application;
    11: string remote_site;
    12: set<string> remote_labels;
    13: string remote_vn;
    /** @display_name: Whether the session endpoint is a client or server*/
    14: bool is_client_session;
    /** @display_name: Whether the VMI belongs to a service instance*/
    15: bool is_si;
    16: string remote_prefix;
    17: string vrouter_ip;
    /**
     *  @display_name: key is local session end point[sandesh keys have to be primitive values, hence the endpoint is defined as (protocol-port, ip address) and val is remote session end point
     *  here key is 32 bytes where 16 MSB are Port and 16 LSB are Protocol
     */
    18: map<u32, map<ipaddr, SessionAggInfo>> sess_agg_map;
}

struct FlowLogData {
    1: string             flowuuid;
    2: byte               direction_ing;
    3: string    sourcevn;
    4: ipaddr    sourceip;
    5: string    destvn;
    6: ipaddr    destip;
    7: byte      protocol;
    8: i16       sport;
    9: i16       dport;
    11: optional u16      tcp_flags;
    12: optional string    vm;
    16: optional string    reverse_uuid;
    17: optional i64       setup_time;
    18: optional i64       teardown_time;
  
    23: optional i64       bytes;
    24: optional i64       packets;
    26: optional i64       diff_bytes;
    27: optional i64       diff_packets;
    28: optional string    action;
    29: optional string    sg_rule_uuid;
    30: optional string    nw_ace_uuid;
    31: optional string    vrouter_ip;
    32: optional string    other_vrouter_ip;
    33: optional u16       underlay_proto;
    34: optional u16       underlay_source_port;
    35: optional string    vmi_uuid;
    36: optional string    drop_reason;
    37: optional bool      forward_flow;
}

flowlog sandesh FlowLogDataObject {
    1: list<FlowLogData>       flowdata;
}
