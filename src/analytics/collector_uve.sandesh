/*
 * Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
 */

/**
 *  Definitions of structures added by collector related to data received from
 *  the sandesh generators
 */

include "io/io.sandesh"
include "sandesh/library/common/sandesh_uve.sandesh"
include "database/gendb.sandesh"
include "database/cassandra/cql/cql.sandesh"

/**
 * structure to store sandesh stats on a per message type
 */
struct SandeshStats {
    1: string                              message_type
    2: i64                                 messages
    3: i64                                 bytes
    4: u64                                 last_msg_timestamp
}

/**
 * structure to store sandesh stats on a per level
 */
struct SandeshLogLevelStats {
    1: string     level 
    2: u64        messages
    3: u64        bytes
    4: u64        last_msg_timestamp
}

/**
 * structure to store list of sandesh stats
 */
struct SandeshStatsInfo {
    1: string                          hostname
    2: list<SandeshStats>              msgtype_stats
    3: list<SandeshLogLevelStats>      log_level_stats 
}

/**
 * structure to store generator's connection info
 */
struct GeneratorInfoAttr {
    1: u32                                 connects
    5: u64                                 connect_time
    2: u32                                 resets
    6: u64                                 reset_time
    4: bool                                in_clear
}

struct GeneratorInfo {
    1: string                              hostname
    3: GeneratorInfoAttr                   gen_attr
}

/**
 * @description: This structure send statistics data related to adds to the Database
 * on a per generator basis
 * @object: generator
 */
objectlog sandesh GeneratorDbStats {
    1: string                             name (key="ObjectGeneratorInfo")
    /** @display_name:Generator Database Table Statistics*/
    2: optional list<gendb.DbTableInfo>   table_info (tags=".table_name")
    /** @display_name:Generator Database Errors*/
    3: optional gendb.DbErrors            errors (tags="")
    /** @display_name:Generator Statistics Database Table*/
    4: optional list<gendb.DbTableInfo>   statistics_table_info (tags=".table_name")
}

/**
 * This structure send statistics data related to Database
 * additions on a per generator basis
 */
struct ModuleServerState {
    1: string                              name (key="ObjectGeneratorInfo")
    2: optional bool                       deleted
    3: optional list<SandeshStatsInfo>     msg_stats (aggtype="union")
    4: optional list<GeneratorInfo>        generator_info (aggtype="union")
    5: optional u64                        sm_queue_count
    6: optional sandesh_uve.SandeshStateMachineStats sm_stats
    7: optional u64                        db_queue_count
    8: optional u64                        db_enqueues
    9: optional sandesh_uve.SandeshSessionStats session_stats
    10: optional io.SocketIOStats          session_rx_socket_stats
    11: optional io.SocketIOStats          session_tx_socket_stats
    12: optional sandesh_uve.SandeshGeneratorBasicStats  sm_msg_stats
    13: optional string                    db_drop_level
    14: optional list<SandeshStats>        db_dropped_msg_stats
    15: optional string                    sm_drop_level
}

/**
 * @description: UVE to send generator statistics
 * @object: generator
 */
uve sandesh SandeshModuleServerTrace {
    1: ModuleServerState                   data
}

/**
 * structure to store generator summary
 */
struct GeneratorSummaryInfo {
    1: string                              source
    2: string                              module_id    
    3: string                              state
    4: string                              instance_id
    5: string                              node_type
    6: u64                                 sm_queue_count
    7: optional u64                        db_queue_count
    8: optional string                     db_drop_level
    9: optional bool                       sm_back_pressure
    10: optional u64                       max_sm_queue_count
}

/**
 * structure to store collector errors
 */
struct CollectorStats {
    1: u64                                 no_session_error
    2: u64                                 no_generator_error
    3: u64                                 redis_error
    4: u64                                 session_mismatch_error
    5: u64                                 sandesh_type_mismatch_error
}

/**
 * @description: This structure is used to send statistics data related to
 * database operations in the contrail-collector
 * @object: analytics-node
 */
objectlog sandesh CollectorDbStats {
    1: string                             name (key="ObjectCollectorInfo")
    /** @display_name:Collector Database Table Statistics*/
    2: optional list<gendb.DbTableInfo>   table_info (tags=".table_name")
    /** @display_name:Collector Database Errors*/
    3: optional gendb.DbErrors            errors (tags="")
    /** @display_name:Collector Statistics Database Table*/
    4: optional list<gendb.DbTableInfo>   statistics_table_info (tags=".table_name")
    /** @display_name:Collector Database CQL Request Statistics*/
    5: optional cql.DbStats               cql_stats (tags="")
}

/**
 * @description: This structure used to send statistics data related to Protobuf
 * Receiver in the contrail-collector
 * @object: analytics-node
 */
objectlog sandesh ProtobufCollectorStats {
    1: string                                       name (key="ObjectCollectorInfo")
    /** @display_name:Analytics Protobuf Collector Receive Socket Statistics*/
    2: optional list<io.SocketIOStats>              rx_socket_stats (tags="")
    /** @display_name:Analytics Protobuf Collector Transmit Socket Statistics*/
    3: optional list<io.SocketIOStats>              tx_socket_stats (tags="")
    /** @display_name:Analytics Protobuf Collector Receive Message Statistics*/
    4: optional list<io.SocketEndpointMessageStats> rx_message_stats (tags=".endpoint_name,.message_name")
    /** @display_name:Analytics Protobuf Collector Database Table*/
    5: optional list<gendb.DbTableInfo>             db_table_info (tags=".table_name")
    /** @display_name:Analytics Protobuf Collector Database Errors*/
    6: optional list<gendb.DbErrors>                db_errors (tags="")
    /** @display_name:Analytics Protobuf Collector Statistics Database Table*/
    7: optional list<gendb.DbTableInfo>             db_statistics_table_info (tags=".table_name")
    8: optional u64                                 db_queue_count
    9: optional u64                                 db_enqueues
}

/**
 * @description: sandesh request to get collector info through introspect
 */
request sandesh ShowCollectorServerReq {
}

/**
 * @description: sandesh response to provide collector info through introspect
 */
response sandesh ShowCollectorServerResp {
    1: io.SocketIOStats                    rx_socket_stats
    2: io.SocketIOStats                    tx_socket_stats
    3: u64                                 num_generators
    4: list<GeneratorSummaryInfo>          generators
    5: CollectorStats                      stats
    6: optional cql.Metrics                cql_metrics
    7: optional list<gendb.DbTableInfo>    table_info
    8: optional gendb.DbErrors             errors
    9: optional list<gendb.DbTableInfo>    statistics_table_info
}

// This struct is part of the CollectorInfo UVE. (key is hostname on which this
// instance of Vizd is running)
// This part of the UVE externally refers to all generator attached to this instance
// of Vizd.
//
// - Vizd will update the generator_infos attribute periodically
//
/**
 * structure to carry generator info and other info that collector sends
 */
struct CollectorState {
    1: string                              name (key="ObjectCollectorInfo")
    2: optional bool                       deleted
    4: optional list<GeneratorSummaryInfo> generator_infos
    5: optional string                     build_info
    6: optional list<string>               self_ip_list
    7: optional list<string>               core_files_list
    8: optional io.SocketIOStats           rx_socket_stats
    9: optional io.SocketIOStats           tx_socket_stats
}

/**
 * @description: UVE to send generator info and other info from collector
 * @object: analytics-node
 */
uve sandesh CollectorInfo {
    1: CollectorState                      data
}


trace sandesh publish_uve_update {
    1: string source
    2: string mdule
    3: string type
    4: string key
    5: string attr
    6: bool success
    7: string node_type
    8: string instance_id
}

trace sandesh publish_uve_delete {
    1: string source
    2: string mdule
    3: string type
    4: string key
    5: u32 seq
    6: bool success
    7: string node_type
    8: string instance_id
}

trace sandesh generator_getseq {
    1: string source
    2: string mdule
    3: bool success
}
trace sandesh generator_deluves {
    1: string source
    2: string mdule
    3: bool success    
}

/**
 * @description: sandesh request to set Database Queue params
 */
request sandesh DbQueueParamsSet {
    1: optional bool high;
    2: optional u32 queue_count;
    3: optional string drop_level;
}    

/**
 * @description: sandesh request to reset Database Queue params
 */
request sandesh DbQueueParamsReset {
}

/**
 * @description: sandesh request to get Database Queue params
 */
request sandesh DbQueueParamsStatus {
}

/**
 * @description: sandesh request to set State Machine Queue params
 */
request sandesh SmQueueParamsSet {
    1: optional bool high;
    2: optional u32 queue_count;
    3: optional string drop_level;
}    

/**
 * @description: sandesh request to reset State Machine Queue params
 */
request sandesh SmQueueParamsReset {
}

/**
 * @description: sandesh request to get State Machine Queue params
 */
request sandesh SmQueueParamsStatus {
}

struct QueueParams {
    1: bool high;
    2: u32 queue_count;
    3: string drop_level;
}

response sandesh QueueParamsError {
    1: string error;
}

/**
 * @description: sandesh response to return State Machine Queue params
 */
response sandesh QueueParamsResponse {
    1: list<QueueParams> info;
}

/**
 * structure to carry statistics data for sandesh messages on a
 * per generator basis
 */
struct SandeshMessageInfo {
     1: string type
     2: string level
     3: u64    messages
     4: u64    bytes
}

/**
 * @description: objectlog structure to send statistics data for sandesh
 * messages on a per generator basis
 * @object: generator
 */
objectlog sandesh SandeshMessageStat {
    1: string                            name (key="ObjectGeneratorInfo")
    /** @display_name:Collector Message Stats*/
    2: optional list<SandeshMessageInfo> msg_info (tags=".type,.level")
}

request sandesh DisableFlowCollectionRequest {
    1: optional bool disable
}

request sandesh FlowCollectionStatusRequest {
}

response sandesh FlowCollectionStatusResponse {
    1: bool disable
}
