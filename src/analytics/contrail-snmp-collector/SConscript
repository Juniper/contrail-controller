# -*- mode: python; -*-

#
# Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
#

import sys

Import('AnalyticsEnv')
env = AnalyticsEnv.Clone()

sources = [
    'MANIFEST.in',
    'CHANGES.txt',
    'LICENSE.txt',
    'README.txt',
    'contrail-snmp-collector.conf',
    'requirements.txt',
    'setup.py',
    'contrail_snmp_collector/__init__.py',
    'contrail_snmp_collector/main.py',
    'contrail_snmp_collector/snmpcfg.py',
    'contrail_snmp_collector/snmpctrlr.py',
    'contrail_snmp_collector/snmp.py',
    'contrail_snmp_collector/snmpuve.py',
    'contrail_snmp_collector/device_config.py',
    'contrail_snmp_collector/scanner.py',
    ]

mibs = Glob('mibs/*')

prouter_pkg = env.SandeshGenPy('prouter.sandesh', 'contrail_snmp_collector/sandesh/', False)
nodeinfo_pkg = env.SandeshGenPy('#controller/src/base/sandesh/nodeinfo.sandesh', 'contrail_snmp_collector/sandesh/', False)
cpuinfo_pkg = env.SandeshGenPy('#controller/src/base/sandesh/cpuinfo.sandesh', 'contrail_snmp_collector/sandesh/nodeinfo/', False)
process_info_pkg = env.SandeshGenPy('#controller/src/base/sandesh/process_info.sandesh', 'contrail_snmp_collector/sandesh/nodeinfo/', False)

sdist_depends = [ prouter_pkg, nodeinfo_pkg, cpuinfo_pkg, process_info_pkg ]

version = '0.0.1'
#with open("CHANGES.txt") as f:
#    version = f.read().split(",")[0][1:]

cd_cmd = 'cd ' + Dir('.').path + ' && '
sdist_gen = env.Command('dist/contrail-snmp-collector-' \
        + version + '.tar.gz',
        sources + sdist_depends, cd_cmd + 'python setup.py sdist')
env.Alias('controller/src/analytics/contrail-snmp-collector/' + \
        'contrail_snmp_collector:sdist', sdist_gen)

src_rules = [env.Install(Dir("."),
    '#controller/src/analytics/contrail-snmp-collector/' + f) for f in sources]
src_rules.append(env.Install(Dir("."),
        '#controller/src/opserver/run_tests.sh'))

test_sources = [
    'requirements.txt',
    'test-requirements.txt',
    '.testr.conf',
    '.coveragerc',
    'test',
    ]
src_rules += [env.Install(Dir("."),
    '#controller/src/analytics/contrail-snmp-collector/' + f) \
    for f in test_sources]

import os

buildspace_link = os.environ.get('CONTRAIL_REPO')
if buildspace_link:
    # in CI environment shebang limit exceeds for python
    # in easy_install/pip, reach to it via symlink
    top_path = buildspace_link + '/' + Dir('.').path
    top_dir = Dir(top_path)
else:
    top_dir = Dir('.')

testr_str = 'bash -c "set -o pipefail && cd ' + Dir(top_dir).path + \
            ' && tools_path=../config/common/tests/' + \
            ' omit_list="contrail_snmp_collector/gen_py"' \
            ' build_top=' + Dir(env['TOP']).path + \
            ' CFLAGS= LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:../../../build/lib' \
            ' python setup.py run_tests %s 2>&1 |' \
            ' tee %s.log"'

env.Append(ENV = {'BUILDTOP': Dir(env['TOP']).abspath,
                    'COVERAGERUN': str(env['OPT'] == 'coverage')})

test_depends = [
        '/config/common/dist/cfgm_common-0.1dev.tar.gz',
        '/sandesh/common/dist/sandesh-common-0.1dev.tar.gz',
        '/tools/sandesh/library/python/dist/sandesh-0.1dev.tar.gz',
        '/api-lib/dist/vnc_api-0.1dev.tar.gz',
        '/opserver/dist/opserver-0.1dev.tar.gz',
]


if env['OPT'] == 'coverage':
    test_cmd = env.Command('coveragetest.log', sdist_gen,
            testr_str % ('--coverage', 'coveragetest'))
elif env['PYTESTARG']:
    test_cmd = env.Command(env['PYTESTARG'] + '.log', sdist_gen,
            testr_str % ('--testrun="%s"' % (env['PYTESTARG']),
            env['PYTESTARG']))
else:
    test_cmd = env.Command('test.log', sdist_gen,
            testr_str % ('', 'test'))

env.Depends(test_cmd, [env['TOP']+x for x in test_depends])
env.Depends(test_cmd, src_rules)
env.Alias('tests', test_cmd)
env.Alias('controller/src/analytics/contrail-snmp-collector:test', test_cmd)
env.AlwaysBuild(test_cmd)

doc_files = []
doc_files += env['BASE_DOC_FILES']
doc_files += env['SANDESH_DOC_FILES']
doc_files += env['ANALYTICS_DOC_FILES']
doc_files += env.SandeshGenDoc('prouter.sandesh')

if 'install' in BUILD_TARGETS:
    install_cmd = env.Command(None, sources + sdist_depends,
                              cd_cmd + 'python setup.py install %s' %
                              env['PYTHON_INSTALL_OPT'])
    env.Alias('install', install_cmd)
env.Alias('install', env.Install(env['INSTALL_CONF'],
            'contrail-snmp-collector.conf'))
env.Alias('install', env.Install(env['INSTALL_DOC'] + '/../mibs/netsnmp',
            mibs))
env.Alias('install', env.InstallAs(
            env['INSTALL_INITD'] + '/contrail-snmp-collector',
            'contrail-snmp-collector.initd.supervisord'))
env.Alias('install', env.Install(
            env['INSTALL_CONF'] + '/supervisord_analytics_files',
            'contrail-snmp-collector.ini'))
env.Alias('install', env.Install(
    env['INSTALL_MESSAGE_DOC'] + '/contrail-snmp-collector/', doc_files))
