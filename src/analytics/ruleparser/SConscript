#
# Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
#

# -*- mode: python; -*-
# ruleeng directory

import os
Import('AnalyticsEnv')

env = AnalyticsEnv.Clone()
while env['CCFLAGS'].count('-Werror') > 0:
    env['CCFLAGS'].remove('-Werror')

env.Append(CPPPATH = ['#src/analytics/ruleparser', '#/'+Dir('.').path+'/../../analytics/ruleparser'])

# Lex and Yacc
env.Append(YACCFLAGS = '-d')
env['YACCHXXFILESUFFIX'] = '.hh'
env.CXXFile(target = 'ruleparsery.cc', source = 'ruleparsery.yy')

buildpath = Dir('.').abspath
lexhdrfile = buildpath + '/ruleparserl.h'
lexflags = '--header-file=' + lexhdrfile
env.Append(LEXFLAGS = lexflags)
env.CXXFile(target = 'ruleparserl.cc', source = 'ruleparserl.ll')

env_excep = env.Clone()
env_excep.CppEnableExceptions()

env_nocov = env.Clone()
while env_nocov['CCFLAGS'].count('--coverage') > 0:
    env_nocov['CCFLAGS'].remove('--coverage')

t_ruleparser_obj = env_excep.Object('t_ruleparser.o', 't_ruleparser.cc')

#gcov has issues with flex generated file, skipping coverage for this file
ruleparserl_obj = env_nocov.Object('ruleparserl.o', 'ruleparserl.cc')
env.Library(target = 'ruleparser',
            source = [
                      'ruleutil.cc',
                      'ruleparsery.cc',
                      ruleparserl_obj,
                      t_ruleparser_obj,
                     ])
import sys
if sys.platform != 'darwin':
    env['LIBS'] = []

env.SConscript('test/SConscript', exports='AnalyticsEnv', duplicate = 0)
