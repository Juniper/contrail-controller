/*
 * Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
 */

namespace cpp GenDb

enum DbDataType {
    AsciiType         = 1, // string
    LexicalUUIDType   = 2, // boost::uuids::uuid
    TimeUUIDType      = 3, // boost::uuids::uuid

    /* following are gendb supported and translated */
    Unsigned8Type     = 4, // uint8_t
    Unsigned16Type    = 5, // uint16_t
    Unsigned32Type    = 6, // uint32_t
    Unsigned64Type    = 7, // uint64_t

    DoubleType        = 8, // double
    UTF8Type          = 9, // utf-8 string
    InetType          = 10, // IPv4 or IPv6 addresses
    IntegerType       = 11, // varint
    BlobType          = 12, // blob / bytes
}

const string DATE_TIERED_COMPACTION_STRATEGY = "DateTieredCompactionStrategy";
const string LEVELED_COMPACTION_STRATEGY = "LeveledCompactionStrategy";
const string SIZE_TIERED_COMPACTION_STRATEGY = "SizeTieredCompactionStrategy";

const u32 SCHEMA_REQUEST_TIMEOUT = 40000;
const u32 DEFAULT_REQUEST_TIMEOUT = 12000;

struct DbTableInfo {
    1: string                              table_name
    2: u64                                 reads
    3: u64                                 read_fails
    4: u64                                 writes
    5: u64                                 write_fails
    6: u64                                 write_back_pressure_fails
}

struct DbTableStat {
    2: u64                                 reads
    3: u64                                 read_fails
    4: u64                                 writes
    5: u64                                 write_fails
    6: u64                                 write_back_pressure_fails
}

struct DbTableStat_P_ {
    1: optional DbTableStat value
    2: optional DbTableStat staging
}

struct DbErrors {
    1: u64                                write_tablespace_fails
    2: u64                                read_tablespace_fails
    3: u64                                write_table_fails
    4: u64                                read_table_fails
    5: u64                                write_column_fails
    6: u64                                write_batch_column_fails
    7: u64                                read_column_fails
}

// Secondary/SASI Index
enum ColIndexType {
    NONE = 0,
    INDEX,          // secondary index
    CUSTOM_INDEX    // sasi index
}

// SASI Index modes
enum ColIndexMode {
    NONE = 0,
    PREFIX,
    CONTAINS
}
